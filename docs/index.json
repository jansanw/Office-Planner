[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "scripts/.external-ecmascript.js",
    "static": true,
    "longname": "scripts/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "scripts/blueprint.js",
    "content": "//Classes from core module\nexport {Version} from './core/version.js';\n\nexport {EVENT_SAVED, EVENT_UPDATED, EVENT_LOADING, EVENT_LOADED, EVENT_NEW, EVENT_ACTION, EVENT_GLTF_READY} from './core/events.js';\nexport {EVENT_DELETED, EVENT_MOVED, EVENT_REDRAW, EVENT_CHANGED, EVENT_MODE_RESET} from './core/events.js';\nexport {EVENT_ROOM_NAME_CHANGED} from './core/events.js';\nexport {EVENT_ITEM_LOADING, EVENT_ITEM_LOADED, EVENT_ITEM_REMOVED, EVENT_ITEM_SELECTED, EVENT_ITEM_UNSELECTED} from './core/events.js';\nexport {EVENT_CAMERA_MOVED, EVENT_CAMERA_ACTIVE_STATUS, EVENT_FPS_EXIT, EVENT_CAMERA_VIEW_CHANGE} from './core/events.js';\nexport {EVENT_WALL_CLICKED, EVENT_ROOM_CLICKED, EVENT_NOTHING_CLICKED, EVENT_FLOOR_CLICKED} from './core/events.js';\nexport {EVENT_CORNER_2D_CLICKED, EVENT_CORNER_2D_DOUBLE_CLICKED, EVENT_CORNER_2D_HOVER} from './core/events.js';\nexport {EVENT_WALL_2D_CLICKED, EVENT_WALL_2D_DOUBLE_CLICKED, EVENT_WALL_2D_HOVER} from './core/events.js';\nexport {EVENT_ROOM_2D_CLICKED, EVENT_ROOM_2D_DOUBLE_CLICKED, EVENT_ROOM_2D_HOVER} from './core/events.js';\n\n\nexport {Utils} from './core/utils.js';\nexport {ELogContext, ELogLevel, logContext, isLogging, log} from './core/log.js';\nexport {dimInch, dimFeetAndInch, dimMeter, dimCentiMeter, dimMilliMeter, dimensioningOptions, decimals, Dimensioning} from './core/dimensioning.js';\nexport {cmPerFoot, pixelsPerFoot, cmPerPixel, pixelsPerCm} from './core/dimensioning.js';\n\nexport {configDimUnit, configWallHeight, configWallThickness, Configuration} from './core/configuration.js';\nexport {VIEW_TOP, VIEW_FRONT, VIEW_RIGHT, VIEW_LEFT, VIEW_ISOMETRY} from './core/constants.js';\n\n//Classes from model module\nexport {HalfEdge} from './model/half_edge.js';\nexport {cornerTolerance, Corner} from './model/corner.js';\nexport {defaultFloorPlanTolerance, Floorplan} from './model/floorplan.js';\nexport {Model} from './model/model.js';\nexport {defaultRoomTexture, Room} from './model/room.js';\nexport {Scene} from './model/scene.js';\nexport {defaultWallTexture, Wall} from './model/wall.js';\n\n//Classes from floorplanner module\nexport {floorplannerModes, gridSpacing, gridWidth, gridColor, roomColor, wallWidth, wallWidthHover, edgeColor, edgeColorHover, edgeWidth, deleteColor, cornerRadius, cornerRadiusHover, cornerColor, cornerColorHover, FloorplannerView2D} from './floorplanner/floorplanner_view.js';\nexport {snapTolerance, Floorplanner2D} from './floorplanner/floorplanner.js';\nexport {CarbonSheet} from './floorplanner/carbonsheet.js';\n\n//Classes from items module\nexport {item_types, Factory} from './items/factory.js';\nexport {Metadata} from './items/metadata.js';\nexport {Item} from './items/item.js';\nexport {FloorItem} from './items/floor_item.js';\nexport {WallItem} from './items/wall_item.js';\nexport {WallFloorItem} from './items/wall_floor_item.js';\nexport {OnFloorItem} from './items/on_floor_item.js';\nexport {InWallItem} from './items/in_wall_item.js';\nexport {InWallFloorItem} from './items/in_wall_floor_item.js';\nexport {RoofItem} from './items/roof_item.js';\n\n//Classes from three module\nexport {states, Controller} from './three/controller.js';\nexport {OrbitControls} from './three/orbitcontrols.js';\nexport {FirstPersonControls} from './three/first-person-controls.js';\nexport {PointerLockControls} from './three/pointerlockcontrols.js';\nexport {STATE, Controls} from './three/controls.js';\nexport {Edge} from './three/edge.js';\nexport {Floor} from './three/floor.js';\nexport {Floorplan3D} from './three/floorPlan.js';\nexport {HUD} from './three/hud.js';\nexport {Lights} from './three/lights.js';\nexport {Main} from './three/main.js';\nexport {Skybox} from './three/skybox.js';\n\nexport {OBJExporter} from './exporters/OBJExporter.js';\n\n\n\nimport {Model} from './model/model.js';\nimport {Main} from './three/main.js';\nimport {Floorplanner2D} from './floorplanner/floorplanner.js';\nimport {Configuration, configDimUnit} from './core/configuration.js';\nimport {dimMeter} from './core/dimensioning.js';\n//\n///** VestaDesigner core application. */\nexport class BlueprintJS\n{\n\t/**\n\t * Creates an instance of BlueprintJS. This is the entry point for the application\n\t *\n\t * @param {Object} - options The initialization options.\n\t * @param {string} options.floorplannerElement - Id of the html element to use as canvas. Needs to exist in the html\n\t * @param {string} options.threeElement - Id of the html element to use as canvas. Needs to exist in the html and should be #idofhtmlelement\n\t * @param {string} options.threeCanvasElement - Id of the html element to use as threejs-canvas. This is created automatically\n\t * @param {string} options.textureDir - path to texture directory. No effect\n\t * @param {boolean} options.widget - If widget mode then disable the controller from interactions\n\t * @example\n\t * let blueprint3d = new BP3DJS.BlueprintJS(opts);\n\t */\n\tconstructor(options)\n\t{\n\t\tConfiguration.setValue(configDimUnit, dimMeter);\n\n\t\t/**\n\t\t\t* @property {Object} options\n\t\t\t* @type {Object}\n\t\t**/\n\t\tthis.options = options;\n\t\t/**\n\t\t\t* @property {Model} model\n\t\t\t* @type {Model}\n\t\t**/\n\t\tthis.model = new Model(options.textureDir);\n\t\t/**\n\t\t* @property {Main} three\n\t\t* @type {Main}\n\t\t**/\n\t\tthis.three = new Main(this.model, options.threeElement, options.threeCanvasElement, {});\n\n\t\tif (!options.widget)\n\t\t{\n\t\t\t/**\n\t\t\t* @property {Floorplanner2D} floorplanner\n\t\t\t* @type {Floorplanner2D}\n\t\t\t**/\n\t\t\tthis.floorplanner = new Floorplanner2D(options.floorplannerElement, this.model.floorplan);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.three.getController().enabled = false;\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/blueprint.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "BlueprintJS",
    "memberof": "scripts/blueprint.js",
    "static": true,
    "longname": "scripts/blueprint.js~BlueprintJS",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/blueprint.js",
    "importStyle": "{BlueprintJS}",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/blueprint.js~BlueprintJS",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/blueprint.js~BlueprintJS#constructor",
    "access": "public",
    "description": "Creates an instance of BlueprintJS. This is the entry point for the application",
    "examples": [
      "let blueprint3d = new BP3DJS.BlueprintJS(opts);"
    ],
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "options The initialization options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.floorplannerElement",
        "description": "Id of the html element to use as canvas. Needs to exist in the html"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.threeElement",
        "description": "Id of the html element to use as canvas. Needs to exist in the html and should be #idofhtmlelement"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.threeCanvasElement",
        "description": "Id of the html element to use as threejs-canvas. This is created automatically"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.textureDir",
        "description": "path to texture directory. No effect"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.widget",
        "description": "If widget mode then disable the controller from interactions"
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "options",
    "memberof": "scripts/blueprint.js~BlueprintJS",
    "static": false,
    "longname": "scripts/blueprint.js~BlueprintJS#options",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "model",
    "memberof": "scripts/blueprint.js~BlueprintJS",
    "static": false,
    "longname": "scripts/blueprint.js~BlueprintJS#model",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "three",
    "memberof": "scripts/blueprint.js~BlueprintJS",
    "static": false,
    "longname": "scripts/blueprint.js~BlueprintJS#three",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Main"
        ],
        "spread": false,
        "optional": false,
        "name": "three",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Main"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "floorplanner",
    "memberof": "scripts/blueprint.js~BlueprintJS",
    "static": false,
    "longname": "scripts/blueprint.js~BlueprintJS#floorplanner",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Floorplanner2D"
        ],
        "spread": false,
        "optional": false,
        "name": "floorplanner",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Floorplanner2D"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "scripts/core/configuration.js",
    "content": "import {dimCentiMeter} from './dimensioning.js';\n\n// GENERAL:\n/** The dimensioning unit for 2D floorplan measurements. */\nexport var configDimUnit = 'dimUnit';\n// WALL:\n/** The initial wall height in cm. */\nexport const configWallHeight = 'wallHeight';\n/** The initial wall thickness in cm. */\nexport const configWallThickness = 'wallThickness';\n\nexport var config = {dimUnit: dimCentiMeter, wallHeight: 250, wallThickness: 10};\n\n/** Global configuration to customize the whole system.  */\nexport class Configuration \n{\n\tconstructor()\n\t{\n\t\t/** Configuration data loaded from/stored to extern. */\n//\t\tthis.data = {dimUnit: dimCentiMeter, wallHeight: 250, wallThickness: 10};\n\t}\n\t\n\tstatic getData()\n\t{\n//\t\treturn {dimUnit: dimCentiMeter,wallHeight: 250, wallThickness: 10};\n\t\treturn config;\n\t}\n\n\t/** Set a configuration parameter. */\n\tstatic setValue(key, value) \n\t{\n//\t\tthis.data[key] = value;\n\t\tconfig[key] = value;\n\t}\n\n\t/** Get a string configuration parameter. */\n\tstatic getStringValue(key)\n\t{\n\t\tswitch (key) \n\t\t{\n\t\tcase configDimUnit:\n//\t\t\treturn String(this.data[key]);\n\t\t\treturn String(Configuration.getData()[key]);\n\t\tdefault:\n\t\t\tthrow new Error('Invalid string configuration parameter: ' + key);\n\t\t}\n\t}\n\n\t/** Get a numeric configuration parameter. */\n\tstatic getNumericValue(key)\n\t{\n\t\tswitch (key) \n\t\t{\n\t\tcase configWallHeight:\n\t\tcase configWallThickness:\n//\t\t\treturn Number(this.data[key]);\n\t\t\treturn Number(Configuration.getData()[key]);\n\t\tdefault:\n\t\t\tthrow new Error('Invalid numeric configuration parameter: ' + key);\n\t\t}\n\t}\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/configuration.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "configDimUnit",
    "memberof": "scripts/core/configuration.js",
    "static": true,
    "longname": "scripts/core/configuration.js~configDimUnit",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/configuration.js",
    "importStyle": "{configDimUnit}",
    "description": "The dimensioning unit for 2D floorplan measurements.",
    "lineNumber": 5,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "configWallHeight",
    "memberof": "scripts/core/configuration.js",
    "static": true,
    "longname": "scripts/core/configuration.js~configWallHeight",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/configuration.js",
    "importStyle": "{configWallHeight}",
    "description": "The initial wall height in cm.",
    "lineNumber": 8,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "configWallThickness",
    "memberof": "scripts/core/configuration.js",
    "static": true,
    "longname": "scripts/core/configuration.js~configWallThickness",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/configuration.js",
    "importStyle": "{configWallThickness}",
    "description": "The initial wall thickness in cm.",
    "lineNumber": 10,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "config",
    "memberof": "scripts/core/configuration.js",
    "static": true,
    "longname": "scripts/core/configuration.js~config",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/configuration.js",
    "importStyle": "{config}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"dimUnit\": *, \"wallHeight\": number, \"wallThickness\": number}"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "class",
    "name": "Configuration",
    "memberof": "scripts/core/configuration.js",
    "static": true,
    "longname": "scripts/core/configuration.js~Configuration",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/configuration.js",
    "importStyle": "{Configuration}",
    "description": "Global configuration to customize the whole system.",
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/core/configuration.js~Configuration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/configuration.js~Configuration#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "getData",
    "memberof": "scripts/core/configuration.js~Configuration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/configuration.js~Configuration.getData",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "setValue",
    "memberof": "scripts/core/configuration.js~Configuration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/configuration.js~Configuration.setValue",
    "access": "public",
    "description": "Set a configuration parameter.",
    "lineNumber": 30,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "getStringValue",
    "memberof": "scripts/core/configuration.js~Configuration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/configuration.js~Configuration.getStringValue",
    "access": "public",
    "description": "Get a string configuration parameter.",
    "lineNumber": 37,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "getNumericValue",
    "memberof": "scripts/core/configuration.js~Configuration",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/configuration.js~Configuration.getNumericValue",
    "access": "public",
    "description": "Get a numeric configuration parameter.",
    "lineNumber": 50,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "scripts/core/constants.js",
    "content": "export const VIEW_TOP = 'topview';\nexport const VIEW_FRONT = 'frontview';\nexport const VIEW_RIGHT = 'rightview';\nexport const VIEW_LEFT = 'leftview';\nexport const VIEW_ISOMETRY = 'isometryview';",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "VIEW_TOP",
    "memberof": "scripts/core/constants.js",
    "static": true,
    "longname": "scripts/core/constants.js~VIEW_TOP",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/constants.js",
    "importStyle": "{VIEW_TOP}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "VIEW_FRONT",
    "memberof": "scripts/core/constants.js",
    "static": true,
    "longname": "scripts/core/constants.js~VIEW_FRONT",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/constants.js",
    "importStyle": "{VIEW_FRONT}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "VIEW_RIGHT",
    "memberof": "scripts/core/constants.js",
    "static": true,
    "longname": "scripts/core/constants.js~VIEW_RIGHT",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/constants.js",
    "importStyle": "{VIEW_RIGHT}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "VIEW_LEFT",
    "memberof": "scripts/core/constants.js",
    "static": true,
    "longname": "scripts/core/constants.js~VIEW_LEFT",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/constants.js",
    "importStyle": "{VIEW_LEFT}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "VIEW_ISOMETRY",
    "memberof": "scripts/core/constants.js",
    "static": true,
    "longname": "scripts/core/constants.js~VIEW_ISOMETRY",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/constants.js",
    "importStyle": "{VIEW_ISOMETRY}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "scripts/core/dimensioning.js",
    "content": "import {Configuration, configDimUnit} from './configuration.js';\n/** Dimensioning in Inch. */\nexport const dimInch = 'inch';\n\n/** Dimensioning in Inch. */\nexport const dimFeetAndInch = 'feetAndInch';\n\n/** Dimensioning in Meter. */\nexport const dimMeter = 'm';\n\n/** Dimensioning in Centi Meter. */\nexport const dimCentiMeter = 'cm';\n\n/** Dimensioning in Milli Meter. */\nexport const dimMilliMeter = 'mm';\n\nexport const decimals = 1000;\n\nexport const cmPerFoot = 30.48;\nexport const pixelsPerFoot = 15.0;\nexport const cmPerPixel = cmPerFoot * (1.0 / pixelsPerFoot);\nexport const pixelsPerCm = 1.0 / cmPerPixel;\n\nexport const dimensioningOptions = [dimInch, dimFeetAndInch, dimMeter, dimCentiMeter, dimMilliMeter];\n\n\n/** Dimensioning functions. */\nexport class Dimensioning\n{\n\tstatic roundOff(value, decimals)\n\t{\n\t\t\treturn Math.round(decimals * value) / decimals;\n\t}\n\t/** Converts cm to dimensioning number.\n\t * @param cm Centi meter value to be converted.\n\t * @returns Number representation.\n\t */\n\tstatic cmFromMeasureRaw(measure)\n\t{\n\t\tswitch (Configuration.getStringValue(configDimUnit))\n\t\t{\n\t\tcase dimFeetAndInch:\n\t\t\treturn Math.round(decimals * (measure * 30.480016459203095991)) / decimals;\n\t\tcase dimInch:\n\t\t\treturn Math.round(decimals * (measure * 2.5400013716002578512)) / decimals;\n\t\tcase dimMilliMeter:\n\t\t\treturn Math.round(decimals * (measure * 0.10000005400001014955)) / decimals;\n\t\tcase dimCentiMeter:\n\t\t\treturn measure;\n\t\tcase dimMeter:\n\t\tdefault:\n\t\t\treturn Math.round(decimals * 100 * measure) / decimals;\n\t\t}\n\t}\n\n\t/** Converts cm to dimensioning string.\n\t * @param cm Centi meter value to be converted.\n\t * @returns String representation.\n\t */\n\tstatic cmFromMeasure(measure)\n\t{\n\t\tswitch (Configuration.getStringValue(configDimUnit))\n\t\t{\n\t\tcase dimFeetAndInch:\n\t\t\treturn Math.round(decimals * (measure * 30.480016459203095991)) / decimals + 'cm';\n\t\tcase dimInch:\n\t\t\treturn Math.round(decimals * (measure * 2.5400013716002578512)) / decimals  + 'cm';\n\t\tcase dimMilliMeter:\n\t\t\treturn Math.round(decimals * (measure * 0.10000005400001014955)) / decimals + 'cm';\n\t\tcase dimCentiMeter:\n\t\t\treturn measure;\n\t\tcase dimMeter:\n\t\tdefault:\n\t\t\treturn Math.round(decimals * 100 * measure) / decimals + 'cm';\n\t\t}\n\t}\n\n\t/** Converts cm to dimensioning string.\n\t * @param cm Centi meter value to be converted.\n\t * @returns String representation.\n\t */\n\tstatic cmToMeasureRaw(cm, power=1)\n\t{\n\t\tswitch (Configuration.getStringValue(configDimUnit))\n\t\t{\n\t\tcase dimFeetAndInch:// dimFeetAndInch returns only the feet\n\t\t\tvar allInFeet = (cm * Math.pow(0.032808416666669996953, power));\n\t\t\treturn allInFeet;\n\t\tcase dimInch:\n\t\t\tvar inches = Math.round(decimals * (cm * Math.pow(0.393700, power))) / decimals;\n\t\t\treturn inches;\n\t\tcase dimMilliMeter:\n\t\t\tvar mm = Math.round(decimals * (cm * Math.pow(10, power))) / decimals;\n\t\t\treturn mm;\n\t\tcase dimCentiMeter:\n\t\t\treturn Math.round(decimals * cm) / decimals;\n\t\tcase dimMeter:\n\t\tdefault:\n\t\t\tvar m = Math.round(decimals * (cm  * Math.pow(0.01, power))) / decimals;\n\t\t\treturn m;\n\t\t}\n\t}\n\n\t/** Converts cm to dimensioning string.\n\t * @param cm Centi meter value to be converted.\n\t * @returns String representation.\n\t */\n\tstatic cmToMeasure(cm, power=1)\n\t{\n\t\tswitch (Configuration.getStringValue(configDimUnit))\n\t\t{\n\t\tcase dimFeetAndInch:\n\t\t\tvar allInFeet = (cm * Math.pow(0.032808416666669996953, power));\n\t\t\tvar floorFeet = Math.floor(allInFeet);\n\t\t\tvar remainingFeet = allInFeet - floorFeet;\n\t\t\tvar remainingInches = Math.round(remainingFeet * 12);\n\t\t\treturn floorFeet + '\\'' + remainingInches + '\"';\n\t\tcase dimInch:\n\t\t\tvar inches = Math.round(decimals * (cm * Math.pow(0.393700, power))) / decimals;\n\t\t\treturn inches + '\\'';\n\t\tcase dimMilliMeter:\n\t\t\tvar mm = Math.round(decimals * (cm * Math.pow(10, power))) / decimals;\n\t\t\treturn '' + mm + 'mm';\n\t\tcase dimCentiMeter:\n\t\t\treturn '' + Math.round(decimals * cm) / decimals + 'cm';\n\t\tcase dimMeter:\n\t\tdefault:\n\t\t\tvar m = Math.round(decimals * (cm  * Math.pow(0.01, power))) / decimals;\n\t\t\treturn '' + m + 'm';\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/dimensioning.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "dimInch",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~dimInch",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{dimInch}",
    "description": "Dimensioning in Inch.",
    "lineNumber": 3,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "dimFeetAndInch",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~dimFeetAndInch",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{dimFeetAndInch}",
    "description": "Dimensioning in Inch.",
    "lineNumber": 6,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "dimMeter",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~dimMeter",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{dimMeter}",
    "description": "Dimensioning in Meter.",
    "lineNumber": 9,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "dimCentiMeter",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~dimCentiMeter",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{dimCentiMeter}",
    "description": "Dimensioning in Centi Meter.",
    "lineNumber": 12,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "dimMilliMeter",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~dimMilliMeter",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{dimMilliMeter}",
    "description": "Dimensioning in Milli Meter.",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "decimals",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~decimals",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{decimals}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "cmPerFoot",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~cmPerFoot",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{cmPerFoot}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "pixelsPerFoot",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~pixelsPerFoot",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{pixelsPerFoot}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "cmPerPixel",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~cmPerPixel",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{cmPerPixel}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "pixelsPerCm",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~pixelsPerCm",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{pixelsPerCm}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "dimensioningOptions",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~dimensioningOptions",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{dimensioningOptions}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "Dimensioning",
    "memberof": "scripts/core/dimensioning.js",
    "static": true,
    "longname": "scripts/core/dimensioning.js~Dimensioning",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/dimensioning.js",
    "importStyle": "{Dimensioning}",
    "description": "Dimensioning functions.",
    "lineNumber": 28,
    "interface": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "roundOff",
    "memberof": "scripts/core/dimensioning.js~Dimensioning",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/dimensioning.js~Dimensioning.roundOff",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "decimals",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "cmFromMeasureRaw",
    "memberof": "scripts/core/dimensioning.js~Dimensioning",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/dimensioning.js~Dimensioning.cmFromMeasureRaw",
    "access": "public",
    "description": "Converts cm to dimensioning number.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Number representation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cm",
        "description": "Centi meter value to be converted."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Number representation."
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "cmFromMeasure",
    "memberof": "scripts/core/dimensioning.js~Dimensioning",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/dimensioning.js~Dimensioning.cmFromMeasure",
    "access": "public",
    "description": "Converts cm to dimensioning string.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "String representation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cm",
        "description": "Centi meter value to be converted."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "String representation."
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "cmToMeasureRaw",
    "memberof": "scripts/core/dimensioning.js~Dimensioning",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/dimensioning.js~Dimensioning.cmToMeasureRaw",
    "access": "public",
    "description": "Converts cm to dimensioning string.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "String representation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cm",
        "description": "Centi meter value to be converted."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "String representation."
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "cmToMeasure",
    "memberof": "scripts/core/dimensioning.js~Dimensioning",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/dimensioning.js~Dimensioning.cmToMeasure",
    "access": "public",
    "description": "Converts cm to dimensioning string.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "String representation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "cm",
        "description": "Centi meter value to be converted."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "String representation."
    }
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "scripts/core/events.js",
    "content": "export const EVENT_ACTION = 'ACTION_EVENT';\nexport const EVENT_DELETED = 'DELETED_EVENT';\nexport const EVENT_MOVED = 'MOVED_EVENT';\nexport const EVENT_REDRAW = 'REDRAW_EVENT';\nexport const EVENT_NEW = 'NEW_EVENT';\nexport const EVENT_LOADED = 'LOADED_EVENT';\nexport const EVENT_LOADING = 'LOADING_EVENT';\nexport const EVENT_UPDATED = 'UPDATED_EVENT';\nexport const EVENT_SAVED = 'SAVED_EVENT';\nexport const EVENT_CHANGED = 'CHANGED_EVENT';\nexport const EVENT_GLTF_READY = 'GLTF_READY_EVENT';\n\nexport const EVENT_ITEM_LOADING = 'ITEM_LOADING_EVENT';\nexport const EVENT_ITEM_LOADED = 'ITEM_LOADED_EVENT';\nexport const EVENT_ITEM_REMOVED = 'ITEM_REMOVED_EVENT';\nexport const EVENT_ITEM_SELECTED = 'ITEM_SELECTED_EVENT';\nexport const EVENT_ITEM_UNSELECTED = 'ITEM_UNSELECTED_EVENT';\n\nexport const EVENT_MODE_RESET = 'MODE_RESET_EVENT';\nexport const EVENT_CAMERA_MOVED = 'CAMERA_MOVED_EVENT';\nexport const EVENT_CAMERA_ACTIVE_STATUS = 'CAMERA_ACTIVE_STATUS_EVENT';\nexport const EVENT_CAMERA_VIEW_CHANGE = 'CAMERA_VIEW_CHANGE_EVENT';\nexport const EVENT_FPS_EXIT = 'CAMERA_FPS_EXIT_EVENT';\n\nexport const EVENT_WALL_CLICKED = 'WALL_CLICKED_EVENT';\nexport const EVENT_ROOM_CLICKED = 'ROOM_CLICKED_EVENT';\nexport const EVENT_FLOOR_CLICKED = 'FLOOR_CLICKED_EVENT';\nexport const EVENT_NOTHING_CLICKED = 'NOTHING_CLICKED_EVENT';\n\nexport const EVENT_ROOM_NAME_CHANGED = 'CHANGED_ROOM_NAME_EVENT';\n\nexport const EVENT_CORNER_2D_CLICKED = 'CORNER_CLICKED_2D_EVENT';\nexport const EVENT_WALL_2D_CLICKED = 'WALL_CLICKED_2D_EVENT';\nexport const EVENT_ROOM_2D_CLICKED = 'ROOM_CLICKED_2D_EVENT';\n\nexport const EVENT_CORNER_2D_DOUBLE_CLICKED = 'CORNER_DOUBLE_CLICKED_2D_EVENT';\nexport const EVENT_WALL_2D_DOUBLE_CLICKED = 'WALL_DOUBLE_CLICKED_2D_EVENT';\nexport const EVENT_ROOM_2D_DOUBLE_CLICKED = 'WALL_DOUBLE_CLICKED_2D_EVENT';\n\nexport const EVENT_CORNER_2D_HOVER = 'CORNER_HOVER_2D_EVENT';\nexport const EVENT_WALL_2D_HOVER = 'WALL_HOVER_2D_EVENT';\nexport const EVENT_ROOM_2D_HOVER = 'ROOM_HOVER_2D_EVENT';\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/events.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "EVENT_ACTION",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ACTION",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ACTION}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "EVENT_DELETED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_DELETED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_DELETED}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "EVENT_MOVED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_MOVED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_MOVED}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "EVENT_REDRAW",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_REDRAW",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_REDRAW}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "EVENT_NEW",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_NEW",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_NEW}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "EVENT_LOADED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_LOADED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_LOADED}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "EVENT_LOADING",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_LOADING",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_LOADING}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "EVENT_UPDATED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_UPDATED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_UPDATED}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "EVENT_SAVED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_SAVED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_SAVED}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "EVENT_CHANGED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CHANGED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CHANGED}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "EVENT_GLTF_READY",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_GLTF_READY",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_GLTF_READY}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "EVENT_ITEM_LOADING",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ITEM_LOADING",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ITEM_LOADING}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "EVENT_ITEM_LOADED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ITEM_LOADED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ITEM_LOADED}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "EVENT_ITEM_REMOVED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ITEM_REMOVED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ITEM_REMOVED}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "EVENT_ITEM_SELECTED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ITEM_SELECTED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ITEM_SELECTED}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "EVENT_ITEM_UNSELECTED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ITEM_UNSELECTED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ITEM_UNSELECTED}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "EVENT_MODE_RESET",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_MODE_RESET",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_MODE_RESET}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "EVENT_CAMERA_MOVED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CAMERA_MOVED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CAMERA_MOVED}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "EVENT_CAMERA_ACTIVE_STATUS",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CAMERA_ACTIVE_STATUS",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CAMERA_ACTIVE_STATUS}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "EVENT_CAMERA_VIEW_CHANGE",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CAMERA_VIEW_CHANGE",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CAMERA_VIEW_CHANGE}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "EVENT_FPS_EXIT",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_FPS_EXIT",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_FPS_EXIT}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "EVENT_WALL_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_WALL_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_WALL_CLICKED}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "EVENT_ROOM_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ROOM_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ROOM_CLICKED}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "EVENT_FLOOR_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_FLOOR_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_FLOOR_CLICKED}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "EVENT_NOTHING_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_NOTHING_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_NOTHING_CLICKED}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "EVENT_ROOM_NAME_CHANGED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ROOM_NAME_CHANGED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ROOM_NAME_CHANGED}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "EVENT_CORNER_2D_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CORNER_2D_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CORNER_2D_CLICKED}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "EVENT_WALL_2D_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_WALL_2D_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_WALL_2D_CLICKED}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "EVENT_ROOM_2D_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ROOM_2D_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ROOM_2D_CLICKED}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "EVENT_CORNER_2D_DOUBLE_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CORNER_2D_DOUBLE_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CORNER_2D_DOUBLE_CLICKED}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "EVENT_WALL_2D_DOUBLE_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_WALL_2D_DOUBLE_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_WALL_2D_DOUBLE_CLICKED}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "EVENT_ROOM_2D_DOUBLE_CLICKED",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ROOM_2D_DOUBLE_CLICKED",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ROOM_2D_DOUBLE_CLICKED}",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "EVENT_CORNER_2D_HOVER",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_CORNER_2D_HOVER",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_CORNER_2D_HOVER}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "EVENT_WALL_2D_HOVER",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_WALL_2D_HOVER",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_WALL_2D_HOVER}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "EVENT_ROOM_2D_HOVER",
    "memberof": "scripts/core/events.js",
    "static": true,
    "longname": "scripts/core/events.js~EVENT_ROOM_2D_HOVER",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/events.js",
    "importStyle": "{EVENT_ROOM_2D_HOVER}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "scripts/core/exposable.js",
    "content": "import {EventDispatcher, Mesh} from 'three';\nimport {EVENT_UPDATED} from './events.js';\n\nclass ExposableProperty\n{\n\tconstructor(instance, key, naam, eventname)\n\t{\n\t\tif(!instance instanceof EventDispatcher)\n\t\t{\n\t\t\tthrow \"Only instance of EventDispatchers can be added with an Exposable Property\";\n\t\t}\n\t\tthis._instance = instance;\n\t\tthis._key = key;\n\t\tthis._displayName = (naam) ? naam : 'None';\n\t\tthis._eventToFire = eventname;\n\t\tthis._propertyType = 'generic';\n\t}\n\t\n\t_updates()\n\t{\n\t\tif(this._eventToFire)\n\t\t{\n\t\t\tthis._instance.dispatchEvent({type:this._eventToFire, item: this._instance});\n\t\t}\t\t\n\t}\n\t\n\tset displayName(val)\n\t{\n\t\tthis._displayName = val;\n\t}\n\t\n\tget displayName()\n\t{\n\t\treturn this._displayName;\n\t}\n\t\n\tget key()\n\t{\n\t\treturn this._key;\n\t}\n\t\n\tget propertyType()\n\t{\n\t\treturn this._propertyType;\n\t}\n}\n\nclass ExposableNumber extends ExposableProperty\n{\n\tconstructor(instance, key, pnaam, naam, eventname)\n\t{\n\t\tsuper(instance, key, pnaam, naam, eventname);\n\t\tthis._propertyType = 'number';\n\t\tthis._step = 1;\n\t\tthis._max = 100;\n\t\tthis._min = 0;\n\t}\n\t\n\tget step()\n\t{\n\t\treturn this._step;\n\t}\n\t\n\tget max()\n\t{\n\t\treturn this._max;\n\t}\n\t\n\tget min()\n\t{\n\t\treturn this._min;\n\t}\n}\n\n\nclass Exposable extends EventDispatcher\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._exposables = [];\n\t}\n\t\n\t_addExposable(key, propertytype, displayName, eventname)\n\t{\n\t\tvar exposableproperty = null;\n\t\tif(propertytype == 'number')\n\t\t{\n\t\t\texposableproperty = new ExposableNumber(this, key, displayName, eventname);\n\t\t}\n\t\telse\n\t\t{\n\t\t\texposableproperty = new ExposableProperty(this, key, displayName, eventname);\n\t\t}\n\t\tthis._exposables.push(exposableproperty);\n\t}\n\t\n\tget exposables()\n\t{\n\t\treturn this._exposables;\n\t}\n}\n\nclass ExposableMesh extends Mesh\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\t\n}\n\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/exposable.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "class",
    "name": "ExposableProperty",
    "memberof": "scripts/core/exposable.js",
    "static": true,
    "longname": "scripts/core/exposable.js~ExposableProperty",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/core/exposable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "_instance",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#_instance",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "_key",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#_key",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "_displayName",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#_displayName",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "_eventToFire",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#_eventToFire",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "_propertyType",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#_propertyType",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "_updates",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#_updates",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "set",
    "name": "displayName",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#displayName",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 137,
    "kind": "get",
    "name": "displayName",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#displayName",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "get",
    "name": "key",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#key",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "get",
    "name": "propertyType",
    "memberof": "scripts/core/exposable.js~ExposableProperty",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableProperty#propertyType",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "ExposableNumber",
    "memberof": "scripts/core/exposable.js",
    "static": true,
    "longname": "scripts/core/exposable.js~ExposableNumber",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/core/exposable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "interface": false,
    "extends": [
      "ExposableProperty"
    ],
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "_propertyType",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#_propertyType",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "_step",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#_step",
    "access": "private",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "_max",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#_max",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "_min",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#_min",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "get",
    "name": "step",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#step",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "get",
    "name": "max",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#max",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "get",
    "name": "min",
    "memberof": "scripts/core/exposable.js~ExposableNumber",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableNumber#min",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "Exposable",
    "memberof": "scripts/core/exposable.js",
    "static": true,
    "longname": "scripts/core/exposable.js~Exposable",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/core/exposable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ],
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/core/exposable.js~Exposable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~Exposable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "_exposables",
    "memberof": "scripts/core/exposable.js~Exposable",
    "static": false,
    "longname": "scripts/core/exposable.js~Exposable#_exposables",
    "access": "private",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "_addExposable",
    "memberof": "scripts/core/exposable.js~Exposable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~Exposable#_addExposable",
    "access": "private",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "propertytype",
        "types": [
          "*"
        ]
      },
      {
        "name": "displayName",
        "types": [
          "*"
        ]
      },
      {
        "name": "eventname",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 153,
    "kind": "get",
    "name": "exposables",
    "memberof": "scripts/core/exposable.js~Exposable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~Exposable#exposables",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "class",
    "name": "ExposableMesh",
    "memberof": "scripts/core/exposable.js",
    "static": true,
    "longname": "scripts/core/exposable.js~ExposableMesh",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/core/exposable.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~Mesh"
    ],
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/core/exposable.js~ExposableMesh",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/core/exposable.js~ExposableMesh#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "scripts/core/log.js",
    "content": "import Enum from 'es6-enum';\n\nexport var ELogContext = Enum('None', 'All', 'Interaction2d', 'Item', 'Wall', 'Room');\nexport var ELogLevel = Enum('Information', 'Warning', 'Error', 'Fatal', 'Debug');\n/** The current log context. To be set when initializing the Application. */\nexport var logContext = ELogContext.None;\n\n/** Pre-check if logging for specified context and/or level is enabled.\n * This may be used to avoid compilation of complex logs.\n * @param context The log context to be verified.\n * @param level The log level to be verified.\n * @returns If this context/levels is currently logged.\n */\nexport function isLogging(context, level) \n{\n\treturn logContext === ELogContext.All || logContext == context || level === ELogLevel.Warning || level === ELogLevel.Error || level === ELogLevel.Fatal;\n}\n\n/** Log the passed message in the context and with given level.\n * @param context The context in which the message should be logged.\n * @param level The level of the message.\n * @param message The messages to be logged. \n */\nexport function log(context, level, message) \n{\n\tif (isLogging(context, level) === false)\n\t{\n\t\treturn;\n\t}\n\tvar tPrefix = '';\n\tswitch (level) \n\t{\n\tcase ELogLevel.Information:\n\t\ttPrefix = '[INFO_] ';\n\t\tbreak;\n\tcase ELogLevel.Warning:\n\t\ttPrefix = '[WARNG] ';\n\t\tbreak;\n\tcase ELogLevel.Error:\n\t\ttPrefix = '[ERROR] ';\n\t\tbreak;\n\tcase ELogLevel.Fatal:\n\t\ttPrefix = '[FATAL] ';\n\t\tbreak;\n\tcase ELogLevel.Debug:\n\t\ttPrefix = '[DEBUG] ';\n\t\tbreak;\n\t}\n\tconsole.log(tPrefix + message);\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/log.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "ELogContext",
    "memberof": "scripts/core/log.js",
    "static": true,
    "longname": "scripts/core/log.js~ELogContext",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/log.js",
    "importStyle": "{ELogContext}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "ELogLevel",
    "memberof": "scripts/core/log.js",
    "static": true,
    "longname": "scripts/core/log.js~ELogLevel",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/log.js",
    "importStyle": "{ELogLevel}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "logContext",
    "memberof": "scripts/core/log.js",
    "static": true,
    "longname": "scripts/core/log.js~logContext",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/log.js",
    "importStyle": "{logContext}",
    "description": "The current log context. To be set when initializing the Application.",
    "lineNumber": 6,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "isLogging",
    "memberof": "scripts/core/log.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/log.js~isLogging",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/log.js",
    "importStyle": "{isLogging}",
    "description": "Pre-check if logging for specified context and/or level is enabled.\nThis may be used to avoid compilation of complex logs.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "If this context/levels is currently logged."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "The log context to be verified."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The log level to be verified."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "If this context/levels is currently logged."
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "log",
    "memberof": "scripts/core/log.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/log.js~log",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/log.js",
    "importStyle": "{log}",
    "description": "Log the passed message in the context and with given level.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "The context in which the message should be logged."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The level of the message."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The messages to be logged."
      }
    ],
    "return": null
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "scripts/core/utils.js",
    "content": "import {Vector2} from 'three';\nimport {checkIntersection} from 'line-intersect';\n\nexport class Utils\n{\n\t/** Determines the distance of a point from a line.\n\t * @param point The Point coordinates as THREE.Vector2\n\t * @param start The starting coordinates of the line as THREE.Vector2\n\t * @param end The ending coordinates of the line as THREE.Vector2\n\t * @returns The distance value (number).\n\t */\n\tstatic pointDistanceFromLine(point, start, end)\n\t{\n\t\tvar tPoint = Utils.closestPointOnLine(point, start, end);\n\t\tvar tDx = point.x - tPoint.x;\n\t\tvar tDy = point.y - tPoint.y;\n\t\treturn Math.sqrt(tDx * tDx + tDy * tDy);\n\t}\n\n\t/** Gets the projection of a point onto a line.\n\t * @param point the point\n\t * @param start the starting coordinates of the line as THREE.Vector2\n\t * @param end the ending coordinates of the line as THREE.Vector2\n\t * @returns The point as THREE.Vector2.\n\t */\n\tstatic closestPointOnLine(point, start, end)\n\t{\n\t\t// Inspired by: http://stackoverflow.com/a/6853926\n\t\tvar tA = point.x - start.x;\n\t\tvar tB = point.y - start.y;\n\t\tvar tC = end.x - start.x;\n\t\tvar tD = end.y - start.y;\n\n\t\tvar tDot = tA * tC + tB * tD;\n\t\tvar tLenSq = tC * tC + tD * tD;\n\t\tvar tParam = tDot / tLenSq;\n\n\t\tvar tXx, tYy;\n\n\t\tif (tParam < 0 || (start.x == end.x && start.y == end.y))\n\t\t{\n\t\t\ttXx = start.x;\n\t\t\ttYy = start.y;\n\t\t}\n\t\telse if (tParam > 1)\n\t\t{\n\t\t\ttXx = end.x;\n\t\t\ttYy = end.y;\n\t\t}\n\t\telse {\n\t\t\ttXx = start.x + tParam * tC;\n\t\t\ttYy = start.y + tParam * tD;\n\t\t}\n\n\t\treturn new Vector2(tXx, tYy);\n\t}\n\n\t/** Gets the distance of two points.\n\t * @param start the starting coordinate of the line as Vector2\n\t * @param end the ending coordinate of the line as Vector2\n\t * @returns The distance.\n\t */\n\tstatic distance(start, end)\n\t{\n\t\treturn Math.sqrt(Math.pow(end.x - start.x, 2) +  Math.pow(end.y - start.y, 2));\n\t}\n\n\t/**  Gets the angle between point1 -> start and 0,0 -> point2 (-pi to pi)\n\t * @returns The angle.\n\t */\n\tstatic angle(start, end)\n\t{\n\t\tvar tDot = start.x * end.x + start.y * end.y;\n\t\tvar tDet = start.x * end.y - start.y * end.x;\n\t\tvar tAngle = -Math.atan2(tDet, tDot);\n\t\treturn tAngle;\n\t}\n\n\t/** shifts angle to be 0 to 2pi */\n\tstatic angle2pi(start, end)\n\t{\n\t\tvar tTheta = Utils.angle(start, end);\n\t\tif (tTheta < 0)\n\t\t{\n\t\t\ttTheta += 2.0 * Math.PI;\n\t\t}\n\t\treturn tTheta;\n\t}\n\n\t/** Checks if an array of points is clockwise.\n\t * @param points Is array of points with x,y attributes\n\t * @returns True if clockwise.\n\t */\n\tstatic isClockwise(points)\n\t{\n\t\t// make positive\n\t\tlet tSubX = Math.min(0, Math.min.apply(null, Utils.map(points, function (p) {\n\t\t\treturn p.x;\n\t\t})));\n\t\tlet tSubY = Math.min(0, Math.min.apply(null, Utils.map(points, function (p) {\n\t\t\treturn p.x;\n\t\t})));\n\n\t\tvar tNewPoints = Utils.map(points, function (p) {\n\t\t\treturn {\n\t\t\t\tx: p.x - tSubX,\n\t\t\t\ty: p.y - tSubY\n\t\t\t};\n\t\t});\n\n\t\t// determine CW/CCW, based on:\n\t\t\t// http://stackoverflow.com/questions/1165647\n\t\tvar tSum = 0;\n\t\tfor (var tI = 0; tI < tNewPoints.length; tI++)\n\t\t{\n\t\t\tvar tC1 = tNewPoints[tI];\n\t\t\tvar tC2;\n\t\t\tif (tI == tNewPoints.length - 1)\n\t\t\t{\n\t\t\t\ttC2 = tNewPoints[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttC2 = tNewPoints[tI + 1];\n\t\t\t}\n\t\t\ttSum += (tC2.x - tC1.x) * (tC2.y + tC1.y);\n\t\t}\n\t\treturn (tSum >= 0);\n\t}\n\n\t/** Creates a Guide.\n\t * @returns A new Guide.\n\t */\n\tstatic guide()\n\t{\n\t\tvar tS4 = function ()\n\t\t{\n\t\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\t\t};\n\t\treturn tS4() + tS4() + '-' + tS4() + '-' + tS4() + '-' + tS4() + '-' + tS4() + tS4() + tS4();\n\t}\n\n\t/** both arguments are arrays of corners with x,y attributes */\n\tstatic polygonPolygonIntersect(firstCorners, secondCorners)\n\t{\n\t\tfor (var tI = 0; tI < firstCorners.length; tI++)\n\t\t{\n\t\t\tvar tFirstCorner = firstCorners[tI], tSecondCorner;\n\t\t\tif (tI == firstCorners.length - 1)\n\t\t\t{\n\t\t\t\ttSecondCorner = firstCorners[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttSecondCorner = firstCorners[tI + 1];\n\t\t\t}\n\t\t\tif (Utils.linePolygonIntersect(tFirstCorner.x, tFirstCorner.y,tSecondCorner.x, tSecondCorner.y, secondCorners))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** Corners is an array of points with x,y attributes */\n\tstatic linePolygonIntersect(point, point2, corners)\n\t{\n\t\tfor (var tI = 0; tI < corners.length; tI++)\n\t\t{\n\t\t\tvar tFirstCorner = corners[tI],tSecondCorner;\n\t\t\tif (tI == corners.length - 1)\n\t\t\t{\n\t\t\t\ttSecondCorner = corners[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttSecondCorner = corners[tI + 1];\n\t\t\t}\n\t\t\tif (Utils.lineLineIntersect(point, point2, {x:tFirstCorner.x, y:tFirstCorner.y}, {x:tSecondCorner.x, y:tSecondCorner.y}))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** */\n\tstatic lineLineIntersectPoint(aStart, aEnd, bStart, bEnd)\n\t{\n\t\tvar result = checkIntersection(aStart.x, aStart.y, aEnd.x, aEnd.y, bStart.x, bStart.y, bEnd.x, bEnd.y);\n\t\tif(result.point)\n\t\t{\n\t\t\treturn new Vector2(result.point.x, result.point.y);\n\t\t}\n\t\treturn undefined;\n\n\t}\n\n\t/** */\n\tstatic lineLineIntersect(lineAStart, lineAEnd, lineBStart, lineBEnd)\n\t{\n\t\tfunction tCCW(p1, p2, p3)\n\t\t{\n\t\t\tvar tA = p1.x, tB = p1.y, tC = p2.x, tD = p2.y, tE = p3.x, tF = p3.y;\n\t\t\treturn (tF - tB) * (tC - tA) > (tD - tB) * (tE - tA);\n\t\t}\n\t\tvar tP1 = lineAStart, tP2 = lineAEnd, tP3 = lineBStart, tP4 = lineBEnd;\n\t\treturn (tCCW(tP1, tP3, tP4) != tCCW(tP2, tP3, tP4)) && (tCCW(tP1, tP2, tP3) != tCCW(tP1, tP2, tP4));\n\t}\n\n\t/**\n     @param corners Is an array of points with x,y attributes\n      @param startX X start coord for raycast\n      @param startY Y start coord for raycast\n\t */\n\t static pointInPolygon2(point, polygon)\n\t {\n\t\t var x = point.x, y = point.y;\n\t\t var inside = false;\n\t\t for (var i = 0, j = polygon.length - 1; i < polygon.length; j = i++)\n\t\t {\n\t\t\t\t var intersect =  ((((polygon[i].y <= y) && (y < polygon[j].y)) ||  ((polygon[j].y <= y) && (y < polygon[i].y))) && (x < (polygon[j].x - polygon[i].x) * (y - polygon[i].y) / (polygon[j].y - polygon[i].y) + polygon[i].x));\n\t\t\t\t if (intersect)\n\t\t\t\t {\n\t\t\t\t\t \tinside = !inside;\n\t\t\t\t }\n\t\t }\n\t\t return inside;\n\t }\n\n\t/**\n     @param corners Is an array of points with x,y attributes\n      @param startX X start coord for raycast\n      @param startY Y start coord for raycast\n\t */\n\tstatic pointInPolygon(point, corners, start)\n\t{\n\t\tstart = start || new Vector2(0,0);\n\t\tvar startX = start.x || 0;\n\t\tvar startY = start.y || 0;\n\n\t\t//ensure that point(startX, startY) is outside the polygon consists of corners\n\t\tvar tMinX = 0, tMinY = 0;\n\t\tvar tI = 0;\n\n\t\tif (startX === undefined || startY === undefined)\n\t\t{\n\t\t\tfor (tI = 0; tI < corners.length; tI++)\n\t\t\t{\n\t\t\t\ttMinX = Math.min(tMinX, corners[tI].x);\n\t\t\t\ttMinY = Math.min(tMinX, corners[tI].y);\n\t\t\t}\n\t\t\tstartX = tMinX - 10;\n\t\t\tstartY = tMinY - 10;\n\t\t}\n\n\t\tvar tIntersects = 0;\n\t\tfor (tI = 0; tI < corners.length; tI++)\n\t\t{\n\t\t\tvar tFirstCorner = corners[tI], tSecondCorner;\n\t\t\tif (tI == corners.length - 1)\n\t\t\t{\n\t\t\t\ttSecondCorner = corners[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttSecondCorner = corners[tI + 1];\n\t\t\t}\n\n\t\t\tif (Utils.lineLineIntersect(start, point, tFirstCorner.x, tFirstCorner.y, tSecondCorner.x, tSecondCorner.y))\n\t\t\t{\n\t\t\t\ttIntersects++;\n\t\t\t}\n\t\t}\n\t\t// odd intersections means the point is in the polygon\n\t\treturn ((tIntersects % 2) == 1);\n\t}\n\n\t/** Checks if all corners of insideCorners are inside the polygon described by outsideCorners */\n\tstatic polygonInsidePolygon(insideCorners, outsideCorners, start)\n\t{\n\t\tstart.x = start.x || 0;\n\t\tstart.y = start.y || 0;\n\n\t\tfor (var tI = 0; tI < insideCorners.length; tI++)\n\t\t{\n\t\t\tif (!Utils.pointInPolygon(insideCorners[tI].x, insideCorners[tI].y,outsideCorners,start))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/** Checks if any corners of firstCorners is inside the polygon described by secondCorners */\n\tstatic polygonOutsidePolygon(insideCorners, outsideCorners, start)\n\t{\n\t\tstart.x = start.x || 0;\n\t\tstart.y = start.y || 0;\n\n\t\tfor (var tI = 0; tI < insideCorners.length; tI++)\n\t\t{\n\t\t\tif (Utils.pointInPolygon(insideCorners[tI].x, insideCorners[tI].y,outsideCorners,start))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// arrays\n\n\tstatic forEach(array, action)\n\t{\n\t\tfor (var tI = 0; tI < array.length; tI++)\n\t\t{\n\t\t\taction(array[tI]);\n\t\t}\n\t}\n\n\tstatic forEachIndexed(array, action)\n\t{\n\t\tfor (var tI = 0; tI < array.length; tI++)\n\t\t{\n\t\t\taction(tI, array[tI]);\n\t\t}\n\t}\n\n\tstatic map(array, func)\n\t{\n\t\tvar tResult = [];\n\t\tarray.forEach((element) => {\n\t\t\ttResult.push(func(element));\n\t\t});\n\t\treturn tResult;\n\t}\n\n\t/** Remove elements in array if func(element) returns true */\n\tstatic removeIf(array, func)\n\t{\n\t\tvar tResult = [];\n\t\tarray.forEach((element) => {\n\t\t\tif (!func(element)) {\n\t\t\t\ttResult.push(element);\n\t\t\t}\n\t\t});\n\t\treturn tResult;\n\t}\n\n\t/** Shift the items in an array by shift (positive integer) */\n\tstatic cycle(arr, shift)\n\t{\n\t\tvar tReturn = arr.slice(0);\n\t\tfor (var tI = 0; tI < shift; tI++) {\n\t\t\tvar tmp = tReturn.shift();\n\t\t\ttReturn.push(tmp);\n\t\t}\n\t\treturn tReturn;\n\t}\n\n\t/** Returns in the unique elemnts in arr */\n\tstatic unique(arr, hashFunc)\n\t{\n\t\tvar tResults = [];\n\t\tvar tMap = {};\n\t\tfor (var tI = 0; tI < arr.length; tI++) {\n\t\t\tif (!tMap.hasOwnProperty(arr[tI])) {\n\t\t\t\ttResults.push(arr[tI]);\n\t\t\t\ttMap[hashFunc(arr[tI])] = true;\n\t\t\t}\n\t\t}\n\t\treturn tResults;\n\t}\n\n\t/** Remove value from array, if it is present */\n\tstatic removeValue(array, value)\n\t{\n\t\tfor (var tI = array.length - 1; tI >= 0; tI--)\n\t\t{\n\t\t\tif (array[tI] === value) {\n\t\t\t\tarray.splice(tI, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** Checks if value is in array */\n\tstatic hasValue(array, value)\n\t{\n\t\tfor (var tI = 0; tI < array.length; tI++)\n\t\t{\n\t\t\tif (array[tI] === value)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** Subtracts the elements in subArray from array */\n\tstatic subtract(array, subArray)\n\t{\n\t\treturn Utils.removeIf(array, function (el) {\n\t\t\treturn Utils.hasValue(subArray, el);\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "class",
    "name": "Utils",
    "memberof": "scripts/core/utils.js",
    "static": true,
    "longname": "scripts/core/utils.js~Utils",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/utils.js",
    "importStyle": "{Utils}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "pointDistanceFromLine",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.pointDistanceFromLine",
    "access": "public",
    "description": "Determines the distance of a point from a line.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The distance value (number)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The Point coordinates as THREE.Vector2"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The starting coordinates of the line as THREE.Vector2"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The ending coordinates of the line as THREE.Vector2"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The distance value (number)."
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "closestPointOnLine",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.closestPointOnLine",
    "access": "public",
    "description": "Gets the projection of a point onto a line.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The point as THREE.Vector2."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "the point"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "the starting coordinates of the line as THREE.Vector2"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "the ending coordinates of the line as THREE.Vector2"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The point as THREE.Vector2."
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "distance",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.distance",
    "access": "public",
    "description": "Gets the distance of two points.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The distance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "the starting coordinate of the line as Vector2"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "the ending coordinate of the line as Vector2"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The distance."
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "angle",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.angle",
    "access": "public",
    "description": " Gets the angle between point1 -> start and 0,0 -> point2 (-pi to pi)",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The angle."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The angle."
    },
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "angle2pi",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.angle2pi",
    "access": "public",
    "description": "shifts angle to be 0 to 2pi",
    "lineNumber": 80,
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "isClockwise",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.isClockwise",
    "access": "public",
    "description": "Checks if an array of points is clockwise.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "True if clockwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "Is array of points with x,y attributes"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "True if clockwise."
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "guide",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.guide",
    "access": "public",
    "description": "Creates a Guide.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "A new Guide."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A new Guide."
    },
    "params": []
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "polygonPolygonIntersect",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.polygonPolygonIntersect",
    "access": "public",
    "description": "both arguments are arrays of corners with x,y attributes",
    "lineNumber": 144,
    "params": [
      {
        "name": "firstCorners",
        "types": [
          "*"
        ]
      },
      {
        "name": "secondCorners",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "linePolygonIntersect",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.linePolygonIntersect",
    "access": "public",
    "description": "Corners is an array of points with x,y attributes",
    "lineNumber": 166,
    "params": [
      {
        "name": "point",
        "types": [
          "*"
        ]
      },
      {
        "name": "point2",
        "types": [
          "*"
        ]
      },
      {
        "name": "corners",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "lineLineIntersectPoint",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.lineLineIntersectPoint",
    "access": "public",
    "description": "",
    "lineNumber": 188,
    "params": [
      {
        "name": "aStart",
        "types": [
          "*"
        ]
      },
      {
        "name": "aEnd",
        "types": [
          "*"
        ]
      },
      {
        "name": "bStart",
        "types": [
          "*"
        ]
      },
      {
        "name": "bEnd",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "lineLineIntersect",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.lineLineIntersect",
    "access": "public",
    "description": "",
    "lineNumber": 200,
    "params": [
      {
        "name": "lineAStart",
        "types": [
          "*"
        ]
      },
      {
        "name": "lineAEnd",
        "types": [
          "*"
        ]
      },
      {
        "name": "lineBStart",
        "types": [
          "*"
        ]
      },
      {
        "name": "lineBEnd",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "pointInPolygon2",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.pointInPolygon2",
    "access": "public",
    "description": "",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "corners",
        "description": "Is an array of points with x,y attributes"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startX",
        "description": "X start coord for raycast"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startY",
        "description": "Y start coord for raycast"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "pointInPolygon",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.pointInPolygon",
    "access": "public",
    "description": "",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "corners",
        "description": "Is an array of points with x,y attributes"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startX",
        "description": "X start coord for raycast"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "startY",
        "description": "Y start coord for raycast"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "polygonInsidePolygon",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.polygonInsidePolygon",
    "access": "public",
    "description": "Checks if all corners of insideCorners are inside the polygon described by outsideCorners",
    "lineNumber": 280,
    "params": [
      {
        "name": "insideCorners",
        "types": [
          "*"
        ]
      },
      {
        "name": "outsideCorners",
        "types": [
          "*"
        ]
      },
      {
        "name": "start",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "polygonOutsidePolygon",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.polygonOutsidePolygon",
    "access": "public",
    "description": "Checks if any corners of firstCorners is inside the polygon described by secondCorners",
    "lineNumber": 296,
    "params": [
      {
        "name": "insideCorners",
        "types": [
          "*"
        ]
      },
      {
        "name": "outsideCorners",
        "types": [
          "*"
        ]
      },
      {
        "name": "start",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "forEach",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.forEach",
    "access": "public",
    "description": null,
    "lineNumber": 313,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "forEachIndexed",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.forEachIndexed",
    "access": "public",
    "description": null,
    "lineNumber": 321,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "map",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.map",
    "access": "public",
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "removeIf",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.removeIf",
    "access": "public",
    "description": "Remove elements in array if func(element) returns true",
    "lineNumber": 339,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "cycle",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.cycle",
    "access": "public",
    "description": "Shift the items in an array by shift (positive integer)",
    "lineNumber": 351,
    "params": [
      {
        "name": "arr",
        "types": [
          "*"
        ]
      },
      {
        "name": "shift",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "unique",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.unique",
    "access": "public",
    "description": "Returns in the unique elemnts in arr",
    "lineNumber": 362,
    "params": [
      {
        "name": "arr",
        "types": [
          "*"
        ]
      },
      {
        "name": "hashFunc",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "removeValue",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.removeValue",
    "access": "public",
    "description": "Remove value from array, if it is present",
    "lineNumber": 376,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "hasValue",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.hasValue",
    "access": "public",
    "description": "Checks if value is in array",
    "lineNumber": 387,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "subtract",
    "memberof": "scripts/core/utils.js~Utils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/utils.js~Utils.subtract",
    "access": "public",
    "description": "Subtracts the elements in subArray from array",
    "lineNumber": 400,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "subArray",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "scripts/core/version.js",
    "content": "export class Version\n{\n\tstatic getInformalVersion()\n\t{\n\t\treturn '0.0.1a';\n\t}\n\t\n\tstatic getTechnicalVersion()\n\t{\n\t\treturn '0.0.1a';\n\t}\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/core/version.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "class",
    "name": "Version",
    "memberof": "scripts/core/version.js",
    "static": true,
    "longname": "scripts/core/version.js~Version",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/core/version.js",
    "importStyle": "{Version}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "getInformalVersion",
    "memberof": "scripts/core/version.js~Version",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/version.js~Version.getInformalVersion",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "getTechnicalVersion",
    "memberof": "scripts/core/version.js~Version",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/core/version.js~Version.getTechnicalVersion",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "scripts/exporters/ColladaExporter.js",
    "content": "/**\n * @author Garrett Johnson / http://gkjohnson.github.io/\n * https://github.com/gkjohnson/collada-exporter-js\n *\n * Usage:\n *  var exporter = new THREE.ColladaExporter();\n *\n *  var data = exporter.parse(mesh);\n *\n * Format Definition:\n *  https://www.khronos.org/collada/\n */\n\nTHREE.ColladaExporter = function () {};\n\nTHREE.ColladaExporter.prototype = {\n\n\tconstructor: THREE.ColladaExporter,\n\n\tparse: function ( object, onDone, options = {} ) {\n\n\t\toptions = Object.assign( {\n\t\t\tversion: '1.4.1',\n\t\t\tauthor: null,\n\t\t\ttextureDirectory: '',\n\t\t}, options );\n\n\t\tif ( options.textureDirectory !== '' ) {\n\n\t\t\toptions.textureDirectory = `${ options.textureDirectory }/`\n\t\t\t\t.replace( /\\\\/g, '/' )\n\t\t\t\t.replace( /\\/+/g, '/' );\n\n\t\t}\n\n\t\tvar version = options.version;\n\t\tif ( version !== '1.4.1' && version !== '1.5.0' ) {\n\n\t\t\tconsole.warn( `ColladaExporter : Version ${ version } not supported for export. Only 1.4.1 and 1.5.0.` );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Convert the urdf xml into a well-formatted, indented format\n\t\tfunction format( urdf ) {\n\n\t\t\tvar IS_END_TAG = /^<\\//;\n\t\t\tvar IS_SELF_CLOSING = /(\\?>$)|(\\/>$)/;\n\t\t\tvar HAS_TEXT = /<[^>]+>[^<]*<\\/[^<]+>/;\n\n\t\t\tvar pad = ( ch, num ) => ( num > 0 ? ch + pad( ch, num - 1 ) : '' );\n\n\t\t\tvar tagnum = 0;\n\t\t\treturn urdf\n\t\t\t\t.match( /(<[^>]+>[^<]+<\\/[^<]+>)|(<[^>]+>)/g )\n\t\t\t\t.map( tag => {\n\n\t\t\t\t\tif ( ! HAS_TEXT.test( tag ) && ! IS_SELF_CLOSING.test( tag ) && IS_END_TAG.test( tag ) ) {\n\n\t\t\t\t\t\ttagnum --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar res = `${ pad( '  ', tagnum ) }${ tag }`;\n\n\t\t\t\t\tif ( ! HAS_TEXT.test( tag ) && ! IS_SELF_CLOSING.test( tag ) && ! IS_END_TAG.test( tag ) ) {\n\n\t\t\t\t\t\ttagnum ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn res;\n\n\t\t\t\t} )\n\t\t\t\t.join( '\\n' );\n\n\t\t}\n\n\t\t// Convert an image into a png format for saving\n\t\tfunction base64ToBuffer( str ) {\n\n\t\t\tvar b = atob( str );\n\t\t\tvar buf = new Uint8Array( b.length );\n\n\t\t\tfor ( var i = 0, l = buf.length; i < l; i ++ ) {\n\n\t\t\t\tbuf[ i ] = b.charCodeAt( i );\n\n\t\t\t}\n\n\t\t\treturn buf;\n\n\t\t}\n\n\t\tvar canvas, ctx;\n\t\tfunction imageToData( image, ext ) {\n\n\t\t\tcanvas = canvas || document.createElement( 'canvas' );\n\t\t\tctx = ctx || canvas.getContext( '2d' );\n\n\t\t\tcanvas.width = image.naturalWidth;\n\t\t\tcanvas.height = image.naturalHeight;\n\n\t\t\tctx.drawImage( image, 0, 0 );\n\n\t\t\t// Get the base64 encoded data\n\t\t\tvar base64data = canvas\n\t\t\t\t.toDataURL( `image/${ ext }`, 1 )\n\t\t\t\t.replace( /^data:image\\/(png|jpg);base64,/, '' );\n\n\t\t\t// Convert to a uint8 array\n\t\t\treturn base64ToBuffer( base64data );\n\n\t\t}\n\n\t\t// gets the attribute array. Generate a new array if the attribute is interleaved\n\t\tvar getFuncs = [ 'getX', 'getY', 'getZ', 'getW' ];\n\t\tfunction attrBufferToArray( attr ) {\n\n\t\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\t\t// use the typed array constructor to save on memory\n\t\t\t\tvar arr = new attr.array.constructor( attr.count * attr.itemSize );\n\t\t\t\tvar size = attr.itemSize;\n\t\t\t\tfor ( var i = 0, l = attr.count; i < l; i ++ ) {\n\n\t\t\t\t\tfor ( var j = 0; j < size; j ++ ) {\n\n\t\t\t\t\t\tarr[ i * size + j ] = attr[ getFuncs[ j ] ]( i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn arr;\n\n\t\t\t} else {\n\n\t\t\t\treturn attr.array;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Returns an array of the same type starting at the `st` index,\n\t\t// and `ct` length\n\t\tfunction subArray( arr, st, ct ) {\n\n\t\t\tif ( Array.isArray( arr ) ) return arr.slice( st, st + ct );\n\t\t\telse return new arr.constructor( arr.buffer, st * arr.BYTES_PER_ELEMENT, ct );\n\n\t\t}\n\n\t\t// Returns the string for a geometry's attribute\n\t\tfunction getAttribute( attr, name, params, type ) {\n\n\t\t\tvar array = attrBufferToArray( attr );\n\t\t\tvar res =\n\t\t\t\t\t`<source id=\"${ name }\">` +\n\n\t\t\t\t\t`<float_array id=\"${ name }-array\" count=\"${ array.length }\">` +\n\t\t\t\t\tarray.join( ' ' ) +\n\t\t\t\t\t'</float_array>' +\n\n\t\t\t\t\t'<technique_common>' +\n\t\t\t\t\t`<accessor source=\"#${ name }-array\" count=\"${ Math.floor( array.length / attr.itemSize ) }\" stride=\"${ attr.itemSize }\">` +\n\n\t\t\t\t\tparams.map( n => `<param name=\"${ n }\" type=\"${ type }\" />` ).join( '' ) +\n\n\t\t\t\t\t'</accessor>' +\n\t\t\t\t\t'</technique_common>' +\n\t\t\t\t\t'</source>';\n\n\t\t\treturn res;\n\n\t\t}\n\n\t\t// Returns the string for a node's transform information\n\t\tvar transMat;\n\t\tfunction getTransform( o ) {\n\n\t\t\t// ensure the object's matrix is up to date\n\t\t\t// before saving the transform\n\t\t\to.updateMatrix();\n\n\t\t\ttransMat = transMat || new THREE.Matrix4();\n\t\t\ttransMat.copy( o.matrix );\n\t\t\ttransMat.transpose();\n\t\t\treturn `<matrix>${ transMat.toArray().join( ' ' ) }</matrix>`;\n\n\t\t}\n\n\t\t// Process the given piece of geometry into the geometry library\n\t\t// Returns the mesh id\n\t\tfunction processGeometry( g ) {\n\n\t\t\tvar info = geometryInfo.get( g );\n\n\t\t\tif ( ! info ) {\n\n\t\t\t\t// convert the geometry to bufferGeometry if it isn't already\n\t\t\t\tvar bufferGeometry = g;\n\t\t\t\tif ( bufferGeometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tbufferGeometry = ( new THREE.BufferGeometry() ).fromGeometry( bufferGeometry );\n\n\t\t\t\t}\n\n\t\t\t\tvar meshid = `Mesh${ libraryGeometries.length + 1 }`;\n\n\t\t\t\tvar indexCount =\n\t\t\t\t\tbufferGeometry.index ?\n\t\t\t\t\t\tbufferGeometry.index.count * bufferGeometry.index.itemSize :\n\t\t\t\t\t\tbufferGeometry.attributes.position.count;\n\n\t\t\t\tvar groups =\n\t\t\t\t\tbufferGeometry.groups != null && bufferGeometry.groups.length !== 0 ?\n\t\t\t\t\t\tbufferGeometry.groups :\n\t\t\t\t\t\t[ { start: 0, count: indexCount, materialIndex: 0 } ];\n\n\t\t\t\tvar gnode = `<geometry id=\"${ meshid }\" name=\"${ g.name }\"><mesh>`;\n\n\t\t\t\t// define the geometry node and the vertices for the geometry\n\t\t\t\tvar posName = `${ meshid }-position`;\n\t\t\t\tvar vertName = `${ meshid }-vertices`;\n\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.position, posName, [ 'X', 'Y', 'Z' ], 'float' );\n\t\t\t\tgnode += `<vertices id=\"${ vertName }\"><input semantic=\"POSITION\" source=\"#${ posName }\" /></vertices>`;\n\n\t\t\t\t// NOTE: We're not optimizing the attribute arrays here, so they're all the same length and\n\t\t\t\t// can therefore share the same triangle indices. However, MeshLab seems to have trouble opening\n\t\t\t\t// models with attributes that share an offset.\n\t\t\t\t// MeshLab Bug#424: https://sourceforge.net/p/meshlab/bugs/424/\n\n\t\t\t\t// serialize normals\n\t\t\t\tvar triangleInputs = `<input semantic=\"VERTEX\" source=\"#${ vertName }\" offset=\"0\" />`;\n\t\t\t\tif ( 'normal' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar normName = `${ meshid }-normal`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.normal, normName, [ 'X', 'Y', 'Z' ], 'float' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"NORMAL\" source=\"#${ normName }\" offset=\"0\" />`;\n\n\t\t\t\t}\n\n\t\t\t\t// serialize uvs\n\t\t\t\tif ( 'uv' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar uvName = `${ meshid }-texcoord`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.uv, uvName, [ 'S', 'T' ], 'float' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"TEXCOORD\" source=\"#${ uvName }\" offset=\"0\" set=\"0\" />`;\n\n\t\t\t\t}\n\n\t\t\t\t// serialize colors\n\t\t\t\tif ( 'color' in bufferGeometry.attributes ) {\n\n\t\t\t\t\tvar colName = `${ meshid }-color`;\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.color, colName, [ 'X', 'Y', 'Z' ], 'uint8' );\n\t\t\t\t\ttriangleInputs += `<input semantic=\"COLOR\" source=\"#${ colName }\" offset=\"0\" />`;\n\n\t\t\t\t}\n\n\t\t\t\tvar indexArray = null;\n\t\t\t\tif ( bufferGeometry.index ) {\n\n\t\t\t\t\tindexArray = attrBufferToArray( bufferGeometry.index );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArray = new Array( indexCount );\n\t\t\t\t\tfor ( var i = 0, l = indexArray.length; i < l; i ++ ) indexArray[ i ] = i;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\tvar subarr = subArray( indexArray, group.start, group.count );\n\t\t\t\t\tvar polycount = subarr.length / 3;\n\t\t\t\t\tgnode += `<triangles material=\"MESH_MATERIAL_${ group.materialIndex }\" count=\"${ polycount }\">`;\n\t\t\t\t\tgnode += triangleInputs;\n\n\t\t\t\t\tgnode += `<p>${ subarr.join( ' ' ) }</p>`;\n\t\t\t\t\tgnode += '</triangles>';\n\n\t\t\t\t}\n\n\t\t\t\tgnode += `</mesh></geometry>`;\n\n\t\t\t\tlibraryGeometries.push( gnode );\n\n\t\t\t\tinfo = { meshid: meshid, bufferGeometry: bufferGeometry };\n\t\t\t\tgeometryInfo.set( g, info );\n\n\t\t\t}\n\n\t\t\treturn info;\n\n\t\t}\n\n\t\t// Process the given texture into the image library\n\t\t// Returns the image library\n\t\tfunction processTexture( tex ) {\n\n\t\t\tvar texid = imageMap.get( tex );\n\t\t\tif ( texid == null ) {\n\n\t\t\t\ttexid = `image-${ libraryImages.length + 1 }`;\n\n\t\t\t\tvar ext = 'png';\n\t\t\t\tvar name = tex.name || texid;\n\t\t\t\tvar imageNode = `<image id=\"${ texid }\" name=\"${ name }\">`;\n\n\t\t\t\tif ( version === '1.5.0' ) {\n\n\t\t\t\t\timageNode += `<init_from><ref>${ options.textureDirectory }${ name }.${ ext }</ref></init_from>`;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// version image node 1.4.1\n\t\t\t\t\timageNode += `<init_from>${ options.textureDirectory }${ name }.${ ext }</init_from>`;\n\n\t\t\t\t}\n\n\t\t\t\timageNode += '</image>';\n\n\t\t\t\tlibraryImages.push( imageNode );\n\t\t\t\timageMap.set( tex, texid );\n\t\t\t\ttextures.push( {\n\t\t\t\t\tdirectory: options.textureDirectory,\n\t\t\t\t\tname,\n\t\t\t\t\text,\n\t\t\t\t\tdata: imageToData( tex.image, ext ),\n\t\t\t\t\toriginal: tex\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn texid;\n\n\t\t}\n\n\t\t// Process the given material into the material and effect libraries\n\t\t// Returns the material id\n\t\tfunction processMaterial( m ) {\n\n\t\t\tvar matid = materialMap.get( m );\n\n\t\t\tif ( matid == null ) {\n\n\t\t\t\tmatid = `Mat${ libraryEffects.length + 1 }`;\n\n\t\t\t\tvar type = 'phong';\n\n\t\t\t\tif ( m instanceof THREE.MeshLambertMaterial ) {\n\n\t\t\t\t\ttype = 'lambert';\n\n\t\t\t\t} else if ( m instanceof THREE.MeshBasicMaterial ) {\n\n\t\t\t\t\ttype = 'constant';\n\n\t\t\t\t}\n\n\t\t\t\tvar emissive = m.emissive ? m.emissive : new THREE.Color( 0, 0, 0 );\n\t\t\t\tvar diffuse = m.color ? m.color : new THREE.Color( 0, 0, 0 );\n\t\t\t\tvar specular = m.specular ? m.specular : new THREE.Color( 1, 1, 1 );\n\t\t\t\tvar shininess = m.shininess || 0;\n\t\t\t\tvar reflectivity = m.reflectivity || 0;\n\n\t\t\t\t// Do not export and alpha map for the reasons mentioned in issue (#13792)\n\t\t\t\t// in THREE.js alpha maps are black and white, but collada expects the alpha\n\t\t\t\t// channel to specify the transparency\n\t\t\t\tvar transparencyNode = '';\n\t\t\t\tif ( m.transparent === true ) {\n\n\t\t\t\t\ttransparencyNode +=\n\t\t\t\t\t\t`<transparent>` +\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tm.map ?\n\t\t\t\t\t\t\t\t`<texture texture=\"diffuse-sampler\"></texture>` :\n\t\t\t\t\t\t\t\t'<float>1</float>'\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t'</transparent>';\n\n\t\t\t\t\tif ( m.opacity < 1 ) {\n\n\t\t\t\t\t\ttransparencyNode += `<transparency><float>${ m.opacity }</float></transparency>`;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar techniqueNode = `<technique sid=\"common\"><${ type }>` +\n\n\t\t\t\t\t'<emission>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.emissiveMap ?\n\t\t\t\t\t\t\t'<texture texture=\"emissive-sampler\" texcoord=\"TEXCOORD\" />' :\n\t\t\t\t\t\t\t`<color sid=\"emission\">${ emissive.r } ${ emissive.g } ${ emissive.b } 1</color>`\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</emission>' +\n\n\t\t\t\t\t'<diffuse>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.map ?\n\t\t\t\t\t\t\t'<texture texture=\"diffuse-sampler\" texcoord=\"TEXCOORD\" />' :\n\t\t\t\t\t\t\t`<color sid=\"diffuse\">${ diffuse.r } ${ diffuse.g } ${ diffuse.b } 1</color>`\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</diffuse>' +\n\n\t\t\t\t\t`<specular><color sid=\"specular\">${ specular.r } ${ specular.g } ${ specular.b } 1</color></specular>` +\n\n\t\t\t\t\t'<shininess>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.specularMap ?\n\t\t\t\t\t\t\t'<texture texture=\"specular-sampler\" texcoord=\"TEXCOORD\" />' :\n\t\t\t\t\t\t\t`<float sid=\"shininess\">${ shininess }</float>`\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</shininess>' +\n\n\t\t\t\t\t`<reflective><color>${ diffuse.r } ${ diffuse.g } ${ diffuse.b } 1</color></reflective>` +\n\n\t\t\t\t\t`<reflectivity><float>${ reflectivity }</float></reflectivity>` +\n\n\t\t\t\t\ttransparencyNode +\n\n\t\t\t\t\t`</${ type }></technique>`;\n\n\t\t\t\tvar effectnode =\n\t\t\t\t\t`<effect id=\"${ matid }-effect\">` +\n\t\t\t\t\t'<profile_COMMON>' +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.map ?\n\t\t\t\t\t\t\t'<newparam sid=\"diffuse-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.map ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"diffuse-sampler\"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.specularMap ?\n\t\t\t\t\t\t\t'<newparam sid=\"specular-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.specularMap ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"specular-sampler\"><sampler2D><source>specular-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.emissiveMap ?\n\t\t\t\t\t\t\t'<newparam sid=\"emissive-surface\"><surface type=\"2D\">' +\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.emissiveMap ) }</init_from>` +\n\t\t\t\t\t\t\t'</surface></newparam>' +\n\t\t\t\t\t\t\t'<newparam sid=\"emissive-sampler\"><sampler2D><source>emissive-surface</source></sampler2D></newparam>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\ttechniqueNode +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tm.side === THREE.DoubleSide ?\n\t\t\t\t\t\t\t`<extra><technique><double_sided sid=\"double_sided\" type=\"int\">1</double_sided></technique></extra>` :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</profile_COMMON>' +\n\n\t\t\t\t\t'</effect>';\n\n\t\t\t\tlibraryMaterials.push( `<material id=\"${ matid }\" name=\"${ m.name }\"><instance_effect url=\"#${ matid }-effect\" /></material>` );\n\t\t\t\tlibraryEffects.push( effectnode );\n\t\t\t\tmaterialMap.set( m, matid );\n\n\t\t\t}\n\n\t\t\treturn matid;\n\n\t\t}\n\n\t\t// Recursively process the object into a scene\n\t\tfunction processObject( o ) {\n\n\t\t\tvar node = `<node name=\"${ o.name }\">`;\n\n\t\t\tnode += getTransform( o );\n\n\t\t\tif ( o instanceof THREE.Mesh && o.geometry != null ) {\n\n\t\t\t\t// function returns the id associated with the mesh and a \"BufferGeometry\" version\n\t\t\t\t// of the geometry in case it's not a geometry.\n\t\t\t\tvar geomInfo = processGeometry( o.geometry );\n\t\t\t\tvar meshid = geomInfo.meshid;\n\t\t\t\tvar geometry = geomInfo.bufferGeometry;\n\n\t\t\t\t// ids of the materials to bind to the geometry\n\t\t\t\tvar matids = null;\n\n\t\t\t\t// get a list of materials to bind to the sub groups of the geometry.\n\t\t\t\t// If the amount of subgroups is greater than the materials, than reuse\n\t\t\t\t// the materials.\n\t\t\t\tvar mat = o.material || new THREE.MeshBasicMaterial();\n\t\t\t\tvar materials = Array.isArray( mat ) ? mat : [ mat ];\n\t\t\t\tmatids = new Array( geometry.groups.length )\n\t\t\t\t\t.fill()\n\t\t\t\t\t.map( ( v, i ) => processMaterial( materials[ i % materials.length ] ) );\n\n\n\t\t\t\tnode +=\n\t\t\t\t\t`<instance_geometry url=\"#${ meshid }\">` +\n\n\t\t\t\t\t(\n\t\t\t\t\t\tmatids != null ?\n\t\t\t\t\t\t\t'<bind_material><technique_common>' +\n\t\t\t\t\t\t\tmatids.map( ( id, i ) =>\n\n\t\t\t\t\t\t\t\t`<instance_material symbol=\"MESH_MATERIAL_${ i }\" target=\"#${ id }\" >` +\n\n\t\t\t\t\t\t\t\t'<bind_vertex_input semantic=\"TEXCOORD\" input_semantic=\"TEXCOORD\" input_set=\"0\" />' +\n\n\t\t\t\t\t\t\t\t'</instance_material>'\n\t\t\t\t\t\t\t).join( '' ) +\n\t\t\t\t\t\t\t'</technique_common></bind_material>' :\n\t\t\t\t\t\t\t''\n\t\t\t\t\t) +\n\n\t\t\t\t\t'</instance_geometry>';\n\n\t\t\t}\n\n\t\t\to.children.forEach( c => node += processObject( c ) );\n\n\t\t\tnode += '</node>';\n\n\t\t\treturn node;\n\n\t\t}\n\n\t\tvar geometryInfo = new WeakMap();\n\t\tvar materialMap = new WeakMap();\n\t\tvar imageMap = new WeakMap();\n\t\tvar textures = [];\n\n\t\tvar libraryImages = [];\n\t\tvar libraryGeometries = [];\n\t\tvar libraryEffects = [];\n\t\tvar libraryMaterials = [];\n\t\tvar libraryVisualScenes = processObject( object );\n\n\t\tvar specLink = version === '1.4.1' ? 'http://www.collada.org/2005/11/COLLADASchema' : 'https://www.khronos.org/collada/';\n\t\tvar dae =\n\t\t\t'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>' +\n\t\t\t`<COLLADA xmlns=\"${ specLink }\" version=\"${ version }\">` +\n\t\t\t'<asset>' +\n\t\t\t(\n\t\t\t\t'<contributor>' +\n\t\t\t\t'<authoring_tool>THREE.js Collada Exporter</authoring_tool>' +\n\t\t\t\t( options.author !== null ? `<author>${ options.author }</author>` : '' ) +\n\t\t\t\t'</contributor>' +\n\t\t\t\t`<created>${ ( new Date() ).toISOString() }</created>` +\n\t\t\t\t`<modified>${ ( new Date() ).toISOString() }</modified>` +\n\t\t\t\t'<up_axis>Y_UP</up_axis>'\n\t\t\t) +\n\t\t\t'</asset>';\n\n\t\tdae += `<library_images>${ libraryImages.join( '' ) }</library_images>`;\n\n\t\tdae += `<library_effects>${ libraryEffects.join( '' ) }</library_effects>`;\n\n\t\tdae += `<library_materials>${ libraryMaterials.join( '' ) }</library_materials>`;\n\n\t\tdae += `<library_geometries>${ libraryGeometries.join( '' ) }</library_geometries>`;\n\n\t\tdae += `<library_visual_scenes><visual_scene id=\"Scene\" name=\"scene\">${ libraryVisualScenes }</visual_scene></library_visual_scenes>`;\n\n\t\tdae += '<scene><instance_visual_scene url=\"#Scene\"/></scene>';\n\n\t\tdae += '</COLLADA>';\n\n\t\tvar res = {\n\t\t\tdata: format( dae ),\n\t\t\ttextures\n\t\t};\n\n\t\tif ( typeof onDone === 'function' ) {\n\n\t\t\trequestAnimationFrame( () => onDone( res ) );\n\n\t\t}\n\n\t\treturn res;\n\n\t}\n\n};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/ColladaExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "ColladaExporter",
    "memberof": "scripts/exporters/ColladaExporter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/exporters/ColladaExporter.js~ColladaExporter",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/ColladaExporter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Garrett Johnson / http://gkjohnson.github.io/\nhttps://github.com/gkjohnson/collada-exporter-js\n\nUsage:\n var exporter = new THREE.ColladaExporter();\n\n var data = exporter.parse(mesh);\n\nFormat Definition:\n https://www.khronos.org/collada/"
      }
    ],
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "scripts/exporters/GLTFExporter.js",
    "content": "var THREE = require( 'three' );\n/**\n * @author fernandojsg / http://fernandojsg.com\n * @author Don McCurdy / https://www.donmccurdy.com\n * @author Takahiro / https://github.com/takahirox\n */\n\n//------------------------------------------------------------------------------\n//Constants\n//------------------------------------------------------------------------------\nvar WEBGL_CONSTANTS = {\n\t\tPOINTS: 0x0000,\n\t\tLINES: 0x0001,\n\t\tLINE_LOOP: 0x0002,\n\t\tLINE_STRIP: 0x0003,\n\t\tTRIANGLES: 0x0004,\n\t\tTRIANGLE_STRIP: 0x0005,\n\t\tTRIANGLE_FAN: 0x0006,\n\n\t\tUNSIGNED_BYTE: 0x1401,\n\t\tUNSIGNED_SHORT: 0x1403,\n\t\tFLOAT: 0x1406,\n\t\tUNSIGNED_INT: 0x1405,\n\t\tARRAY_BUFFER: 0x8892,\n\t\tELEMENT_ARRAY_BUFFER: 0x8893,\n\n\t\tNEAREST: 0x2600,\n\t\tLINEAR: 0x2601,\n\t\tNEAREST_MIPMAP_NEAREST: 0x2700,\n\t\tLINEAR_MIPMAP_NEAREST: 0x2701,\n\t\tNEAREST_MIPMAP_LINEAR: 0x2702,\n\t\tLINEAR_MIPMAP_LINEAR: 0x2703\n};\n\nvar THREE_TO_WEBGL = {\n\t\t// @TODO Replace with computed property name [THREE.*] when available on\n\t\t// es6\n\t\t1003: WEBGL_CONSTANTS.NEAREST,\n\t\t1004: WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST,\n\t\t1005: WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR,\n\t\t1006: WEBGL_CONSTANTS.LINEAR,\n\t\t1007: WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST,\n\t\t1008: WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR\n};\n\nvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\tposition: 'translation',\n\t\tquaternion: 'rotation',\n\t\tmorphTargetInfluences: 'weights'\n};\n\n\nvar _GLTFExporter = (function(){\n//\t------------------------------------------------------------------------------\n//\tGLTF Exporter\n//\t------------------------------------------------------------------------------\n\tfunction GLTFExporter() {}\n\n\tGLTFExporter.prototype = {\n\n\t\t\tconstructor: GLTFExporter,\n\n\t\t\t/**\n\t\t\t * Parse scenes and generate GLTF output\n\t\t\t * \n\t\t\t * @param {THREE.Scene\n\t\t\t *            or [THREE.Scenes]} input THREE.Scene or Array of\n\t\t\t *            THREE.Scenes\n\t\t\t * @param {Function}\n\t\t\t *            onDone Callback on completed\n\t\t\t * @param {Object}\n\t\t\t *            options options\n\t\t\t */\n\t\t\tparse: function ( input, onDone, options ) {\n\n\t\t\t\tvar DEFAULT_OPTIONS = {\n\t\t\t\t\t\tbinary: false,\n\t\t\t\t\t\ttrs: false,\n\t\t\t\t\t\tonlyVisible: true,\n\t\t\t\t\t\ttruncateDrawRange: true,\n\t\t\t\t\t\tembedImages: true,\n\t\t\t\t\t\tanimations: [],\n\t\t\t\t\t\tforceIndices: false,\n\t\t\t\t\t\tforcePowerOfTwoTextures: false\n\t\t\t\t};\n\n\t\t\t\toptions = Object.assign( {}, DEFAULT_OPTIONS, options );\n\n\t\t\t\tif ( options.animations.length > 0 ) {\n\n\t\t\t\t\t// Only TRS properties, and not matrices, may be targeted by\n\t\t\t\t\t// animation.\n\t\t\t\t\toptions.trs = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar outputJSON = {\n\n\t\t\t\t\t\tasset: {\n\n\t\t\t\t\t\t\tversion: \"2.0\",\n\t\t\t\t\t\t\tgenerator: \"THREE.GLTFExporter\"\n\n\t\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tvar byteOffset = 0;\n\t\t\t\tvar buffers = [];\n\t\t\t\tvar pending = [];\n\t\t\t\tvar nodeMap = new Map();\n\t\t\t\tvar skins = [];\n\t\t\t\tvar extensionsUsed = {};\n\t\t\t\tvar cachedData = {\n\n\t\t\t\t\t\tattributes: new Map(),\n\t\t\t\t\t\tmaterials: new Map(),\n\t\t\t\t\t\ttextures: new Map(),\n\t\t\t\t\t\timages: new Map()\n\n\t\t\t\t};\n\n\t\t\t\tvar cachedCanvas;\n\n\t\t\t\t/**\n\t\t\t\t * Compare two arrays\n\t\t\t\t */\n\t\t\t\t/**\n\t\t\t\t * Compare two arrays\n\t\t\t\t * \n\t\t\t\t * @param {Array}\n\t\t\t\t *            array1 Array 1 to compare\n\t\t\t\t * @param {Array}\n\t\t\t\t *            array2 Array 2 to compare\n\t\t\t\t * @return {Boolean} Returns true if both arrays are equal\n\t\t\t\t */\n\t\t\t\tfunction equalArray( array1, array2 ) {\n\n\t\t\t\t\treturn ( array1.length === array2.length ) && array1.every( function ( element, index ) {\n\n\t\t\t\t\t\treturn element === array2[ index ];\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Converts a string to an ArrayBuffer.\n\t\t\t\t * \n\t\t\t\t * @param {string}\n\t\t\t\t *            text\n\t\t\t\t * @return {ArrayBuffer}\n\t\t\t\t */\n\t\t\t\tfunction stringToArrayBuffer( text ) {\n\n\t\t\t\t\tif ( window.TextEncoder !== undefined ) {\n\n\t\t\t\t\t\treturn new TextEncoder().encode( text ).buffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar array = new Uint8Array( new ArrayBuffer( text.length ) );\n\n\t\t\t\t\tfor ( var i = 0, il = text.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar value = text.charCodeAt( i );\n\n\t\t\t\t\t\t// Replacing multi-byte character with space(0x20).\n\t\t\t\t\t\tarray[ i ] = value > 0xFF ? 0x20 : value;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array.buffer;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Get the min and max vectors from the given attribute\n\t\t\t\t * \n\t\t\t\t * @param {THREE.BufferAttribute}\n\t\t\t\t *            attribute Attribute to find the min/max in range\n\t\t\t\t *            from start to start + count\n\t\t\t\t * @param {Integer}\n\t\t\t\t *            start\n\t\t\t\t * @param {Integer}\n\t\t\t\t *            count\n\t\t\t\t * @return {Object} Object containing the `min` and `max` values\n\t\t\t\t *         (As an array of attribute.itemSize components)\n\t\t\t\t */\n\t\t\t\tfunction getMinMax( attribute, start, count ) {\n\n\t\t\t\t\tvar output = {\n\n\t\t\t\t\t\t\tmin: new Array( attribute.itemSize ).fill( Number.POSITIVE_INFINITY ),\n\t\t\t\t\t\t\tmax: new Array( attribute.itemSize ).fill( Number.NEGATIVE_INFINITY )\n\n\t\t\t\t\t};\n\n\t\t\t\t\tfor ( var i = start; i < start + count; i ++ ) {\n\n\t\t\t\t\t\tfor ( var a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\t\t\t\tvar value = attribute.array[ i * attribute.itemSize + a ];\n\t\t\t\t\t\t\toutput.min[ a ] = Math.min( output.min[ a ], value );\n\t\t\t\t\t\t\toutput.max[ a ] = Math.max( output.max[ a ], value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn output;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Checks if image size is POT.\n\t\t\t\t * \n\t\t\t\t * @param {Image}\n\t\t\t\t *            image The image to be checked.\n\t\t\t\t * @returns {Boolean} Returns true if image size is POT.\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\t\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Checks if normal attribute values are normalized.\n\t\t\t\t * \n\t\t\t\t * @param {THREE.BufferAttribute}\n\t\t\t\t *            normal\n\t\t\t\t * @returns {Boolean}\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tfunction isNormalizedNormalAttribute( normal ) {\n\n\t\t\t\t\tif ( cachedData.attributes.has( normal ) ) {\n\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar v = new THREE.Vector3();\n\n\t\t\t\t\tfor ( var i = 0, il = normal.count; i < il; i ++ ) {\n\n\t\t\t\t\t\t// 0.0005 is from glTF-validator\n\t\t\t\t\t\tif ( Math.abs( v.fromArray( normal.array, i * 3 ).length() - 1.0 ) > 0.0005 ) return false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Creates normalized normal buffer attribute.\n\t\t\t\t * \n\t\t\t\t * @param {THREE.BufferAttribute}\n\t\t\t\t *            normal\n\t\t\t\t * @returns {THREE.BufferAttribute}\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tfunction createNormalizedNormalAttribute( normal ) {\n\n\t\t\t\t\tif ( cachedData.attributes.has( normal ) ) {\n\n\t\t\t\t\t\treturn cachedData.attributes.get( normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar attribute = normal.clone();\n\n\t\t\t\t\tvar v = new THREE.Vector3();\n\n\t\t\t\t\tfor ( var i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\t\t\t\tv.fromArray( attribute.array, i * 3 );\n\n\t\t\t\t\t\tif ( v.x === 0 && v.y === 0 && v.z === 0 ) {\n\n\t\t\t\t\t\t\t// if values can't be normalized set (1, 0, 0)\n\t\t\t\t\t\t\tv.setX( 1.0 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv.normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tv.toArray( attribute.array, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcachedData.attributes.set( normal, attribute );\n\n\t\t\t\t\treturn attribute;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Get the required size + padding for a buffer, rounded to the\n\t\t\t\t * next 4-byte boundary.\n\t\t\t\t * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\n\t\t\t\t * \n\t\t\t\t * @param {Integer}\n\t\t\t\t *            bufferSize The size the original buffer.\n\t\t\t\t * @returns {Integer} new buffer size with required padding.\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tfunction getPaddedBufferSize( bufferSize ) {\n\n\t\t\t\t\treturn Math.ceil( bufferSize / 4 ) * 4;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Returns a buffer aligned to 4-byte boundary.\n\t\t\t\t * \n\t\t\t\t * @param {ArrayBuffer}\n\t\t\t\t *            arrayBuffer Buffer to pad\n\t\t\t\t * @param {Integer}\n\t\t\t\t *            paddingByte (Optional)\n\t\t\t\t * @returns {ArrayBuffer} The same buffer if it's already\n\t\t\t\t *          aligned to 4-byte boundary or a new buffer\n\t\t\t\t */\n\t\t\t\tfunction getPaddedArrayBuffer( arrayBuffer, paddingByte ) {\n\n\t\t\t\t\tpaddingByte = paddingByte || 0;\n\n\t\t\t\t\tvar paddedLength = getPaddedBufferSize( arrayBuffer.byteLength );\n\n\t\t\t\t\tif ( paddedLength !== arrayBuffer.byteLength ) {\n\n\t\t\t\t\t\tvar array = new Uint8Array( paddedLength );\n\t\t\t\t\t\tarray.set( new Uint8Array( arrayBuffer ) );\n\n\t\t\t\t\t\tif ( paddingByte !== 0 ) {\n\n\t\t\t\t\t\t\tfor ( var i = arrayBuffer.byteLength; i < paddedLength; i ++ ) {\n\n\t\t\t\t\t\t\t\tarray[ i ] = paddingByte;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn array.buffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn arrayBuffer;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Serializes a userData.\n\t\t\t\t * \n\t\t\t\t * @param {THREE.Object3D|THREE.Material}\n\t\t\t\t *            object\n\t\t\t\t * @returns {Object}\n\t\t\t\t */\n\t\t\t\tfunction serializeUserData( object ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\treturn JSON.parse( JSON.stringify( object.userData ) );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' +\n\t\t\t\t\t\t\t\t'won\\'t be serialized because of JSON.stringify error - ' + error.message );\n\n\t\t\t\t\t\treturn {};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process a buffer to append to the default one.\n\t\t\t\t * \n\t\t\t\t * @param {ArrayBuffer}\n\t\t\t\t *            buffer\n\t\t\t\t * @return {Integer}\n\t\t\t\t */\n\t\t\t\tfunction processBuffer( buffer ) {\n\n\t\t\t\t\tif ( ! outputJSON.buffers ) {\n\n\t\t\t\t\t\toutputJSON.buffers = [ { byteLength: 0 } ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// All buffers are merged before export.\n\t\t\t\t\tbuffers.push( buffer );\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process and generate a BufferView\n\t\t\t\t * \n\t\t\t\t * @param {THREE.BufferAttribute}\n\t\t\t\t *            attribute\n\t\t\t\t * @param {number}\n\t\t\t\t *            componentType\n\t\t\t\t * @param {number}\n\t\t\t\t *            start\n\t\t\t\t * @param {number}\n\t\t\t\t *            count\n\t\t\t\t * @param {number}\n\t\t\t\t *            target (Optional) Target usage of the BufferView\n\t\t\t\t * @return {Object}\n\t\t\t\t */\n\t\t\t\tfunction processBufferView( attribute, componentType, start, count, target ) {\n\n\t\t\t\t\tif ( ! outputJSON.bufferViews ) {\n\n\t\t\t\t\t\toutputJSON.bufferViews = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create a new dataview and dump the attribute's array into\n\t\t\t\t\t// it\n\n\t\t\t\t\tvar componentSize;\n\n\t\t\t\t\tif ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\t\t\tcomponentSize = 1;\n\n\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\t\t\tcomponentSize = 2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcomponentSize = 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar byteLength = getPaddedBufferSize( count * attribute.itemSize * componentSize );\n\t\t\t\t\tvar dataView = new DataView( new ArrayBuffer( byteLength ) );\n\t\t\t\t\tvar offset = 0;\n\n\t\t\t\t\tfor ( var i = start; i < start + count; i ++ ) {\n\n\t\t\t\t\t\tfor ( var a = 0; a < attribute.itemSize; a ++ ) {\n\n\t\t\t\t\t\t\t// @TODO Fails on InterleavedBufferAttribute, and\n\t\t\t\t\t\t\t// could probably be\n\t\t\t\t\t\t\t// optimized for normal BufferAttribute.\n\t\t\t\t\t\t\tvar value = attribute.array[ i * attribute.itemSize + a ];\n\n\t\t\t\t\t\t\tif ( componentType === WEBGL_CONSTANTS.FLOAT ) {\n\n\t\t\t\t\t\t\t\tdataView.setFloat32( offset, value, true );\n\n\t\t\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_INT ) {\n\n\t\t\t\t\t\t\t\tdataView.setUint32( offset, value, true );\n\n\t\t\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\n\n\t\t\t\t\t\t\t\tdataView.setUint16( offset, value, true );\n\n\t\t\t\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\n\n\t\t\t\t\t\t\t\tdataView.setUint8( offset, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toffset += componentSize;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfBufferView = {\n\n\t\t\t\t\t\t\tbuffer: processBuffer( dataView.buffer ),\n\t\t\t\t\t\t\tbyteOffset: byteOffset,\n\t\t\t\t\t\t\tbyteLength: byteLength\n\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( target !== undefined ) gltfBufferView.target = target;\n\n\t\t\t\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\n\n\t\t\t\t\t\t// Only define byteStride for vertex attributes.\n\t\t\t\t\t\tgltfBufferView.byteStride = attribute.itemSize * componentSize;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbyteOffset += byteLength;\n\n\t\t\t\t\toutputJSON.bufferViews.push( gltfBufferView );\n\n\t\t\t\t\t// @TODO Merge bufferViews where possible.\n\t\t\t\t\tvar output = {\n\n\t\t\t\t\t\t\tid: outputJSON.bufferViews.length - 1,\n\t\t\t\t\t\t\tbyteLength: 0\n\n\t\t\t\t\t};\n\n\t\t\t\t\treturn output;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process and generate a BufferView from an image Blob.\n\t\t\t\t * \n\t\t\t\t * @param {Blob}\n\t\t\t\t *            blob\n\t\t\t\t * @return {Promise<Integer>}\n\t\t\t\t */\n\t\t\t\tfunction processBufferViewImage( blob ) {\n\n\t\t\t\t\tif ( ! outputJSON.bufferViews ) {\n\n\t\t\t\t\t\toutputJSON.bufferViews = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\t\tvar reader = new window.FileReader();\n\t\t\t\t\t\treader.readAsArrayBuffer( blob );\n\t\t\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\t\t\tvar buffer = getPaddedArrayBuffer( reader.result );\n\n\t\t\t\t\t\t\tvar bufferView = {\n\t\t\t\t\t\t\t\t\tbuffer: processBuffer( buffer ),\n\t\t\t\t\t\t\t\t\tbyteOffset: byteOffset,\n\t\t\t\t\t\t\t\t\tbyteLength: buffer.byteLength\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tbyteOffset += buffer.byteLength;\n\n\t\t\t\t\t\t\toutputJSON.bufferViews.push( bufferView );\n\n\t\t\t\t\t\t\tresolve( outputJSON.bufferViews.length - 1 );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process attribute to generate an accessor\n\t\t\t\t * \n\t\t\t\t * @param {THREE.BufferAttribute}\n\t\t\t\t *            attribute Attribute to process\n\t\t\t\t * @param {THREE.BufferGeometry}\n\t\t\t\t *            geometry (Optional) Geometry used for truncated\n\t\t\t\t *            draw range\n\t\t\t\t * @param {Integer}\n\t\t\t\t *            start (Optional)\n\t\t\t\t * @param {Integer}\n\t\t\t\t *            count (Optional)\n\t\t\t\t * @return {Integer} Index of the processed accessor on the\n\t\t\t\t *         \"accessors\" array\n\t\t\t\t */\n\t\t\t\tfunction processAccessor( attribute, geometry, start, count ) {\n\n\t\t\t\t\tvar types = {\n\n\t\t\t\t\t\t\t1: 'SCALAR',\n\t\t\t\t\t\t\t2: 'VEC2',\n\t\t\t\t\t\t\t3: 'VEC3',\n\t\t\t\t\t\t\t4: 'VEC4',\n\t\t\t\t\t\t\t16: 'MAT4'\n\n\t\t\t\t\t};\n\n\t\t\t\t\tvar componentType;\n\n\t\t\t\t\t// Detect the component type of the attribute array (float,\n\t\t\t\t\t// uint or ushort)\n\t\t\t\t\tif ( attribute.array.constructor === Float32Array ) {\n\n\t\t\t\t\t\tcomponentType = WEBGL_CONSTANTS.FLOAT;\n\n\t\t\t\t\t} else if ( attribute.array.constructor === Uint32Array ) {\n\n\t\t\t\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_INT;\n\n\t\t\t\t\t} else if ( attribute.array.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\n\n\t\t\t\t\t} else if ( attribute.array.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Unsupported bufferAttribute component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( start === undefined ) start = 0;\n\t\t\t\t\tif ( count === undefined ) count = attribute.count;\n\n\t\t\t\t\t// @TODO Indexed buffer geometry with drawRange not\n\t\t\t\t\t// supported yet\n\t\t\t\t\tif ( options.truncateDrawRange && geometry !== undefined && geometry.index === null ) {\n\n\t\t\t\t\t\tvar end = start + count;\n\t\t\t\t\t\tvar end2 = geometry.drawRange.count === Infinity\n\t\t\t\t\t\t? attribute.count\n\t\t\t\t\t\t\t\t: geometry.drawRange.start + geometry.drawRange.count;\n\n\t\t\t\t\t\tstart = Math.max( start, geometry.drawRange.start );\n\t\t\t\t\t\tcount = Math.min( end, end2 ) - start;\n\n\t\t\t\t\t\tif ( count < 0 ) count = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Skip creating an accessor if the attribute doesn't have\n\t\t\t\t\t// data to export\n\t\t\t\t\tif ( count === 0 ) {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar minMax = getMinMax( attribute, start, count );\n\n\t\t\t\t\tvar bufferViewTarget;\n\n\t\t\t\t\t// If geometry isn't provided, don't infer the target usage\n\t\t\t\t\t// of the bufferView. For\n\t\t\t\t\t// animation samplers, target must not be set.\n\t\t\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\t\t\tbufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar bufferView = processBufferView( attribute, componentType, start, count, bufferViewTarget );\n\n\t\t\t\t\tvar gltfAccessor = {\n\n\t\t\t\t\t\t\tbufferView: bufferView.id,\n\t\t\t\t\t\t\tbyteOffset: bufferView.byteOffset,\n\t\t\t\t\t\t\tcomponentType: componentType,\n\t\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\t\tmax: minMax.max,\n\t\t\t\t\t\t\tmin: minMax.min,\n\t\t\t\t\t\t\ttype: types[ attribute.itemSize ]\n\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( ! outputJSON.accessors ) {\n\n\t\t\t\t\t\toutputJSON.accessors = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.accessors.push( gltfAccessor );\n\n\t\t\t\t\treturn outputJSON.accessors.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process image\n\t\t\t\t * \n\t\t\t\t * @param {Image}\n\t\t\t\t *            image to process\n\t\t\t\t * @param {Integer}\n\t\t\t\t *            format of the image (e.g. THREE.RGBFormat,\n\t\t\t\t *            THREE.RGBAFormat etc)\n\t\t\t\t * @param {Boolean}\n\t\t\t\t *            flipY before writing out the image\n\t\t\t\t * @return {Integer} Index of the processed texture in the\n\t\t\t\t *         \"images\" array\n\t\t\t\t */\n\t\t\t\tfunction processImage( image, format, flipY ) {\n\n\t\t\t\t\tif ( ! cachedData.images.has( image ) ) {\n\n\t\t\t\t\t\tcachedData.images.set( image, {} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cachedImages = cachedData.images.get( image );\n\t\t\t\t\tvar mimeType = format === THREE.RGBAFormat ? 'image/png' : 'image/jpeg';\n\t\t\t\t\tvar key = mimeType + \":flipY/\" + flipY.toString();\n\n\t\t\t\t\tif ( cachedImages[ key ] !== undefined ) {\n\n\t\t\t\t\t\treturn cachedImages[ key ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! outputJSON.images ) {\n\n\t\t\t\t\t\toutputJSON.images = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfImage = { mimeType: mimeType };\n\n\t\t\t\t\tif ( options.embedImages ) {\n\n\t\t\t\t\t\tvar canvas = cachedCanvas = cachedCanvas || document.createElement( 'canvas' );\n\n\t\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\t\t\tif ( options.forcePowerOfTwoTextures && ! isPowerOfTwo( image ) ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Resized non-power-of-two image.', image );\n\n\t\t\t\t\t\t\tcanvas.width = THREE.Math.floorPowerOfTwo( canvas.width );\n\t\t\t\t\t\t\tcanvas.height = THREE.Math.floorPowerOfTwo( canvas.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar ctx = canvas.getContext( '2d' );\n\n\t\t\t\t\t\tif ( flipY === true ) {\n\n\t\t\t\t\t\t\tctx.translate( 0, canvas.height );\n\t\t\t\t\t\t\tctx.scale( 1, - 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\t\t\t\tif ( options.binary === true ) {\n\n\t\t\t\t\t\t\tpending.push( new Promise( function ( resolve ) {\n\n\t\t\t\t\t\t\t\tcanvas.toBlob( function ( blob ) {\n\n\t\t\t\t\t\t\t\t\tprocessBufferViewImage( blob ).then( function ( bufferViewIndex ) {\n\n\t\t\t\t\t\t\t\t\t\tgltfImage.bufferView = bufferViewIndex;\n\n\t\t\t\t\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t}, mimeType );\n\n\t\t\t\t\t\t\t} ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgltfImage.uri = canvas.toDataURL( mimeType );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgltfImage.uri = image.src;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.images.push( gltfImage );\n\n\t\t\t\t\tvar index = outputJSON.images.length - 1;\n\t\t\t\t\tcachedImages[ key ] = index;\n\n\t\t\t\t\treturn index;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process sampler\n\t\t\t\t * \n\t\t\t\t * @param {Texture}\n\t\t\t\t *            map Texture to process\n\t\t\t\t * @return {Integer} Index of the processed texture in the\n\t\t\t\t *         \"samplers\" array\n\t\t\t\t */\n\t\t\t\tfunction processSampler( map ) {\n\n\t\t\t\t\tif ( ! outputJSON.samplers ) {\n\n\t\t\t\t\t\toutputJSON.samplers = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfSampler = {\n\n\t\t\t\t\t\t\tmagFilter: THREE_TO_WEBGL[ map.magFilter ],\n\t\t\t\t\t\t\tminFilter: THREE_TO_WEBGL[ map.minFilter ],\n\t\t\t\t\t\t\twrapS: THREE_TO_WEBGL[ map.wrapS ],\n\t\t\t\t\t\t\twrapT: THREE_TO_WEBGL[ map.wrapT ]\n\n\t\t\t\t\t};\n\n\t\t\t\t\toutputJSON.samplers.push( gltfSampler );\n\n\t\t\t\t\treturn outputJSON.samplers.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process texture\n\t\t\t\t * \n\t\t\t\t * @param {Texture}\n\t\t\t\t *            map Map to process\n\t\t\t\t * @return {Integer} Index of the processed texture in the\n\t\t\t\t *         \"textures\" array\n\t\t\t\t */\n\t\t\t\tfunction processTexture( map ) {\n\n\t\t\t\t\tif ( cachedData.textures.has( map ) ) {\n\n\t\t\t\t\t\treturn cachedData.textures.get( map );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! outputJSON.textures ) {\n\n\t\t\t\t\t\toutputJSON.textures = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfTexture = {\n\n\t\t\t\t\t\t\tsampler: processSampler( map ),\n\t\t\t\t\t\t\tsource: processImage( map.image, map.format, map.flipY )\n\n\t\t\t\t\t};\n\n\t\t\t\t\toutputJSON.textures.push( gltfTexture );\n\n\t\t\t\t\tvar index = outputJSON.textures.length - 1;\n\t\t\t\t\tcachedData.textures.set( map, index );\n\n\t\t\t\t\treturn index;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process material\n\t\t\t\t * \n\t\t\t\t * @param {THREE.Material}\n\t\t\t\t *            material Material to process\n\t\t\t\t * @return {Integer} Index of the processed material in the\n\t\t\t\t *         \"materials\" array\n\t\t\t\t */\n\t\t\t\tfunction processMaterial( material ) {\n\n\t\t\t\t\tif ( cachedData.materials.has( material ) ) {\n\n\t\t\t\t\t\treturn cachedData.materials.get( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! outputJSON.materials ) {\n\n\t\t\t\t\t\toutputJSON.materials = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\t\tconsole.warn( 'GLTFExporter: THREE.ShaderMaterial not supported.' );\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// @QUESTION Should we avoid including any attribute that\n\t\t\t\t\t// has the default value?\n\t\t\t\t\tvar gltfMaterial = {\n\n\t\t\t\t\t\t\tpbrMetallicRoughness: {}\n\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\t\tgltfMaterial.extensions = { KHR_materials_unlit: {} };\n\n\t\t\t\t\t\textensionsUsed[ 'KHR_materials_unlit' ] = true;\n\n\t\t\t\t\t} else if ( ! material.isMeshStandardMaterial ) {\n\n\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// pbrMetallicRoughness.baseColorFactor\n\t\t\t\t\tvar color = material.color.toArray().concat( [ material.opacity ] );\n\n\t\t\t\t\tif ( ! equalArray( color, [ 1, 1, 1, 1 ] ) ) {\n\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.baseColorFactor = color;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicFactor = material.metalness;\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.roughnessFactor = material.roughness;\n\n\t\t\t\t\t} else if ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicFactor = 0.0;\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.roughnessFactor = 0.9;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicFactor = 0.5;\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.roughnessFactor = 0.5;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// pbrMetallicRoughness.metallicRoughnessTexture\n\t\t\t\t\tif ( material.metalnessMap || material.roughnessMap ) {\n\n\t\t\t\t\t\tif ( material.metalnessMap === material.roughnessMap ) {\n\n\t\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.metallicRoughnessTexture = {\n\n\t\t\t\t\t\t\t\t\tindex: processTexture( material.metalnessMap )\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Ignoring metalnessMap and roughnessMap because they are not the same Texture.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// pbrMetallicRoughness.baseColorTexture\n\t\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\t\tgltfMaterial.pbrMetallicRoughness.baseColorTexture = {\n\n\t\t\t\t\t\t\t\tindex: processTexture( material.map )\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.isMeshBasicMaterial ||\n\t\t\t\t\t\t\tmaterial.isLineBasicMaterial ||\n\t\t\t\t\t\t\tmaterial.isPointsMaterial ) {\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// emissiveFactor\n\t\t\t\t\t\tvar emissive = material.emissive.clone().multiplyScalar( material.emissiveIntensity ).toArray();\n\n\t\t\t\t\t\tif ( ! equalArray( emissive, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\t\t\t\tgltfMaterial.emissiveFactor = emissive;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// emissiveTexture\n\t\t\t\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\t\t\t\tgltfMaterial.emissiveTexture = {\n\n\t\t\t\t\t\t\t\t\tindex: processTexture( material.emissiveMap )\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// normalTexture\n\t\t\t\t\tif ( material.normalMap ) {\n\n\t\t\t\t\t\tgltfMaterial.normalTexture = {\n\n\t\t\t\t\t\t\t\tindex: processTexture( material.normalMap )\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( material.normalScale.x !== - 1 ) {\n\n\t\t\t\t\t\t\tif ( material.normalScale.x !== material.normalScale.y ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Normal scale components are different, ignoring Y and exporting X.' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgltfMaterial.normalTexture.scale = material.normalScale.x;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// occlusionTexture\n\t\t\t\t\tif ( material.aoMap ) {\n\n\t\t\t\t\t\tgltfMaterial.occlusionTexture = {\n\n\t\t\t\t\t\t\t\tindex: processTexture( material.aoMap )\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( material.aoMapIntensity !== 1.0 ) {\n\n\t\t\t\t\t\t\tgltfMaterial.occlusionTexture.strength = material.aoMapIntensity;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// alphaMode\n\t\t\t\t\tif ( material.transparent || material.alphaTest > 0.0 ) {\n\n\t\t\t\t\t\tgltfMaterial.alphaMode = material.opacity < 1.0 ? 'BLEND' : 'MASK';\n\n\t\t\t\t\t\t// Write alphaCutoff if it's non-zero and different from\n\t\t\t\t\t\t// the default (0.5).\n\t\t\t\t\t\tif ( material.alphaTest > 0.0 && material.alphaTest !== 0.5 ) {\n\n\t\t\t\t\t\t\tgltfMaterial.alphaCutoff = material.alphaTest;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// doubleSided\n\t\t\t\t\tif ( material.side === THREE.DoubleSide ) {\n\n\t\t\t\t\t\tgltfMaterial.doubleSided = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.name !== '' ) {\n\n\t\t\t\t\t\tgltfMaterial.name = material.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( material.userData ).length > 0 ) {\n\n\t\t\t\t\t\tgltfMaterial.extras = serializeUserData( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.materials.push( gltfMaterial );\n\n\t\t\t\t\tvar index = outputJSON.materials.length - 1;\n\t\t\t\t\tcachedData.materials.set( material, index );\n\n\t\t\t\t\treturn index;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process mesh\n\t\t\t\t * \n\t\t\t\t * @param {THREE.Mesh}\n\t\t\t\t *            mesh Mesh to process\n\t\t\t\t * @return {Integer} Index of the processed mesh in the \"meshes\"\n\t\t\t\t *         array\n\t\t\t\t */\n\t\t\t\tfunction processMesh( mesh ) {\n\n\t\t\t\t\tvar geometry = mesh.geometry;\n\n\t\t\t\t\tvar mode;\n\n\t\t\t\t\t// Use the correct mode\n\t\t\t\t\tif ( mesh.isLineSegments ) {\n\n\t\t\t\t\t\tmode = WEBGL_CONSTANTS.LINES;\n\n\t\t\t\t\t} else if ( mesh.isLineLoop ) {\n\n\t\t\t\t\t\tmode = WEBGL_CONSTANTS.LINE_LOOP;\n\n\t\t\t\t\t} else if ( mesh.isLine ) {\n\n\t\t\t\t\t\tmode = WEBGL_CONSTANTS.LINE_STRIP;\n\n\t\t\t\t\t} else if ( mesh.isPoints ) {\n\n\t\t\t\t\t\tmode = WEBGL_CONSTANTS.POINTS;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\t\tvar geometryTemp = new THREE.BufferGeometry();\n\t\t\t\t\t\t\tgeometryTemp.fromGeometry( geometry );\n\t\t\t\t\t\t\tgeometry = geometryTemp;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( mesh.drawMode === THREE.TriangleFanDrawMode ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: TriangleFanDrawMode and wireframe incompatible.' );\n\t\t\t\t\t\t\tmode = WEBGL_CONSTANTS.TRIANGLE_FAN;\n\n\t\t\t\t\t\t} else if ( mesh.drawMode === THREE.TriangleStripDrawMode ) {\n\n\t\t\t\t\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINE_STRIP : WEBGL_CONSTANTS.TRIANGLE_STRIP;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfMesh = {};\n\n\t\t\t\t\tvar attributes = {};\n\t\t\t\t\tvar primitives = [];\n\t\t\t\t\tvar targets = [];\n\n\t\t\t\t\t// Conversion between attributes names in threejs and gltf\n\t\t\t\t\t// spec\n\t\t\t\t\tvar nameConversion = {\n\n\t\t\t\t\t\t\tuv: 'TEXCOORD_0',\n\t\t\t\t\t\t\tuv2: 'TEXCOORD_1',\n\t\t\t\t\t\t\tcolor: 'COLOR_0',\n\t\t\t\t\t\t\tskinWeight: 'WEIGHTS_0',\n\t\t\t\t\t\t\tskinIndex: 'JOINTS_0'\n\n\t\t\t\t\t};\n\n\t\t\t\t\tvar originalNormal = geometry.getAttribute( 'normal' );\n\n\t\t\t\t\tif ( originalNormal !== undefined && ! isNormalizedNormalAttribute( originalNormal ) ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.' );\n\n\t\t\t\t\t\tgeometry.addAttribute( 'normal', createNormalizedNormalAttribute( originalNormal ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// @QUESTION Detect if .vertexColors = THREE.VertexColors?\n\t\t\t\t\t// For every attribute create an accessor\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tattributeName = nameConversion[ attributeName ] || attributeName.toUpperCase();\n\n\t\t\t\t\t\t// JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT.\n\t\t\t\t\t\tvar array = attribute.array;\n\t\t\t\t\t\tif ( attributeName === 'JOINTS_0' &&\n\t\t\t\t\t\t\t\t! ( array instanceof Uint16Array ) &&\n\t\t\t\t\t\t\t\t! ( array instanceof Uint8Array ) ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.' );\n\t\t\t\t\t\t\tattribute = new THREE.BufferAttribute( new Uint16Array( array ), attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( attributeName.substr( 0, 5 ) !== 'MORPH' ) {\n\n\t\t\t\t\t\t\tvar accessor = processAccessor( attribute, geometry );\n\t\t\t\t\t\t\tif ( accessor !== null ) {\n\n\t\t\t\t\t\t\t\tattributes[ attributeName ] = accessor;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( originalNormal !== undefined ) geometry.addAttribute( 'normal', originalNormal );\n\n\t\t\t\t\t// Skip if no exportable attributes found\n\t\t\t\t\tif ( Object.keys( attributes ).length === 0 ) {\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Morph targets\n\t\t\t\t\tif ( mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0 ) {\n\n\t\t\t\t\t\tvar weights = [];\n\t\t\t\t\t\tvar targetNames = [];\n\t\t\t\t\t\tvar reverseDictionary = {};\n\n\t\t\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var key in mesh.morphTargetDictionary ) {\n\n\t\t\t\t\t\t\t\treverseDictionary[ mesh.morphTargetDictionary[ key ] ] = key;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < mesh.morphTargetInfluences.length; ++ i ) {\n\n\t\t\t\t\t\t\tvar target = {};\n\n\t\t\t\t\t\t\tvar warned = false;\n\n\t\t\t\t\t\t\tfor ( var attributeName in geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\t\t// glTF 2.0 morph supports only\n\t\t\t\t\t\t\t\t// POSITION/NORMAL/TANGENT.\n\t\t\t\t\t\t\t\t// Three.js doesn't support TANGENT yet.\n\n\t\t\t\t\t\t\t\tif ( attributeName !== 'position' && attributeName !== 'normal' ) {\n\n\t\t\t\t\t\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Only POSITION and NORMAL morph are supported.' );\n\t\t\t\t\t\t\t\t\t\twarned = true;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar attribute = geometry.morphAttributes[ attributeName ][ i ];\n\n\t\t\t\t\t\t\t\t// Three.js morph attribute has absolute values\n\t\t\t\t\t\t\t\t// while the one of glTF has relative values.\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// glTF 2.0 Specification:\n\t\t\t\t\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\n\n\t\t\t\t\t\t\t\tvar baseAttribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\t\t\t// Clones attribute not to override\n\t\t\t\t\t\t\t\tvar relativeAttribute = attribute.clone();\n\n\t\t\t\t\t\t\t\tfor ( var j = 0, jl = attribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\t\trelativeAttribute.setXYZ(\n\t\t\t\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\t\t\t\tattribute.getX( j ) - baseAttribute.getX( j ),\n\t\t\t\t\t\t\t\t\t\t\tattribute.getY( j ) - baseAttribute.getY( j ),\n\t\t\t\t\t\t\t\t\t\t\tattribute.getZ( j ) - baseAttribute.getZ( j )\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttarget[ attributeName.toUpperCase() ] = processAccessor( relativeAttribute, geometry );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttargets.push( target );\n\n\t\t\t\t\t\t\tweights.push( mesh.morphTargetInfluences[ i ] );\n\t\t\t\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) targetNames.push( reverseDictionary[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgltfMesh.weights = weights;\n\n\t\t\t\t\t\tif ( targetNames.length > 0 ) {\n\n\t\t\t\t\t\t\tgltfMesh.extras = {};\n\t\t\t\t\t\t\tgltfMesh.extras.targetNames = targetNames;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar extras = ( Object.keys( geometry.userData ).length > 0 ) ? serializeUserData( geometry ) : undefined;\n\n\t\t\t\t\tvar forceIndices = options.forceIndices;\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( mesh.material );\n\n\t\t\t\t\tif ( isMultiMaterial && geometry.groups.length === 0 ) return null;\n\n\t\t\t\t\tif ( ! forceIndices && geometry.index === null && isMultiMaterial ) {\n\n\t\t\t\t\t\t// temporal workaround.\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating index for non-indexed multi-material mesh.' );\n\t\t\t\t\t\tforceIndices = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar didForceIndices = false;\n\n\t\t\t\t\tif ( geometry.index === null && forceIndices ) {\n\n\t\t\t\t\t\tvar indices = [];\n\n\t\t\t\t\t\tfor ( var i = 0, il = geometry.attributes.position.count; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tindices[ i ] = i;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.setIndex( indices );\n\n\t\t\t\t\t\tdidForceIndices = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\t\t\t\t\tvar groups = isMultiMaterial ? geometry.groups : [ { materialIndex: 0, start: undefined, count: undefined } ];\n\n\t\t\t\t\tfor ( var i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar primitive = {\n\t\t\t\t\t\t\t\tmode: mode,\n\t\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( extras ) primitive.extras = extras;\n\n\t\t\t\t\t\tif ( targets.length > 0 ) primitive.targets = targets;\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tprimitive.indices = processAccessor( geometry.index, geometry, groups[ i ].start, groups[ i ].count );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = processMaterial( materials[ groups[ i ].materialIndex ] );\n\n\t\t\t\t\t\tif ( material !== null ) {\n\n\t\t\t\t\t\t\tprimitive.material = material;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprimitives.push( primitive );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( didForceIndices ) {\n\n\t\t\t\t\t\tgeometry.setIndex( null );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgltfMesh.primitives = primitives;\n\n\t\t\t\t\tif ( ! outputJSON.meshes ) {\n\n\t\t\t\t\t\toutputJSON.meshes = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.meshes.push( gltfMesh );\n\n\t\t\t\t\treturn outputJSON.meshes.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process camera\n\t\t\t\t * \n\t\t\t\t * @param {THREE.Camera}\n\t\t\t\t *            camera Camera to process\n\t\t\t\t * @return {Integer} Index of the processed mesh in the \"camera\"\n\t\t\t\t *         array\n\t\t\t\t */\n\t\t\t\tfunction processCamera( camera ) {\n\n\t\t\t\t\tif ( ! outputJSON.cameras ) {\n\n\t\t\t\t\t\toutputJSON.cameras = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isOrtho = camera.isOrthographicCamera;\n\n\t\t\t\t\tvar gltfCamera = {\n\n\t\t\t\t\t\t\ttype: isOrtho ? 'orthographic' : 'perspective'\n\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( isOrtho ) {\n\n\t\t\t\t\t\tgltfCamera.orthographic = {\n\n\t\t\t\t\t\t\t\txmag: camera.right * 2,\n\t\t\t\t\t\t\t\tymag: camera.top * 2,\n\t\t\t\t\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\t\t\t\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgltfCamera.perspective = {\n\n\t\t\t\t\t\t\t\taspectRatio: camera.aspect,\n\t\t\t\t\t\t\t\tyfov: THREE.Math.degToRad( camera.fov ) / camera.aspect,\n\t\t\t\t\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\n\t\t\t\t\t\t\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( camera.name !== '' ) {\n\n\t\t\t\t\t\tgltfCamera.name = camera.type;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.cameras.push( gltfCamera );\n\n\t\t\t\t\treturn outputJSON.cameras.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Creates glTF animation entry from AnimationClip object.\n\t\t\t\t * \n\t\t\t\t * Status: - Only properties listed in PATH_PROPERTIES may be\n\t\t\t\t * animated.\n\t\t\t\t * \n\t\t\t\t * @param {THREE.AnimationClip}\n\t\t\t\t *            clip\n\t\t\t\t * @param {THREE.Object3D}\n\t\t\t\t *            root\n\t\t\t\t * @return {number}\n\t\t\t\t */\n\t\t\t\tfunction processAnimation( clip, root ) {\n\n\t\t\t\t\tif ( ! outputJSON.animations ) {\n\n\t\t\t\t\t\toutputJSON.animations = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar channels = [];\n\t\t\t\t\tvar samplers = [];\n\n\t\t\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\t\t\tvar track = clip.tracks[ i ];\n\t\t\t\t\t\tvar trackBinding = THREE.PropertyBinding.parseTrackName( track.name );\n\t\t\t\t\t\tvar trackNode = THREE.PropertyBinding.findNode( root, trackBinding.nodeName );\n\t\t\t\t\t\tvar trackProperty = PATH_PROPERTIES[ trackBinding.propertyName ];\n\n\t\t\t\t\t\tif ( trackBinding.objectName === 'bones' ) {\n\n\t\t\t\t\t\t\tif ( trackNode.isSkinnedMesh === true ) {\n\n\t\t\t\t\t\t\t\ttrackNode = trackNode.skeleton.getBoneByName( trackBinding.objectIndex );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\ttrackNode = undefined;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! trackNode || ! trackProperty ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Could not export animation track \"%s\".', track.name );\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar inputItemSize = 1;\n\t\t\t\t\t\tvar outputItemSize = track.values.length / track.times.length;\n\n\t\t\t\t\t\tif ( trackProperty === PATH_PROPERTIES.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\tif ( trackNode.morphTargetInfluences.length !== 1 &&\n\t\t\t\t\t\t\t\t\ttrackBinding.propertyIndex !== undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Skipping animation track \"%s\". ' +\n\t\t\t\t\t\t\t\t\t\t'Morph target keyframe tracks must target all available morph targets ' +\n\t\t\t\t\t\t\t\t\t\t'for the given mesh.', track.name );\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toutputItemSize /= trackNode.morphTargetInfluences.length;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar interpolation;\n\n\t\t\t\t\t\t// @TODO export CubicInterpolant(InterpolateSmooth) as\n\t\t\t\t\t\t// CUBICSPLINE\n\n\t\t\t\t\t\t// Detecting glTF cubic spline interpolant by checking\n\t\t\t\t\t\t// factory method's special property\n\t\t\t\t\t\t// GLTFCubicSplineInterpolant is a custom interpolant\n\t\t\t\t\t\t// and track doesn't return\n\t\t\t\t\t\t// valid value from .getInterpolation().\n\t\t\t\t\t\tif ( track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true ) {\n\n\t\t\t\t\t\t\tinterpolation = 'CUBICSPLINE';\n\n\t\t\t\t\t\t\t// itemSize of CUBICSPLINE keyframe is 9\n\t\t\t\t\t\t\t// (VEC3 * 3: inTangent, splineVertex, and\n\t\t\t\t\t\t\t// outTangent)\n\t\t\t\t\t\t\t// but needs to be stored as VEC3 so dividing by 3\n\t\t\t\t\t\t\t// here.\n\t\t\t\t\t\t\toutputItemSize /= 3;\n\n\t\t\t\t\t\t} else if ( track.getInterpolation() === THREE.InterpolateDiscrete ) {\n\n\t\t\t\t\t\t\tinterpolation = 'STEP';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tinterpolation = 'LINEAR';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsamplers.push( {\n\n\t\t\t\t\t\t\tinput: processAccessor( new THREE.BufferAttribute( track.times, inputItemSize ) ),\n\t\t\t\t\t\t\toutput: processAccessor( new THREE.BufferAttribute( track.values, outputItemSize ) ),\n\t\t\t\t\t\t\tinterpolation: interpolation\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tchannels.push( {\n\n\t\t\t\t\t\t\tsampler: samplers.length - 1,\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tnode: nodeMap.get( trackNode ),\n\t\t\t\t\t\t\t\tpath: trackProperty\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.animations.push( {\n\n\t\t\t\t\t\tname: clip.name || 'clip_' + outputJSON.animations.length,\n\t\t\t\t\t\tsamplers: samplers,\n\t\t\t\t\t\tchannels: channels\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn outputJSON.animations.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tfunction processSkin( object ) {\n\n\t\t\t\t\tvar node = outputJSON.nodes[ nodeMap.get( object ) ];\n\n\t\t\t\t\tvar skeleton = object.skeleton;\n\t\t\t\t\tvar rootJoint = object.skeleton.bones[ 0 ];\n\n\t\t\t\t\tif ( rootJoint === undefined ) return null;\n\n\t\t\t\t\tvar joints = [];\n\t\t\t\t\tvar inverseBindMatrices = new Float32Array( skeleton.bones.length * 16 );\n\n\t\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; ++ i ) {\n\n\t\t\t\t\t\tjoints.push( nodeMap.get( skeleton.bones[ i ] ) );\n\n\t\t\t\t\t\tskeleton.boneInverses[ i ].toArray( inverseBindMatrices, i * 16 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( outputJSON.skins === undefined ) {\n\n\t\t\t\t\t\toutputJSON.skins = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.skins.push( {\n\n\t\t\t\t\t\tinverseBindMatrices: processAccessor( new THREE.BufferAttribute( inverseBindMatrices, 16 ) ),\n\t\t\t\t\t\tjoints: joints,\n\t\t\t\t\t\tskeleton: nodeMap.get( rootJoint )\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tvar skinIndex = node.skin = outputJSON.skins.length - 1;\n\n\t\t\t\t\treturn skinIndex;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process Object3D node\n\t\t\t\t * \n\t\t\t\t * @param {THREE.Object3D}\n\t\t\t\t *            node Object3D to processNode\n\t\t\t\t * @return {Integer} Index of the node in the nodes list\n\t\t\t\t */\n\t\t\t\tfunction processNode( object ) {\n\n\t\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Unsupported node type:', object.constructor.name );\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! outputJSON.nodes ) {\n\n\t\t\t\t\t\toutputJSON.nodes = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfNode = {};\n\n\t\t\t\t\tif ( options.trs ) {\n\n\t\t\t\t\t\tvar rotation = object.quaternion.toArray();\n\t\t\t\t\t\tvar position = object.position.toArray();\n\t\t\t\t\t\tvar scale = object.scale.toArray();\n\n\t\t\t\t\t\tif ( ! equalArray( rotation, [ 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\t\t\t\tgltfNode.rotation = rotation;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! equalArray( position, [ 0, 0, 0 ] ) ) {\n\n\t\t\t\t\t\t\tgltfNode.translation = position;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! equalArray( scale, [ 1, 1, 1 ] ) ) {\n\n\t\t\t\t\t\t\tgltfNode.scale = scale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.updateMatrix();\n\t\t\t\t\t\tif ( ! equalArray( object.matrix.elements, [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ] ) ) {\n\n\t\t\t\t\t\t\tgltfNode.matrix = object.matrix.elements;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// We don't export empty strings name because it represents\n\t\t\t\t\t// no-name in Three.js.\n\t\t\t\t\tif ( object.name !== '' ) {\n\n\t\t\t\t\t\tgltfNode.name = String( object.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.userData && Object.keys( object.userData ).length > 0 ) {\n\n\t\t\t\t\t\tgltfNode.extras = serializeUserData( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\t\tvar mesh = processMesh( object );\n\n\t\t\t\t\t\tif ( mesh !== null ) {\n\n\t\t\t\t\t\t\tgltfNode.mesh = mesh;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( object.isCamera ) {\n\n\t\t\t\t\t\tgltfNode.camera = processCamera( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tskins.push( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.children.length > 0 ) {\n\n\t\t\t\t\t\tvar children = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar child = object.children[ i ];\n\n\t\t\t\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\t\t\t\tvar node = processNode( child );\n\n\t\t\t\t\t\t\t\tif ( node !== null ) {\n\n\t\t\t\t\t\t\t\t\tchildren.push( node );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( children.length > 0 ) {\n\n\t\t\t\t\t\t\tgltfNode.children = children;\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.nodes.push( gltfNode );\n\n\t\t\t\t\tvar nodeIndex = outputJSON.nodes.length - 1;\n\t\t\t\t\tnodeMap.set( object, nodeIndex );\n\n\t\t\t\t\treturn nodeIndex;\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Process Scene\n\t\t\t\t * \n\t\t\t\t * @param {THREE.Scene}\n\t\t\t\t *            node Scene to process\n\t\t\t\t */\n\t\t\t\tfunction processScene( scene ) {\n\n\t\t\t\t\tif ( ! outputJSON.scenes ) {\n\n\t\t\t\t\t\toutputJSON.scenes = [];\n\t\t\t\t\t\toutputJSON.scene = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gltfScene = {\n\n\t\t\t\t\t\t\tnodes: []\n\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( scene.name !== '' ) {\n\n\t\t\t\t\t\tgltfScene.name = scene.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputJSON.scenes.push( gltfScene );\n\n\t\t\t\t\tvar nodes = [];\n\n\t\t\t\t\tfor ( var i = 0, l = scene.children.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar child = scene.children[ i ];\n\n\t\t\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\n\n\t\t\t\t\t\t\tvar node = processNode( child );\n\n\t\t\t\t\t\t\tif ( node !== null ) {\n\n\t\t\t\t\t\t\t\tnodes.push( node );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nodes.length > 0 ) {\n\n\t\t\t\t\t\tgltfScene.nodes = nodes;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Creates a THREE.Scene to hold a list of objects and parse it\n\t\t\t\t * \n\t\t\t\t * @param {Array}\n\t\t\t\t *            objects List of objects to process\n\t\t\t\t */\n\t\t\t\tfunction processObjects( objects ) {\n\n\t\t\t\t\tvar scene = new THREE.Scene();\n\t\t\t\t\tscene.name = 'AuxScene';\n\n\t\t\t\t\tfor ( var i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t\t\t// We push directly to children instead of calling `add`\n\t\t\t\t\t\t// to prevent\n\t\t\t\t\t\t// modify the .parent and break its original scene and\n\t\t\t\t\t\t// hierarchy\n\t\t\t\t\t\tscene.children.push( objects[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tprocessScene( scene );\n\n\t\t\t\t}\n\n\t\t\t\tfunction processInput( input ) {\n\n\t\t\t\t\tinput = input instanceof Array ? input : [ input ];\n\n\t\t\t\t\tvar objectsWithoutScene = [];\n\n\t\t\t\t\tfor ( var i = 0; i < input.length; i ++ ) {\n\n\t\t\t\t\t\tif ( input[ i ] instanceof THREE.Scene ) {\n\n\t\t\t\t\t\t\tprocessScene( input[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobjectsWithoutScene.push( input[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( objectsWithoutScene.length > 0 ) {\n\n\t\t\t\t\t\tprocessObjects( objectsWithoutScene );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < skins.length; ++ i ) {\n\n\t\t\t\t\t\tprocessSkin( skins[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < options.animations.length; ++ i ) {\n\n\t\t\t\t\t\tprocessAnimation( options.animations[ i ], input[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tprocessInput( input );\n\n\t\t\t\tPromise.all( pending ).then( function () {\n\n\t\t\t\t\t// Merge buffers.\n\t\t\t\t\tvar blob = new Blob( buffers, { type: 'application/octet-stream' } );\n\n\t\t\t\t\t// Declare extensions.\n\t\t\t\t\tvar extensionsUsedList = Object.keys( extensionsUsed );\n\t\t\t\t\tif ( extensionsUsedList.length > 0 ) outputJSON.extensionsUsed = extensionsUsedList;\n\n\t\t\t\t\tif ( outputJSON.buffers && outputJSON.buffers.length > 0 ) {\n\n\t\t\t\t\t\t// Update bytelength of the single buffer.\n\t\t\t\t\t\toutputJSON.buffers[ 0 ].byteLength = blob.size;\n\n\t\t\t\t\t\tvar reader = new window.FileReader();\n\n\t\t\t\t\t\tif ( options.binary === true ) {\n\n\t\t\t\t\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\n\n\t\t\t\t\t\t\tvar GLB_HEADER_BYTES = 12;\n\t\t\t\t\t\t\tvar GLB_HEADER_MAGIC = 0x46546C67;\n\t\t\t\t\t\t\tvar GLB_VERSION = 2;\n\n\t\t\t\t\t\t\tvar GLB_CHUNK_PREFIX_BYTES = 8;\n\t\t\t\t\t\t\tvar GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\n\t\t\t\t\t\t\tvar GLB_CHUNK_TYPE_BIN = 0x004E4942;\n\n\t\t\t\t\t\t\treader.readAsArrayBuffer( blob );\n\t\t\t\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\t\t\t\t// Binary chunk.\n\t\t\t\t\t\t\t\tvar binaryChunk = getPaddedArrayBuffer( reader.result );\n\t\t\t\t\t\t\t\tvar binaryChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\t\t\t\t\tbinaryChunkPrefix.setUint32( 0, binaryChunk.byteLength, true );\n\t\t\t\t\t\t\t\tbinaryChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_BIN, true );\n\n\t\t\t\t\t\t\t\t// JSON chunk.\n\t\t\t\t\t\t\t\tvar jsonChunk = getPaddedArrayBuffer( stringToArrayBuffer( JSON.stringify( outputJSON ) ), 0x20 );\n\t\t\t\t\t\t\t\tvar jsonChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\n\t\t\t\t\t\t\t\tjsonChunkPrefix.setUint32( 0, jsonChunk.byteLength, true );\n\t\t\t\t\t\t\t\tjsonChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_JSON, true );\n\n\t\t\t\t\t\t\t\t// GLB header.\n\t\t\t\t\t\t\t\tvar header = new ArrayBuffer( GLB_HEADER_BYTES );\n\t\t\t\t\t\t\t\tvar headerView = new DataView( header );\n\t\t\t\t\t\t\t\theaderView.setUint32( 0, GLB_HEADER_MAGIC, true );\n\t\t\t\t\t\t\t\theaderView.setUint32( 4, GLB_VERSION, true );\n\t\t\t\t\t\t\t\tvar totalByteLength = GLB_HEADER_BYTES\n\t\t\t\t\t\t\t\t+ jsonChunkPrefix.byteLength + jsonChunk.byteLength\n\t\t\t\t\t\t\t\t+ binaryChunkPrefix.byteLength + binaryChunk.byteLength;\n\t\t\t\t\t\t\t\theaderView.setUint32( 8, totalByteLength, true );\n\n\t\t\t\t\t\t\t\tvar glbBlob = new Blob( [\n\t\t\t\t\t\t\t\t\theader,\n\t\t\t\t\t\t\t\t\tjsonChunkPrefix,\n\t\t\t\t\t\t\t\t\tjsonChunk,\n\t\t\t\t\t\t\t\t\tbinaryChunkPrefix,\n\t\t\t\t\t\t\t\t\tbinaryChunk\n\t\t\t\t\t\t\t\t\t], { type: 'application/octet-stream' } );\n\n\t\t\t\t\t\t\t\tvar glbReader = new window.FileReader();\n\t\t\t\t\t\t\t\tglbReader.readAsArrayBuffer( glbBlob );\n\t\t\t\t\t\t\t\tglbReader.onloadend = function () {\n\n\t\t\t\t\t\t\t\t\tonDone( glbReader.result );\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\treader.readAsDataURL( blob );\n\t\t\t\t\t\t\treader.onloadend = function () {\n\n\t\t\t\t\t\t\t\tvar base64data = reader.result;\n\t\t\t\t\t\t\t\toutputJSON.buffers[ 0 ].uri = base64data;\n\t\t\t\t\t\t\t\tonDone( outputJSON );\n\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tonDone( outputJSON );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t};\n\treturn GLTFExporter;\n})();\nmodule.exports = _GLTFExporter;",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/GLTFExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "THREE",
    "memberof": "scripts/exporters/GLTFExporter.js",
    "static": true,
    "longname": "scripts/exporters/GLTFExporter.js~THREE",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/GLTFExporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "variable",
    "name": "WEBGL_CONSTANTS",
    "memberof": "scripts/exporters/GLTFExporter.js",
    "static": true,
    "longname": "scripts/exporters/GLTFExporter.js~WEBGL_CONSTANTS",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/GLTFExporter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "fernandojsg / http://fernandojsg.com"
      },
      {
        "tagName": "@author",
        "tagValue": "Don McCurdy / https://www.donmccurdy.com"
      },
      {
        "tagName": "@author",
        "tagValue": "Takahiro / https://github.com/takahirox"
      }
    ],
    "type": {
      "types": [
        "{\"POINTS\": *, \"LINES\": number, \"LINE_LOOP\": number, \"LINE_STRIP\": number, \"TRIANGLES\": number, \"TRIANGLE_STRIP\": number, \"TRIANGLE_FAN\": number, \"UNSIGNED_BYTE\": number, \"UNSIGNED_SHORT\": number, \"FLOAT\": number, \"UNSIGNED_INT\": number, \"ARRAY_BUFFER\": number, \"ELEMENT_ARRAY_BUFFER\": number, \"NEAREST\": number, \"LINEAR\": number, \"NEAREST_MIPMAP_NEAREST\": number, \"LINEAR_MIPMAP_NEAREST\": number, \"NEAREST_MIPMAP_LINEAR\": number, \"LINEAR_MIPMAP_LINEAR\": number}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "THREE_TO_WEBGL",
    "memberof": "scripts/exporters/GLTFExporter.js",
    "static": true,
    "longname": "scripts/exporters/GLTFExporter.js~THREE_TO_WEBGL",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/GLTFExporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "{\"1003\": *, \"1004\": *, \"1005\": *, \"1006\": *, \"1007\": *, \"1008\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "variable",
    "name": "PATH_PROPERTIES",
    "memberof": "scripts/exporters/GLTFExporter.js",
    "static": true,
    "longname": "scripts/exporters/GLTFExporter.js~PATH_PROPERTIES",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/GLTFExporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "{\"scale\": string, \"position\": string, \"quaternion\": string, \"morphTargetInfluences\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "name": "_GLTFExporter",
    "memberof": "scripts/exporters/GLTFExporter.js",
    "static": true,
    "longname": "scripts/exporters/GLTFExporter.js~_GLTFExporter",
    "access": "private",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/GLTFExporter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "scripts/exporters/MMDExporter.js",
    "content": "/**\n * @author takahiro / http://github.com/takahirox\n *\n * Dependencies\n *  - mmd-parser https://github.com/takahirox/mmd-parser\n */\n\nTHREE.MMDExporter = function () {\n\n\t// Unicode to Shift_JIS table\n\tvar u2sTable;\n\n\tfunction unicodeToShiftjis( str ) {\n\n\t\tif ( u2sTable === undefined ) {\n\n\t\t\tvar encoder = new MMDParser.CharsetEncoder();\n\t\t\tvar table = encoder.s2uTable;\n\t\t\tu2sTable = {};\n\n\t\t\tvar keys = Object.keys( table );\n\n\t\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\tvar key = keys[ i ];\n\n\t\t\t\tvar value = table[ key ];\n\t\t\t\tkey = parseInt( key );\n\n\t\t\t\tu2sTable[ value ] = key;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0, il = str.length; i < il; i ++ ) {\n\n\t\t\tvar code = str.charCodeAt( i );\n\n\t\t\tvar value = u2sTable[ code ];\n\n\t\t\tif ( value === undefined ) {\n\n\t\t\t\tthrow 'cannot convert charcode 0x' + code.toString( 16 );\n\n\t\t\t} else if ( value > 0xff ) {\n\n\t\t\t\tarray.push( ( value >> 8 ) & 0xff );\n\t\t\t\tarray.push( value & 0xff );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( value & 0xff );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn new Uint8Array( array );\n\n\t}\n\n\tfunction getBindBones( skin ) {\n\n\t\t// any more efficient ways?\n\t\tvar poseSkin = skin.clone();\n\t\tposeSkin.pose();\n\t\treturn poseSkin.skeleton.bones;\n\n\t}\n\n\t/* TODO: implement\n\t// mesh -> pmd\n\tthis.parsePmd = function ( object ) {\n\n\t};\n\t*/\n\n\t/* TODO: implement\n\t// mesh -> pmx\n\tthis.parsePmx = function ( object ) {\n\n\t};\n\t*/\n\n\t/*\n\t * skeleton -> vpd\n\t * Returns Shift_JIS encoded Uint8Array. Otherwise return strings.\n\t */\n\tthis.parseVpd = function ( skin, outputShiftJis, useOriginalBones ) {\n\n\t\tif ( skin.isSkinnedMesh !== true ) {\n\n\t\t\tconsole.warn( 'THREE.MMDExporter: parseVpd() requires SkinnedMesh instance.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction toStringsFromNumber( num ) {\n\n\t\t\tif ( Math.abs( num ) < 1e-6 ) num = 0;\n\n\t\t\tvar a = num.toString();\n\n\t\t\tif ( a.indexOf( '.' ) === - 1 ) {\n\n\t\t\t\ta += '.';\n\n\t\t\t}\n\n\t\t\ta += '000000';\n\n\t\t\tvar index = a.indexOf( '.' );\n\n\t\t\tvar d = a.slice( 0, index );\n\t\t\tvar p = a.slice( index + 1, index + 7 );\n\n\t\t\treturn d + '.' + p;\n\n\t\t}\n\n\t\tfunction toStringsFromArray( array ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\ta.push( toStringsFromNumber( array[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn a.join( ',' );\n\n\t\t}\n\n\t\tskin.updateMatrixWorld( true );\n\n\t\tvar bones = skin.skeleton.bones;\n\t\tvar bones2 = getBindBones( skin );\n\n\t\tvar position = new THREE.Vector3();\n\t\tvar quaternion = new THREE.Quaternion();\n\t\tvar quaternion2 = new THREE.Quaternion();\n\t\tvar matrix = new THREE.Matrix4();\n\n\t\tvar array = [];\n\t\tarray.push( 'Vocaloid Pose Data file' );\n\t\tarray.push( '' );\n\t\tarray.push( ( skin.name !== '' ? skin.name.replace( /\\s/g, '_' ) : 'skin' ) + '.osm;' );\n\t\tarray.push( bones.length + ';' );\n\t\tarray.push( '' );\n\n\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\t\t\tvar bone2 = bones2[ i ];\n\n\t\t\t/*\n\t\t\t * use the bone matrix saved before solving IK.\n\t\t\t * see CCDIKSolver for the detail.\n\t\t\t */\n\t\t\tif ( useOriginalBones === true &&\n\t\t\t\tbone.userData.ik !== undefined &&\n\t\t\t\tbone.userData.ik.originalMatrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( bone.userData.ik.originalMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tmatrix.copy( bone.matrix );\n\n\t\t\t}\n\n\t\t\tposition.setFromMatrixPosition( matrix );\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tvar pArray = position.sub( bone2.position ).toArray();\n\t\t\tvar qArray = quaternion2.copy( bone2.quaternion ).conjugate().multiply( quaternion ).toArray();\n\n\t\t\t// right to left\n\t\t\tpArray[ 2 ] = - pArray[ 2 ];\n\t\t\tqArray[ 0 ] = - qArray[ 0 ];\n\t\t\tqArray[ 1 ] = - qArray[ 1 ];\n\n\t\t\tarray.push( 'Bone' + i + '{' + bone.name );\n\t\t\tarray.push( '  ' + toStringsFromArray( pArray ) + ';' );\n\t\t\tarray.push( '  ' + toStringsFromArray( qArray ) + ';' );\n\t\t\tarray.push( '}' );\n\t\t\tarray.push( '' );\n\n\t\t}\n\n\t\tarray.push( '' );\n\n\t\tvar lines = array.join( '\\n' );\n\n\t\treturn ( outputShiftJis === true ) ? unicodeToShiftjis( lines ) : lines;\n\n\t};\n\n\t/* TODO: implement\n\t// animation + skeleton -> vmd\n\tthis.parseVmd = function ( object ) {\n\n\t};\n\t*/\n\n};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/MMDExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "MMDExporter",
    "memberof": "scripts/exporters/MMDExporter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/exporters/MMDExporter.js~MMDExporter",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/MMDExporter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "takahiro / http://github.com/takahirox\n\nDependencies\n - mmd-parser https://github.com/takahirox/mmd-parser"
      }
    ],
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "scripts/exporters/OBJExporter.js",
    "content": "import * as THREE from 'three';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\nfunction OBJExporter() {\n\tthis.parse = function ( object ) \n\t{\n\t\tvar output = '';\n\n\t\tvar indexVertex = 0;\n\t\tvar indexVertexUvs = 0;\n\t\tvar indexNormals = 0;\n\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normal = new THREE.Vector3();\n\t\tvar uv = new THREE.Vector2();\n\n\t\tvar i, j, k, l, m, face = [];\n\n\t\tvar parseMesh = function ( mesh ) {\n\n\t\t\tvar nbVertex = 0;\n\t\t\tvar nbNormals = 0;\n\t\t\tvar nbVertexUvs = 0;\n\n\t\t\tvar geometry = mesh.geometry;\n\n\t\t\tvar normalMatrixWorld = new THREE.Matrix3();\n\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tgeometry = new THREE.BufferGeometry().setFromObject( mesh );\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t// shortcuts\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tvar indices = geometry.getIndex();\n\n\t\t\t\t// name of the mesh object\n\t\t\t\toutput += 'o ' + mesh.name + '\\n';\n\n\t\t\t\t// name of the mesh material\n\t\t\t\tif ( mesh.material && mesh.material.name ) {\n\n\t\t\t\t\toutput += 'usemtl ' + mesh.material.name + '\\n';\n\n\t\t\t\t}\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\t\tfor ( i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\t\tvertex.x = vertices.getX( i );\n\t\t\t\t\t\tvertex.y = vertices.getY( i );\n\t\t\t\t\t\tvertex.z = vertices.getZ( i );\n\n\t\t\t\t\t\t// transfrom the vertex to world space\n\t\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// uvs\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tfor ( i = 0, l = uvs.count; i < l; i ++, nbVertexUvs ++ ) {\n\n\t\t\t\t\t\tuv.x = uvs.getX( i );\n\t\t\t\t\t\tuv.y = uvs.getY( i );\n\n\t\t\t\t\t\t// transform the uv to export format\n\t\t\t\t\t\toutput += 'vt ' + uv.x + ' ' + uv.y + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\t\tfor ( i = 0, l = normals.count; i < l; i ++, nbNormals ++ ) {\n\n\t\t\t\t\t\tnormal.x = normals.getX( i );\n\t\t\t\t\t\tnormal.y = normals.getY( i );\n\t\t\t\t\t\tnormal.z = normals.getZ( i );\n\n\t\t\t\t\t\t// transfrom the normal to world space\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrixWorld );\n\n\t\t\t\t\t\t// transform the normal to export format\n\t\t\t\t\t\toutput += 'vn ' + normal.x + ' ' + normal.y + ' ' + normal.z + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// faces\n\n\t\t\t\tif ( indices !== null ) {\n\n\t\t\t\t\tfor ( i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\t\tj = indices.getX( i + m ) + 1;\n\n\t\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the face to export format\n\t\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( m = 0; m < 3; m ++ ) {\n\n\t\t\t\t\t\t\tj = i + m + 1;\n\n\t\t\t\t\t\t\tface[ m ] = ( indexVertex + j ) + ( normals || uvs ? '/' + ( uvs ? ( indexVertexUvs + j ) : '' ) + ( normals ? '/' + ( indexNormals + j ) : '' ) : '' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// transform the face to export format\n\t\t\t\t\t\toutput += 'f ' + face.join( ' ' ) + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.OBJExporter.parseMesh(): geometry type unsupported', geometry );\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\t\t\tindexVertexUvs += nbVertexUvs;\n\t\t\tindexNormals += nbNormals;\n\n\t\t};\n\n\t\tvar parseLine = function ( line ) {\n\n\t\t\tvar nbVertex = 0;\n\n\t\t\tvar geometry = line.geometry;\n\t\t\tvar type = line.type;\n\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\tgeometry = new THREE.BufferGeometry().setFromObject( line );\n\n\t\t\t}\n\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t// shortcuts\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\n\t\t\t\t// name of the line object\n\t\t\t\toutput += 'o ' + line.name + '\\n';\n\n\t\t\t\tif ( vertices !== undefined ) {\n\n\t\t\t\t\tfor ( i = 0, l = vertices.count; i < l; i ++, nbVertex ++ ) {\n\n\t\t\t\t\t\tvertex.x = vertices.getX( i );\n\t\t\t\t\t\tvertex.y = vertices.getY( i );\n\t\t\t\t\t\tvertex.z = vertices.getZ( i );\n\n\t\t\t\t\t\t// transfrom the vertex to world space\n\t\t\t\t\t\tvertex.applyMatrix4( line.matrixWorld );\n\n\t\t\t\t\t\t// transform the vertex to export format\n\t\t\t\t\t\toutput += 'v ' + vertex.x + ' ' + vertex.y + ' ' + vertex.z + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( type === 'Line' ) {\n\n\t\t\t\t\toutput += 'l ';\n\n\t\t\t\t\tfor ( j = 1, l = vertices.count; j <= l; j ++ ) {\n\n\t\t\t\t\t\toutput += ( indexVertex + j ) + ' ';\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutput += '\\n';\n\n\t\t\t\t}\n\n\t\t\t\tif ( type === 'LineSegments' ) {\n\n\t\t\t\t\tfor ( j = 1, k = j + 1, l = vertices.count; j < l; j += 2, k = j + 1 ) {\n\n\t\t\t\t\t\toutput += 'l ' + ( indexVertex + j ) + ' ' + ( indexVertex + k ) + '\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.OBJExporter.parseLine(): geometry type unsupported', geometry );\n\n\t\t\t}\n\n\t\t\t// update index\n\t\t\tindexVertex += nbVertex;\n\n\t\t};\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child instanceof THREE.Mesh ) {\n\n\t\t\t\tparseMesh( child );\n\n\t\t\t}\n\n\t\t\tif ( child instanceof THREE.Line ) {\n\n\t\t\t\tparseLine( child );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn output;\n\t};\n}\n\nOBJExporter.prototype = Object.create( THREE.EventDispatcher.prototype );\nOBJExporter.prototype.constructor = OBJExporter;\n\nexport {OBJExporter};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/OBJExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "OBJExporter",
    "memberof": "scripts/exporters/OBJExporter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/exporters/OBJExporter.js~OBJExporter",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/exporters/OBJExporter.js",
    "importStyle": "{OBJExporter}",
    "description": "",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com/"
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "scripts/exporters/PLYExporter.js",
    "content": "/**\n * @author Garrett Johnson / http://gkjohnson.github.io/\n * https://github.com/gkjohnson/ply-exporter-js\n *\n * Usage:\n *  var exporter = new THREE.PLYExporter();\n *\n *  // second argument is a list of options\n *  exporter.parse(mesh, data => console.log(data), { binary: true, excludeAttributes: [ 'color' ] });\n *\n * Format Definition:\n * http://paulbourke.net/dataformats/ply/\n */\n\nTHREE.PLYExporter = function () {};\n\nTHREE.PLYExporter.prototype = {\n\n\tconstructor: THREE.PLYExporter,\n\n\tparse: function ( object, onDone, options ) {\n\n\t\tif ( onDone && typeof onDone === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.PLYExporter: The options parameter is now the third argument to the \"parse\" function. See the documentation for the new API.' );\n\t\t\toptions = onDone;\n\t\t\tonDone = undefined;\n\n\t\t}\n\n\t\t// Iterate over the valid meshes in the object\n\t\tfunction traverseMeshes( cb ) {\n\n\t\t\tobject.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh === true ) {\n\n\t\t\t\t\tvar mesh = child;\n\t\t\t\t\tvar geometry = mesh.geometry;\n\n\t\t\t\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\t\t\t\tgeometry = geomToBufferGeom.get( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.isBufferGeometry === true ) {\n\n\t\t\t\t\t\tif ( geometry.getAttribute( 'position' ) !== undefined ) {\n\n\t\t\t\t\t\t\tcb( mesh, geometry );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\t// Default options\n\t\tvar defaultOptions = {\n\t\t\tbinary: false,\n\t\t\texcludeAttributes: [] // normal, uv, color, index\n\t\t};\n\n\t\toptions = Object.assign( defaultOptions, options );\n\n\t\tvar excludeAttributes = options.excludeAttributes;\n\t\tvar geomToBufferGeom = new WeakMap();\n\t\tvar includeNormals = false;\n\t\tvar includeColors = false;\n\t\tvar includeUVs = false;\n\n\t\t// count the vertices, check which properties are used,\n\t\t// and cache the BufferGeometry\n\t\tvar vertexCount = 0;\n\t\tvar faceCount = 0;\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isMesh === true ) {\n\n\t\t\t\tvar mesh = child;\n\t\t\t\tvar geometry = mesh.geometry;\n\n\t\t\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\t\t\tvar bufferGeometry = geomToBufferGeom.get( geometry ) || new THREE.BufferGeometry().setFromObject( mesh );\n\t\t\t\t\tgeomToBufferGeom.set( geometry, bufferGeometry );\n\t\t\t\t\tgeometry = bufferGeometry;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.isBufferGeometry === true ) {\n\n\t\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\t\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\n\t\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\n\t\t\t\t\tvar colors = geometry.getAttribute( 'color' );\n\t\t\t\t\tvar indices = geometry.getIndex();\n\n\t\t\t\t\tif ( vertices === undefined ) {\n\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertexCount += vertices.count;\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\n\n\t\t\t\t\tif ( normals !== undefined ) includeNormals = true;\n\n\t\t\t\t\tif ( uvs !== undefined ) includeUVs = true;\n\n\t\t\t\t\tif ( colors !== undefined ) includeColors = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tvar includeIndices = excludeAttributes.indexOf( 'index' ) === - 1;\n\t\tincludeNormals = includeNormals && excludeAttributes.indexOf( 'normal' ) === - 1;\n\t\tincludeColors = includeColors && excludeAttributes.indexOf( 'color' ) === - 1;\n\t\tincludeUVs = includeUVs && excludeAttributes.indexOf( 'uv' ) === - 1;\n\n\n\t\tif ( includeIndices && faceCount !== Math.floor( faceCount ) ) {\n\n\t\t\t// point cloud meshes will not have an index array and may not have a\n\t\t\t// number of vertices that is divisble by 3 (and therefore representable\n\t\t\t// as triangles)\n\t\t\tconsole.error(\n\n\t\t\t\t'PLYExporter: Failed to generate a valid PLY file with triangle indices because the ' +\n\t\t\t\t'number of indices is not divisible by 3.'\n\n\t\t\t);\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// get how many bytes will be needed to save out the faces\n\t\t// so we can use a minimal amount of memory / data\n\t\tvar indexByteCount = 1;\n\n\t\tif ( vertexCount > 256 ) { // 2^8 bits\n\n\t\t\tindexByteCount = 2;\n\n\t\t}\n\n\t\tif ( vertexCount > 65536 ) { // 2^16 bits\n\n\t\t\tindexByteCount = 4;\n\n\t\t}\n\n\n\t\tvar header =\n\t\t\t'ply\\n' +\n\t\t\t`format ${ options.binary ? 'binary_big_endian' : 'ascii' } 1.0\\n` +\n\t\t\t`element vertex ${vertexCount}\\n` +\n\n\t\t\t// position\n\t\t\t'property float x\\n' +\n\t\t\t'property float y\\n' +\n\t\t\t'property float z\\n';\n\n\t\tif ( includeNormals === true ) {\n\n\t\t\t// normal\n\t\t\theader +=\n\t\t\t\t'property float nx\\n' +\n\t\t\t\t'property float ny\\n' +\n\t\t\t\t'property float nz\\n';\n\n\t\t}\n\n\t\tif ( includeUVs === true ) {\n\n\t\t\t// uvs\n\t\t\theader +=\n\t\t\t\t'property float s\\n' +\n\t\t\t\t'property float t\\n';\n\n\t\t}\n\n\t\tif ( includeColors === true ) {\n\n\t\t\t// colors\n\t\t\theader +=\n\t\t\t\t'property uchar red\\n' +\n\t\t\t\t'property uchar green\\n' +\n\t\t\t\t'property uchar blue\\n';\n\n\t\t}\n\n\t\tif ( includeIndices === true ) {\n\n\t\t\t// faces\n\t\t\theader +=\n\t\t\t\t`element face ${faceCount}\\n` +\n\t\t\t\t`property list uchar uint${ indexByteCount * 8 } vertex_index\\n`;\n\n\t\t}\n\n\t\theader += 'end_header\\n';\n\n\n\t\t// Generate attribute data\n\t\tvar vertex = new THREE.Vector3();\n\t\tvar normalMatrixWorld = new THREE.Matrix3();\n\t\tvar result = null;\n\n\t\tif ( options.binary === true ) {\n\n\t\t\t// Binary File Generation\n\t\t\tvar headerBin = new TextEncoder().encode( header );\n\n\t\t\t// 3 position values at 4 bytes\n\t\t\t// 3 normal values at 4 bytes\n\t\t\t// 3 color channels with 1 byte\n\t\t\t// 2 uv values at 4 bytes\n\t\t\tvar vertexListLength = vertexCount * ( 4 * 3 + ( includeNormals ? 4 * 3 : 0 ) + ( includeColors ? 3 : 0 ) + ( includeUVs ? 4 * 2 : 0 ) );\n\n\t\t\t// 1 byte shape desciptor\n\t\t\t// 3 vertex indices at ${indexByteCount} bytes\n\t\t\tvar faceListLength = includeIndices ? faceCount * ( indexByteCount * 3 + 1 ) : 0;\n\t\t\tvar output = new DataView( new ArrayBuffer( headerBin.length + vertexListLength + faceListLength ) );\n\t\t\tnew Uint8Array( output.buffer ).set( headerBin, 0 );\n\n\n\t\t\tvar vOffset = headerBin.length;\n\t\t\tvar fOffset = headerBin.length + vertexListLength;\n\t\t\tvar writtenVertices = 0;\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\n\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tvar colors = geometry.getAttribute( 'color' );\n\t\t\t\tvar indices = geometry.getIndex();\n\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i ++ ) {\n\n\t\t\t\t\tvertex.x = vertices.getX( i );\n\t\t\t\t\tvertex.y = vertices.getY( i );\n\t\t\t\t\tvertex.z = vertices.getZ( i );\n\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\n\t\t\t\t\t// Position information\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.x );\n\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.y );\n\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.z );\n\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t// Normal information\n\t\t\t\t\tif ( includeNormals === true ) {\n\n\t\t\t\t\t\tif ( normals != null ) {\n\n\t\t\t\t\t\t\tvertex.x = normals.getX( i );\n\t\t\t\t\t\t\tvertex.y = normals.getY( i );\n\t\t\t\t\t\t\tvertex.z = normals.getZ( i );\n\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld );\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.x );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.y );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.z );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0 );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0 );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0 );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// UV information\n\t\t\t\t\tif ( includeUVs === true ) {\n\n\t\t\t\t\t\tif ( uvs != null ) {\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getX( i ) );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getY( i ) );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t} else if ( includeUVs !== false ) {\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0 );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0 );\n\t\t\t\t\t\t\tvOffset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Color information\n\t\t\t\t\tif ( includeColors === true ) {\n\n\t\t\t\t\t\tif ( colors != null ) {\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getX( i ) * 255 ) );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getY( i ) * 255 ) );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getZ( i ) * 255 ) );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\n\t\t\t\t\t\t\tvOffset += 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( includeIndices === true ) {\n\n\t\t\t\t\t// Create the face list\n\t\t\t\t\tvar faceIndexFunc = `setUint${indexByteCount * 8}`;\n\t\t\t\t\tif ( indices !== null ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\n\t\t\t\t\t\t\tfOffset += 1;\n\n\t\t\t\t\t\t\toutput[ faceIndexFunc ]( fOffset, indices.getX( i + 0 ) + writtenVertices );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput[ faceIndexFunc ]( fOffset, indices.getX( i + 1 ) + writtenVertices );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput[ faceIndexFunc ]( fOffset, indices.getX( i + 2 ) + writtenVertices );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\n\t\t\t\t\t\t\tfOffset += 1;\n\n\t\t\t\t\t\t\toutput[ faceIndexFunc ]( fOffset, writtenVertices + i );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput[ faceIndexFunc ]( fOffset, writtenVertices + i + 1 );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t\toutput[ faceIndexFunc ]( fOffset, writtenVertices + i + 2 );\n\t\t\t\t\t\t\tfOffset += indexByteCount;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\t// Save the amount of verts we've already written so we can offset\n\t\t\t\t// the face index on the next mesh\n\t\t\t\twrittenVertices += vertices.count;\n\n\t\t\t} );\n\n\t\t\tresult = output.buffer;\n\n\t\t} else {\n\n\t\t\t// Ascii File Generation\n\t\t\t// count the number of vertices\n\t\t\tvar writtenVertices = 0;\n\t\t\tvar vertexList = '';\n\t\t\tvar faceList = '';\n\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\n\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\n\t\t\t\tvar colors = geometry.getAttribute( 'color' );\n\t\t\t\tvar indices = geometry.getIndex();\n\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\n\n\t\t\t\t// form each line\n\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i ++ ) {\n\n\t\t\t\t\tvertex.x = vertices.getX( i );\n\t\t\t\t\tvertex.y = vertices.getY( i );\n\t\t\t\t\tvertex.z = vertices.getZ( i );\n\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\n\n\n\t\t\t\t\t// Position information\n\t\t\t\t\tvar line =\n\t\t\t\t\t\tvertex.x + ' ' +\n\t\t\t\t\t\tvertex.y + ' ' +\n\t\t\t\t\t\tvertex.z;\n\n\t\t\t\t\t// Normal information\n\t\t\t\t\tif ( includeNormals === true ) {\n\n\t\t\t\t\t\tif ( normals != null ) {\n\n\t\t\t\t\t\t\tvertex.x = normals.getX( i );\n\t\t\t\t\t\t\tvertex.y = normals.getY( i );\n\t\t\t\t\t\t\tvertex.z = normals.getZ( i );\n\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld );\n\n\t\t\t\t\t\t\tline += ' ' +\n\t\t\t\t\t\t\t\tvertex.x + ' ' +\n\t\t\t\t\t\t\t\tvertex.y + ' ' +\n\t\t\t\t\t\t\t\tvertex.z;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tline += ' 0 0 0';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// UV information\n\t\t\t\t\tif ( includeUVs === true ) {\n\n\t\t\t\t\t\tif ( uvs != null ) {\n\n\t\t\t\t\t\t\tline += ' ' +\n\t\t\t\t\t\t\t\tuvs.getX( i ) + ' ' +\n\t\t\t\t\t\t\t\tuvs.getY( i );\n\n\t\t\t\t\t\t} else if ( includeUVs !== false ) {\n\n\t\t\t\t\t\t\tline += ' 0 0';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Color information\n\t\t\t\t\tif ( includeColors === true ) {\n\n\t\t\t\t\t\tif ( colors != null ) {\n\n\t\t\t\t\t\t\tline += ' ' +\n\t\t\t\t\t\t\t\tMath.floor( colors.getX( i ) * 255 ) + ' ' +\n\t\t\t\t\t\t\t\tMath.floor( colors.getY( i ) * 255 ) + ' ' +\n\t\t\t\t\t\t\t\tMath.floor( colors.getZ( i ) * 255 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tline += ' 255 255 255';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvertexList += line + '\\n';\n\n\t\t\t\t}\n\n\t\t\t\t// Create the face list\n\t\t\t\tif ( includeIndices === true ) {\n\n\t\t\t\t\tif ( indices !== null ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = indices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\tfaceList += `3 ${ indices.getX( i + 0 ) + writtenVertices }`;\n\t\t\t\t\t\t\tfaceList += ` ${ indices.getX( i + 1 ) + writtenVertices }`;\n\t\t\t\t\t\t\tfaceList += ` ${ indices.getX( i + 2 ) + writtenVertices }\\n`;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\tfaceList += `3 ${ writtenVertices + i } ${ writtenVertices + i + 1 } ${ writtenVertices + i + 2 }\\n`;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\n\n\t\t\t\t}\n\n\t\t\t\twrittenVertices += vertices.count;\n\n\t\t\t} );\n\n\t\t\tresult = `${ header }${vertexList}\\n${ includeIndices ? `${faceList}\\n` : '' }`;\n\n\t\t}\n\n\t\tif ( typeof onDone === 'function' ) requestAnimationFrame( () => onDone( result ) );\n\t\treturn result;\n\n\t}\n\n};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/PLYExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "PLYExporter",
    "memberof": "scripts/exporters/PLYExporter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/exporters/PLYExporter.js~PLYExporter",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/PLYExporter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "Garrett Johnson / http://gkjohnson.github.io/\nhttps://github.com/gkjohnson/ply-exporter-js\n\nUsage:\n var exporter = new THREE.PLYExporter();\n\n // second argument is a list of options\n exporter.parse(mesh, data => console.log(data), { binary: true, excludeAttributes: [ 'color' ] });\n\nFormat Definition:\nhttp://paulbourke.net/dataformats/ply/"
      }
    ],
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "scripts/exporters/STLExporter.js",
    "content": "/**\n * @author kovacsv / http://kovacsv.hu/\n * @author mrdoob / http://mrdoob.com/\n * @author mudcube / http://mudcu.be/\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Usage:\n *  var exporter = new THREE.STLExporter();\n *\n *  // second argument is a list of options\n *  var data = exporter.parse( mesh, { binary: true } );\n *\n */\n\nTHREE.STLExporter = function () {};\n\nTHREE.STLExporter.prototype = {\n\n\tconstructor: THREE.STLExporter,\n\n\tparse: ( function () {\n\n\t\tvar vector = new THREE.Vector3();\n\t\tvar normalMatrixWorld = new THREE.Matrix3();\n\n\t\treturn function parse( scene, options ) {\n\n\t\t\tif ( options === undefined ) options = {};\n\n\t\t\tvar binary = options.binary !== undefined ? options.binary : false;\n\n\t\t\t//\n\n\t\t\tvar objects = [];\n\t\t\tvar triangles = 0;\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isMesh ) {\n\n\t\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tgeometry = new THREE.Geometry().fromBufferGeometry( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\ttriangles += geometry.faces.length;\n\n\t\t\t\t\t\tobjects.push( {\n\n\t\t\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\t\t\tmatrixWorld: object.matrixWorld\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( binary ) {\n\n\t\t\t\tvar offset = 80; // skip header\n\t\t\t\tvar bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4;\n\t\t\t\tvar arrayBuffer = new ArrayBuffer( bufferLength );\n\t\t\t\tvar output = new DataView( arrayBuffer );\n\t\t\t\toutput.setUint32( offset, triangles, true ); offset += 4;\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\t\t\t\t\tvar faces = object.geometry.faces;\n\t\t\t\t\tvar matrixWorld = object.matrixWorld;\n\n\t\t\t\t\tnormalMatrixWorld.getNormalMatrix( matrixWorld );\n\n\t\t\t\t\tfor ( var j = 0, jl = faces.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ j ];\n\n\t\t\t\t\t\tvector.copy( face.normal ).applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\toutput.setFloat32( offset, vector.x, true ); offset += 4; // normal\n\t\t\t\t\t\toutput.setFloat32( offset, vector.y, true ); offset += 4;\n\t\t\t\t\t\toutput.setFloat32( offset, vector.z, true ); offset += 4;\n\n\t\t\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t\t\tfor ( var k = 0; k < 3; k ++ ) {\n\n\t\t\t\t\t\t\tvector.copy( vertices[ indices[ k ] ] ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\t\toutput.setFloat32( offset, vector.x, true ); offset += 4; // vertices\n\t\t\t\t\t\t\toutput.setFloat32( offset, vector.y, true ); offset += 4;\n\t\t\t\t\t\t\toutput.setFloat32( offset, vector.z, true ); offset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutput.setUint16( offset, 0, true ); offset += 2; // attribute byte count\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t} else {\n\n\t\t\t\tvar output = '';\n\n\t\t\t\toutput += 'solid exported\\n';\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\t\t\t\t\tvar faces = object.geometry.faces;\n\t\t\t\t\tvar matrixWorld = object.matrixWorld;\n\n\t\t\t\t\tnormalMatrixWorld.getNormalMatrix( matrixWorld );\n\n\t\t\t\t\tfor ( var j = 0, jl = faces.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ j ];\n\n\t\t\t\t\t\tvector.copy( face.normal ).applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\toutput += '\\tfacet normal ' + vector.x + ' ' + vector.y + ' ' + vector.z + '\\n';\n\t\t\t\t\t\toutput += '\\t\\touter loop\\n';\n\n\t\t\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t\t\tfor ( var k = 0; k < 3; k ++ ) {\n\n\t\t\t\t\t\t\tvector.copy( vertices[ indices[ k ] ] ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\t\toutput += '\\t\\t\\tvertex ' + vector.x + ' ' + vector.y + ' ' + vector.z + '\\n';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutput += '\\t\\tendloop\\n';\n\t\t\t\t\t\toutput += '\\tendfacet\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toutput += 'endsolid exported\\n';\n\n\t\t\t\treturn output;\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/STLExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "STLExporter",
    "memberof": "scripts/exporters/STLExporter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/exporters/STLExporter.js~STLExporter",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/STLExporter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "kovacsv / http://kovacsv.hu/"
      },
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com/"
      },
      {
        "tagName": "@author",
        "tagValue": "mudcube / http://mudcu.be/"
      },
      {
        "tagName": "@author",
        "tagValue": "Mugen87 / https://github.com/Mugen87\n\nUsage:\n var exporter = new THREE.STLExporter();\n\n // second argument is a list of options\n var data = exporter.parse( mesh, { binary: true } );"
      }
    ],
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "file",
    "name": "scripts/exporters/TypedGeometryExporter.js",
    "content": "/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.TypedGeometryExporter = function () {};\n\nTHREE.TypedGeometryExporter.prototype = {\n\n\tconstructor: THREE.TypedGeometryExporter,\n\n\tparse: function ( geometry ) {\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.0,\n\t\t\t\ttype: 'TypedGeometry',\n\t\t\t\tgenerator: 'TypedGeometryExporter'\n\t\t\t}\n\t\t};\n\n\t\tvar attributes = [ 'vertices', 'normals', 'uvs' ];\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar typedArray = geometry[ attribute ];\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, l = typedArray.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = typedArray[ i ];\n\n\t\t\t}\n\n\t\t\toutput[ attribute ] = array;\n\n\t\t}\n\n\t\tvar boundingSphere = geometry.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\toutput.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/exporters/TypedGeometryExporter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "TypedGeometryExporter",
    "memberof": "scripts/exporters/TypedGeometryExporter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/exporters/TypedGeometryExporter.js~TypedGeometryExporter",
    "access": "public",
    "export": false,
    "importPath": "blueprint3d-js/scripts/exporters/TypedGeometryExporter.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com/"
      }
    ],
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "scripts/floorplanner/carbonsheet.js",
    "content": "import {EventDispatcher} from 'three';\nimport {EVENT_UPDATED} from '../core/events.js';\nimport {cmPerPixel, pixelsPerCm, Dimensioning} from '../core/dimensioning.js';\n\n/**\n * The View to be used by a Floorplanner to render in/interact with.\n */\nexport class CarbonSheet extends EventDispatcher\n{\n\tconstructor(floorplan, viewmodel, canvas)\n\t{\n\t\tsuper();\n\t\tthis.canvasElement = document.getElementById(canvas);\n\t\tthis.canvas = canvas;\n\t\tthis.context = this.canvasElement.getContext('2d');\n\t\tthis.floorplan = floorplan;\n\t\tthis.viewmodel = viewmodel;\n\t\t\n\t\tthis._url = '';\n\t\tthis._image = new Image();\n\t\t\n\t\tthis._loaded = false;\n\t\tthis._transparency = 1.0;\t\t\n\t\tthis._x = this._y = 0.0;\n\t\tthis._anchorX = 0;\n\t\tthis._anchorY = 0;\t\n\t\t//The values in pixels for width and height that will reflect the image's original size\n\t\tthis._rawWidthPixels = this._rawHeightPixels = 1.0;\n\t\t//The values in cms for width and height that will reflect the images's original size\n\t\tthis._rawWidth = this._rawHeight = 1.0;\n\t\t\n\t\t//The values in pixels for widht and height that will reflect the scaling of user to floorplan system \n\t\tthis._widthPixels = this._heightPixels = 1.0;\n//\t\tThe values in cms for widht and height that will reflect the scaling of user to floorplan system \n\t\tthis._width = this._height = 1.0;\n\t\t\n\t\tthis._drawWidthPixels = this._drawHeightPixels = 1.0;\n\t\t\n\t\tthis._scaleX = this._scaleY = 1.0;\n\t\tthis._maintainProportion = true;\n\t\tthis._widthByHeightRatio = 1.0;\n\t}\n\t\n\t_calibrate()\n\t{\n\t\tif(!this._loaded)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis._scaleX = this._widthPixels / this._rawWidthPixels;\n\t\tthis._scaleY = this._heightPixels / this._rawHeightPixels;\n\t\tthis._drawWidthPixels = this._rawWidthPixels * this._scaleX;\n\t\tthis._drawHeightPixels = this._rawHeightPixels * this._scaleY;\n\t}\n\t\n\t_updated()\n\t{\n\t\tthis.dispatchEvent({type: EVENT_UPDATED});\n\t}\n\t\n\tclear()\n\t{\n\t\tthis._loaded = false;\n\t\tthis._transparency = 1.0;\t\t\n\t\tthis._x = this._y = 0.0;\n\t\tthis._anchorX = 0.0;\n\t\tthis._anchorY = 0.0;\t\t\t\n\t\tthis._rawWidthPixels = this._rawHeightPixels = 1.0;\n\t\tthis._rawWidth = this._rawHeight = 1.0;\n\t\tthis._widthPixels = this._heightPixels = 1.0;\n\t\tthis._width = this._height = 1.0;\n\t\tthis._scaleX = this._scaleY = 1.0;\n\t\tthis._drawWidthPixels = this._drawHeightPixels = 1.0;\n\t}\n\t\n\tset url(val)\n\t{\n\t\tif(!val || val == null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar scope = this;\n\t\tthis._url = val;\n\t\tthis._loaded = false;\n\t\tthis._image.onload = function()\n\t\t{\t\t\t\n\t\t\tscope._rawWidthPixels = this.width;\n\t\t\tscope._rawHeightPixels = this.height;\n\t\t\tscope._rawWidth = scope._rawWidthPixels * cmPerPixel;\n\t\t\tscope._rawHeight = scope._rawHeightPixels * cmPerPixel;\n\t\t\t\n\t\t\tscope._widthByHeightRatio = this.width / this.height;\n\t\t\t\n\t\t\tif(scope._widthPixels < 2.0)\n\t\t\t{\n\t\t\t\tscope._widthPixels = scope._rawWidthPixels;\n\t\t\t\tscope.width = Dimensioning.cmToMeasureRaw(scope._rawWidth);\n\t\t\t}\t\n\t\t\tif(scope._heightPixels < 2.0)\n\t\t\t{\n\t\t\t\tscope._heightPixels = scope._rawHeightPixels;\t\t\t\t\n\t\t\t\tscope.height = Dimensioning.cmToMeasureRaw(scope._rawHeight);\n\t\t\t}\n\t\t\tscope._loaded = true;\n\t\t\tscope._calibrate();\n\t\t\tscope._updated();\n\t\t}\n\t\tthis._image.onerror = function()\n\t\t{\n\t\t\tscope._loaded = false;\n\t\t\tscope._url = '';\n\t\t}\n\t\tthis._image.src = this._url;\n\t}\n\t\n\tget url()\n\t{\n\t\treturn this._url;\n\t}\n\t\n\tset maintainProportion(flag)\n\t{\n\t\tthis._maintainProportion = flag;\n\t\tthis._updated();\n\t}\n\t\n\tget maintainProportion()\n\t{\n\t\treturn this._maintainProportion;\n\t}\n\t\n\tget loaded()\n\t{\n\t\treturn this._loaded;\n\t}\n\t\n\tset transparency(val)\n\t{\n\t\tthis._transparency = val;\n\t\tthis._updated();\n\t}\n\t\n\tget transparency()\n\t{\n\t\treturn this._transparency;\n\t}\n\t\n\tset x(val)\n\t{\n\t\tthis._x = val;\n//\t\tthis._anchorX = val;\n\t\tthis._updated();\n\t}\n\t\n\tget x()\n\t{\n\t\treturn this._x;\n\t}\n\t\n\tset y(val)\n\t{\n\t\tthis._y = val;\n//\t\tthis._anchorY = val;\n\t\tthis._updated();\n\t}\n\t\n\tget y()\n\t{\n\t\treturn this._y;\t\t\n\t}\n\t\n\tset anchorX(val)\n\t{\n\t\tthis._anchorX = val;\n\t\tthis._updated()\n\t}\n\t\n\tget anchorX()\n\t{\n\t\treturn this._anchorX;\n\t}\n\t\n\tset anchorY(val)\n\t{\n\t\tthis._anchorY = val;\n\t\tthis._updated();\n\t}\n\t\n\tget anchorY()\n\t{\n\t\treturn this._anchorY;\n\t}\n\t\n\tset width(val)\n\t{\n\t\tthis._width = Dimensioning.cmFromMeasureRaw(val);\n\t\tthis._widthPixels = this._width * pixelsPerCm;\n\t\t\n\t\tif(this._maintainProportion)\n\t\t{\n\t\t\tthis._height = this._width / this._widthByHeightRatio;\n\t\t\tthis._heightPixels = (this._height * pixelsPerCm);\n\t\t}\n\t\t\n\t\tthis._calibrate();\n\t\tthis._updated();\n\t}\n\t\n\tget width()\n\t{\n\t\treturn Dimensioning.cmToMeasureRaw(this._width);\n\t}\n\t\n\tset height(val)\n\t{\n\t\tthis._height = Dimensioning.cmFromMeasureRaw(val);\n\t\tthis._heightPixels = this._height * pixelsPerCm;\n\t\t\n\t\tif(this._maintainProportion)\n\t\t{\n\t\t\tthis._width = this._height * this._widthByHeightRatio;\n\t\t\tthis._widthPixels = (this._width * pixelsPerCm);\n\t\t}\n\t\t\n\t\tthis._calibrate();\n\t\tthis._updated();\n\t}\n\t\n\tget height()\n\t{\n\t\treturn Dimensioning.cmToMeasureRaw(this._height);\n\t}\n\t\n\tdrawOriginCrossHair()\n\t{\n\t\tvar ox = 0;\n\t\tvar oy = 0;\n\t\t//draw origin crosshair\n\t\tthis.context.fillStyle = '#FF0000';\n\t\tthis.context.fillRect(ox-1.5, oy-15, 3, 30);\n\t\tthis.context.fillRect(ox-15, oy-1.5, 30, 3);\n//\t\tthis.context.lineWidth = 1;\n//\t\tthis.context.strokeStyle = '#FF0000';\n//\t\tthis.context.strokeRect(ox-1.5, oy-15, 1.5, 30);\n//\t\tthis.context.strokeRect(ox-15, oy-1.5, 28, 1.5);\n\t}\t\n\n\t/** */\n\tdraw() \n\t{\n\t\tif(this._loaded)\n\t\t{\n\t\t\tvar conX = this.viewmodel.convertX(this._x);\n\t\t\tvar conY = this.viewmodel.convertY(this._y);\n\t\t\tthis.context.translate(conX, conY);\n\t\t\t\n\t\t\tthis.context.globalAlpha = this._transparency;\t\t\t\n\t\t\tthis.context.drawImage(this._image, -this._anchorX*this._scaleX, -this._anchorY*this._scaleY, this._drawWidthPixels, this._drawHeightPixels);\n\t\t\tthis.context.globalAlpha = 1.0;\n\t\t\t\n\t\t\tthis.context.beginPath();\t\t\t\n\t\t\tthis.context.fillStyle = 'blue';\n\t\t\tthis.context.arc(0, 0, 5, 0, 6.28);\n\t\t\tthis.context.fill();\n\t\t\tthis.context.closePath();\n\t\t\tthis.drawOriginCrossHair();\n\t\t\tthis.context.translate(-conX, -conY);\n\t\t}\n\t\t\t\n\t}\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/floorplanner/carbonsheet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "class",
    "name": "CarbonSheet",
    "memberof": "scripts/floorplanner/carbonsheet.js",
    "static": true,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/carbonsheet.js",
    "importStyle": "{CarbonSheet}",
    "description": "The View to be used by a Floorplanner to render in/interact with.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 212,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 213,
    "kind": "member",
    "name": "canvasElement",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#canvasElement",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "canvas",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "context",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#context",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "viewmodel",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#viewmodel",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "_url",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_url",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "_image",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_image",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "_loaded",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_loaded",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "_transparency",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_transparency",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "_x",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_x",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "_anchorX",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_anchorX",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "_anchorY",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_anchorY",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "_rawWidthPixels",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_rawWidthPixels",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "member",
    "name": "_rawWidth",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_rawWidth",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "_widthPixels",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_widthPixels",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "_width",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_width",
    "access": "private",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "_drawWidthPixels",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_drawWidthPixels",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "member",
    "name": "_scaleX",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_scaleX",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "_maintainProportion",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_maintainProportion",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "_widthByHeightRatio",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_widthByHeightRatio",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "_calibrate",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_calibrate",
    "access": "private",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "_scaleY",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_scaleY",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "_drawHeightPixels",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_drawHeightPixels",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "_updated",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_updated",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "clear",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#clear",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 251,
    "kind": "set",
    "name": "url",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#url",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 254,
    "kind": "get",
    "name": "url",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#url",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "set",
    "name": "maintainProportion",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#maintainProportion",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 257,
    "kind": "get",
    "name": "maintainProportion",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#maintainProportion",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "get",
    "name": "loaded",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#loaded",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "set",
    "name": "transparency",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#transparency",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true
  },
  {
    "__docId__": 261,
    "kind": "get",
    "name": "transparency",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#transparency",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "set",
    "name": "x",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#x",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true
  },
  {
    "__docId__": 264,
    "kind": "get",
    "name": "x",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#x",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "set",
    "name": "y",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#y",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "_y",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_y",
    "access": "private",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "get",
    "name": "y",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#y",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "set",
    "name": "anchorX",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#anchorX",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true
  },
  {
    "__docId__": 270,
    "kind": "get",
    "name": "anchorX",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#anchorX",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "set",
    "name": "anchorY",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#anchorY",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true
  },
  {
    "__docId__": 273,
    "kind": "get",
    "name": "anchorY",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#anchorY",
    "access": "public",
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "set",
    "name": "width",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#width",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "_height",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_height",
    "access": "private",
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "_heightPixels",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#_heightPixels",
    "access": "private",
    "description": null,
    "lineNumber": 202,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "get",
    "name": "width",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#width",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "set",
    "name": "height",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#height",
    "access": "public",
    "description": null,
    "lineNumber": 214,
    "undocument": true
  },
  {
    "__docId__": 285,
    "kind": "get",
    "name": "height",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#height",
    "access": "public",
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "drawOriginCrossHair",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#drawOriginCrossHair",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "draw",
    "memberof": "scripts/floorplanner/carbonsheet.js~CarbonSheet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/carbonsheet.js~CarbonSheet#draw",
    "access": "public",
    "description": "",
    "lineNumber": 249,
    "params": [],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "scripts/floorplanner/floorplanner.js",
    "content": "import $ from 'jquery';\nimport {EventDispatcher} from 'three';\nimport {cmPerPixel, pixelsPerCm, Dimensioning} from '../core/dimensioning.js';\nimport {configDimUnit, Configuration} from '../core/configuration.js';\nimport {EVENT_MODE_RESET, EVENT_LOADED} from '../core/events.js';\nimport {EVENT_CORNER_2D_HOVER, EVENT_WALL_2D_HOVER, EVENT_ROOM_2D_HOVER} from '../core/events.js';\nimport {EVENT_CORNER_2D_DOUBLE_CLICKED, EVENT_ROOM_2D_DOUBLE_CLICKED, EVENT_WALL_2D_DOUBLE_CLICKED} from '../core/events.js';\nimport {EVENT_NOTHING_CLICKED} from '../core/events.js';\nimport {FloorplannerView2D, floorplannerModes} from './floorplanner_view.js';\n\n/** how much will we move a corner to make a wall axis aligned (cm) */\nexport const snapTolerance = 25;\n/**\n * The Floorplanner implements an interactive tool for creation of floorplans in\n * 2D.\n */\nexport class Floorplanner2D extends EventDispatcher\n{\n\t/** */\n\tconstructor(canvas, floorplan)\n\t{\n\t\tsuper();\n\t\t/** */\n\t\tthis.mode = 0;\n\t\t/** */\n\t\tthis.activeWall = null;\n\t\t/** */\n\t\tthis.activeCorner = null;\n\t\t/** */\n\t\tthis.activeRoom = null;\n\t\t/** */\n\t\tthis.originX = 0;\n\t\t/** */\n\t\tthis.originY = 0;\n\t\t/** drawing state */\n\t\tthis.targetX = 0;\n\t\t/** drawing state */\n\t\tthis.targetY = 0;\n\t\t/** drawing state */\n\t\tthis.lastNode = null;\n\t\t/** */\n\t\tthis.wallWidth = 0;\n\t\t/** */\n\t\tthis.modeResetCallbacks = null;\n\n\t\t/** */\n\t\tthis.mouseDown = false;\n\t\t/** */\n\t\tthis.mouseMoved = false;\n\t\t/** in ThreeJS coords */\n\t\tthis.mouseX = 0;\n\t\t/** in ThreeJS coords */\n\t\tthis.mouseY = 0;\n\t\t/** in ThreeJS coords */\n\t\tthis.rawMouseX = 0;\n\t\t/** in ThreeJS coords */\n\t\tthis.rawMouseY = 0;\n\t\t/** mouse position at last click */\n\t\tthis.lastX = 0;\n\t\t/** mouse position at last click */\n\t\tthis.lastY = 0;\n\n\t\tthis.canvas = canvas;\n\t\tthis.floorplan = floorplan;\n\t\tthis.canvasElement = $('#' + canvas);\n\t\tthis.view = new FloorplannerView2D(this.floorplan, this, canvas);\n\n//\t\tvar cmPerFoot = cmPerFoot;\n//\t\tvar pixelsPerFoot = pixelsPerFoot;\n\t\tthis.cmPerPixel = cmPerPixel;\n\t\tthis.pixelsPerCm = pixelsPerCm;\n\n\t\tthis.wallWidth = 10.0 * this.pixelsPerCm;\n\t\tthis.gridsnapmode = false;\n\t\tthis.shiftkey = false;\n\t\t// Initialization:\n\n\t\tthis.setMode(floorplannerModes.MOVE);\n\n\t\tvar scope = this;\n\t\tthis.canvasElement.bind('touchstart mousedown', (event) => {scope.mousedown(event);});\n\t\tthis.canvasElement.bind('touchmove mousemove', (event) => {scope.mousemove(event);});\n\t\tthis.canvasElement.bind('touchend mouseup', (event) => {scope.mouseup(event);});\n\t\tthis.canvasElement.bind('mouseleave', (event) => {scope.mouseleave(event);});\n\t\tthis.canvasElement.bind('dblclick', (event) => {scope.doubleclick(event);});\n\n\t\tdocument.addEventListener('keyup', function(event){scope.keyUp(event)});\n\t\tdocument.addEventListener('keydown', function(event){scope.keyDown(event)});\n\t\tfloorplan.addEventListener(EVENT_LOADED, function(){scope.reset();});\n\t}\n\n\tget carbonSheet()\n\t{\n\t\treturn this.view.carbonSheet;\n\t}\n\n\tdoubleclick()\n\t{\n\t\t\tvar userinput, cid;\n\t\t\tfunction getAValidInput(message, current)\n\t\t\t{\n\t\t\t\t\tconsole.log('GET A VALID INPUT');\n\t\t\t\t\tvar uinput = window.prompt(message, current);\n\t\t\t\t\tif(uinput != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn uinput;\n\t\t\t\t\t}\n\t\t\t\t\treturn current;\n\t\t\t}\n\t\t\tif(this.activeCorner)\n\t\t\t{\n\t\t\t\tcid = this.activeCorner.id;\n\t\t\t\tvar units = Configuration.getStringValue(configDimUnit);\n\t\t\t\tthis.activeCorner.elevation = getAValidInput(`Elevation at this point (in ${units},\\n${cid}): `, Dimensioning.cmToMeasureRaw(this.activeCorner.elevation));//Number(userinput);\n\t\t\t\tvar x = getAValidInput(`Location: X (${Dimensioning.cmToMeasureRaw(this.activeCorner.x)}): `, Dimensioning.cmToMeasureRaw(this.activeCorner.x));//Number(userinput);\n\t\t\t\tvar y = getAValidInput(`Location: Y (${Dimensioning.cmToMeasureRaw(this.activeCorner.y)}): `, Dimensioning.cmToMeasureRaw(this.activeCorner.y));//Number(userinput);\n\t\t\t\tthis.activeCorner.move(Dimensioning.cmFromMeasureRaw(x), Dimensioning.cmFromMeasureRaw(y));\n\t\t\t\tthis.floorplan.dispatchEvent({type:EVENT_CORNER_2D_DOUBLE_CLICKED, item: this.activeCorner});\n\t\t\t}\n\t\t\t// var userinput, cid;\n\t\t\t// var units = Configuration.getStringValue(configDimUnit);\n\t\t\t// if(this.activeCorner)\n\t\t\t// {\n      //   this.floorplan.dispatchEvent({type:EVENT_CORNER_2D_DOUBLE_CLICKED, item: this.activeCorner});\n\t\t\t// \tcid = this.activeCorner.id;\n\t\t\t// \tuserinput = window.prompt(`Elevation at this point (in ${units},\\n${cid}): `, Dimensioning.cmToMeasureRaw(this.activeCorner.elevation));\n\t\t\t// \tif(userinput != null)\n\t\t\t// \t{\n\t\t\t// \t\tthis.activeCorner.elevation = Number(userinput);\n\t\t\t// \t}\n      else if(this.activeWall)\n      {\n          this.floorplan.dispatchEvent({type:EVENT_WALL_2D_DOUBLE_CLICKED, item: this.activeWall});\n      }\n\t\t\telse if(this.activeRoom)\n\t\t\t{\n          this.floorplan.dispatchEvent({type:EVENT_ROOM_2D_DOUBLE_CLICKED, item: this.activeRoom});\n\t\t\t\t\tuserinput = window.prompt('Enter a name for this Room: ', this.activeRoom.name);\n\t\t\t\t\tif(userinput != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.activeRoom.name = userinput;\n\t\t\t\t\t}\n\t\t\t\t\tthis.view.draw();\n\t\t\t}\n\t}\n\n\tkeyUp(e)\n\t{\n\t\tif (e.keyCode == 27)\n\t\t{\n\t\t\tthis.escapeKey();\n\t\t}\n\t\tthis.gridsnapmode = false;\n\t\tthis.shiftkey = false;\n\t}\n\n\tkeyDown(e)\n\t{\n\t\tif(e.shiftKey || e.keyCode == 16)\n\t\t{\n\t\t\tthis.shiftkey = true;\n\t\t}\n\t\tthis.gridsnapmode = this.shiftkey;\n\t}\n\n\t/** */\n\tescapeKey()\n\t{\n\t\tthis.setMode(floorplannerModes.MOVE);\n\t}\n\n\t/** */\n\tupdateTarget()\n\t{\n\t\tif (this.mode == floorplannerModes.DRAW && this.lastNode)\n\t\t{\n\t\t\tif (Math.abs(this.mouseX - this.lastNode.x) < snapTolerance)\n\t\t\t{\n\t\t\t\tthis.targetX = this.lastNode.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.targetX = this.mouseX;\n\t\t\t}\n\t\t\tif (Math.abs(this.mouseY - this.lastNode.y) < snapTolerance)\n\t\t\t{\n\t\t\t\tthis.targetY = this.lastNode.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.targetY = this.mouseY;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.targetX = this.mouseX;\n\t\t\tthis.targetY = this.mouseY;\n\t\t}\n\n\t\tthis.view.draw();\n\t}\n\n\t/** */\n\tmousedown(event)\n\t{\n\t\tthis.mouseDown = true;\n\t\tthis.mouseMoved = false;\n\t\tif(event.touches)\n\t\t{\n\t\t\tthis.rawMouseX = event.touches[0].clientX;\n\t\t\tthis.rawMouseY = event.touches[0].clientY;\n\t\t}\n\n\t\tthis.lastX = this.rawMouseX;\n\t\tthis.lastY = this.rawMouseY;\n\n\t\t// delete\n\t\tif (this.mode == floorplannerModes.DELETE)\n\t\t{\n\t\t\tif (this.activeCorner)\n\t\t\t{\n\t\t\t\tthis.activeCorner.removeAll();\n\t\t\t}\n\t\t\telse if (this.activeWall)\n\t\t\t{\n\t\t\t\tthis.activeWall.remove();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Continue the mode of deleting walls, this is necessary for deleting multiple walls\n//\t\t\t\tthis.setMode(floorplannerModes.MOVE);\n\t\t\t}\n\t\t}\n\n    if(this.activeCorner == null && this.activeWall == null && this.activeRoom == null)\n    {\n        this.floorplan.dispatchEvent({type:EVENT_NOTHING_CLICKED});\n    }\n\t}\n\n\t/** */\n\tmousemove(event)\n\t{\n\t\tthis.mouseMoved = true;\n\n\t\tif(event.touches)\n\t\t{\n\t\t\tevent = event.touches[0];\n\t\t}\n\n\t\t// update mouse\n\t\tthis.rawMouseX = event.clientX;\n\t\tthis.rawMouseY = event.clientY;\n\n\t\tthis.mouseX = (event.clientX - this.canvasElement.offset().left)  * this.cmPerPixel + this.originX * this.cmPerPixel;\n\t\tthis.mouseY = (event.clientY - this.canvasElement.offset().top) * this.cmPerPixel + this.originY * this.cmPerPixel;\n\n\n\t\t// update target (snapped position of actual mouse)\n\t\tif (this.mode == floorplannerModes.DRAW || (this.mode == floorplannerModes.MOVE && this.mouseDown))\n\t\t{\n\t\t\tthis.updateTarget();\n\t\t}\n\n\t\t// update object target\n\t\tif (this.mode != floorplannerModes.DRAW && !this.mouseDown)\n\t\t{\n\t\t\tvar hoverCorner = this.floorplan.overlappedCorner(this.mouseX, this.mouseY);\n\t\t\tvar hoverWall = this.floorplan.overlappedWall(this.mouseX, this.mouseY);\n\t\t\tvar hoverRoom = this.floorplan.overlappedRoom(this.mouseX, this.mouseY);\n\t\t\tvar draw = false;\n\t\t\tif (hoverCorner != this.activeCorner)\n\t\t\t{\n\t\t\t\tthis.activeCorner = hoverCorner;\n        this.floorplan.dispatchEvent({type:EVENT_CORNER_2D_HOVER, item: hoverCorner});\n\t\t\t\tdraw = true;\n\t\t\t}\n\t\t\t// corner takes precendence\n\t\t\tif (this.activeCorner == null)\n\t\t\t{\n\t\t\t\tif (hoverWall != this.activeWall)\n\t\t\t\t{\n\t\t\t\t\tthis.activeWall = hoverWall;\n          this.floorplan.dispatchEvent({type:EVENT_WALL_2D_HOVER, item: hoverWall});\n\t\t\t\t\tdraw = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.activeWall = null;\n\t\t\t}\n\n\t\t\tthis.activeRoom = hoverRoom;\n      if(this.activeCorner == null && this.activeWall == null && this.activeRoom !=null)\n      {\n          this.floorplan.dispatchEvent({type:EVENT_ROOM_2D_HOVER, item: hoverRoom});\n      }\n\n\n\t\t\tif (draw)\n\t\t\t{\n\t\t\t\tthis.view.draw();\n\t\t\t}\n\t\t}\n\n\t\t// panning\n\t\tif (this.mouseDown && !this.activeCorner && !this.activeWall)\n\t\t{\n\t\t\tthis.originX += (this.lastX - this.rawMouseX);\n\t\t\tthis.originY += (this.lastY - this.rawMouseY);\n\t\t\tthis.lastX = this.rawMouseX;\n\t\t\tthis.lastY = this.rawMouseY;\n\t\t\tthis.view.draw();\n\t\t}\n\n\t\t// dragging\n\t\tif (this.mode == floorplannerModes.MOVE && this.mouseDown)\n\t\t{\n\t\t\tif (this.activeCorner)\n\t\t\t{\n\t\t\t\tif(this.gridsnapmode)\n\t\t\t\t{\n\t\t\t\t\t\tvar mx = (Math.abs(this.mouseX - this.activeCorner.x) < snapTolerance) ? this.activeCorner.x : this.mouseX;\n\t\t\t\t\t\tvar my = (Math.abs(this.mouseY - this.activeCorner.y) < snapTolerance) ? this.activeCorner.y : this.mouseY;\n\t\t\t\t\t\tthis.activeCorner.move(Math.round(mx), Math.round(my));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\tthis.activeCorner.move(this.mouseX, this.mouseY);\n\t\t\t\t}\n\t\t\t\tif(this.shiftkey)\n\t\t\t\t{\n\t\t\t\t\tthis.activeCorner.snapToAxis(snapTolerance);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.activeWall)\n\t\t\t{\n\t\t\t\tthis.activeWall.relativeMove((this.rawMouseX - this.lastX) * this.cmPerPixel, (this.rawMouseY - this.lastY) * this.cmPerPixel);\n\t\t\t\tif(this.gridsnapmode)\n\t\t\t\t{\n\t\t\t\t\tthis.activeWall.snapToAxis(snapTolerance);\n\t\t\t\t}\n\t\t\t\tthis.lastX = this.rawMouseX;\n\t\t\t\tthis.lastY = this.rawMouseY;\n\t\t\t}\n\t\t\tthis.view.draw();\n\t\t}\n\t}\n\n\t/** */\n\tmouseup()\n\t{\n\t\tthis.mouseDown = false;\n\n\t\t// drawing\n\t\tif (this.mode == floorplannerModes.DRAW && !this.mouseMoved)\n\t\t{\n\t\t\t// This creates the corner already\n\t\t\tvar corner = this.floorplan.newCorner(this.targetX, this.targetY);\n\n\t\t\t// further create a newWall based on the newly inserted corners\n\t\t\t// (one in the above line and the other in the previous mouse action\n\t\t\t// of start drawing a new wall)\n\t\t\tif (this.lastNode != null)\n\t\t\t{\n\t\t\t\tthis.floorplan.newWall(this.lastNode, corner);\n\t\t\t\tthis.floorplan.newWallsForIntersections(this.lastNode, corner);\n\t\t\t\tthis.view.draw();\n\t\t\t}\n\t\t\tif (corner.mergeWithIntersected() && this.lastNode != null)\n\t\t\t{\n\t\t\t\tthis.setMode(floorplannerModes.MOVE);\n\t\t\t}\n\t\t\tthis.lastNode = corner;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(this.activeCorner != null)\n\t\t\t{\n\t\t\t\t\tthis.activeCorner.updateAttachedRooms();\n\t\t\t}\n\t\t\tif(this.activeWall != null)\n\t\t\t{\n\t\t\t\t\tthis.activeWall.updateAttachedRooms();\n\t\t\t}\n\t\t}\n\t}\n\n\t/** */\n\tmouseleave()\n\t{\n\t\tthis.mouseDown = false;\n\t\t// scope.setMode(scope.modes.MOVE);\n\t}\n\n\t/** */\n\treset()\n\t{\n\t\tthis.view.carbonSheet.clear();\n\t\tthis.resizeView();\n\t\tthis.setMode(floorplannerModes.MOVE);\n\t\tthis.resetOrigin();\n\t\tthis.view.draw();\n\t}\n\n\t/** */\n\tresizeView()\n\t{\n\t\tthis.view.handleWindowResize();\n\t}\n\n\t/** */\n\tsetMode(mode)\n\t{\n\t\tthis.lastNode = null;\n\t\tthis.mode = mode;\n\t\tthis.dispatchEvent({type:EVENT_MODE_RESET, mode: mode});\n\t\t// this.modeResetCallbacks.fire(mode);\n\t\tthis.updateTarget();\n\t}\n\n\t/** Sets the origin so that floorplan is centered */\n\tresetOrigin()\n\t{\n\t\tvar centerX = this.canvasElement.innerWidth() / 2.0;\n\t\tvar centerY = this.canvasElement.innerHeight() / 2.0;\n\t\tvar centerFloorplan = this.floorplan.getCenter();\n\t\tthis.originX = centerFloorplan.x * this.pixelsPerCm - centerX;\n\t\tthis.originY = centerFloorplan.z * this.pixelsPerCm - centerY;\n\t}\n\n\t/** Convert from THREEjs coords to canvas coords. */\n\tconvertX(x)\n\t{\n\t\treturn (x - (this.originX * this.cmPerPixel)) * this.pixelsPerCm;\n\t}\n\n\t/** Convert from THREEjs coords to canvas coords. */\n\tconvertY(y)\n\t{\n\t\treturn (y - (this.originY * this.cmPerPixel)) * this.pixelsPerCm;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/floorplanner/floorplanner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "variable",
    "name": "snapTolerance",
    "memberof": "scripts/floorplanner/floorplanner.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner.js~snapTolerance",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner.js",
    "importStyle": "{snapTolerance}",
    "description": "how much will we move a corner to make a wall axis aligned (cm)",
    "lineNumber": 12,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "class",
    "name": "Floorplanner2D",
    "memberof": "scripts/floorplanner/floorplanner.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner.js",
    "importStyle": "{Floorplanner2D}",
    "description": "The Floorplanner implements an interactive tool for creation of floorplans in\n2D.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 291,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20
  },
  {
    "__docId__": 292,
    "kind": "member",
    "name": "mode",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mode",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "activeWall",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#activeWall",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "activeCorner",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#activeCorner",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "activeRoom",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#activeRoom",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "name": "originX",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#originX",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "member",
    "name": "originY",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#originY",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "member",
    "name": "targetX",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#targetX",
    "access": "public",
    "description": "drawing state",
    "lineNumber": 36,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "targetY",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#targetY",
    "access": "public",
    "description": "drawing state",
    "lineNumber": 38,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "lastNode",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#lastNode",
    "access": "public",
    "description": "drawing state",
    "lineNumber": 40,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "wallWidth",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#wallWidth",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "modeResetCallbacks",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#modeResetCallbacks",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "mouseDown",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mouseDown",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "mouseMoved",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mouseMoved",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "mouseX",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mouseX",
    "access": "public",
    "description": "in ThreeJS coords",
    "lineNumber": 51,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "mouseY",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mouseY",
    "access": "public",
    "description": "in ThreeJS coords",
    "lineNumber": 53,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "rawMouseX",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#rawMouseX",
    "access": "public",
    "description": "in ThreeJS coords",
    "lineNumber": 55,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "rawMouseY",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#rawMouseY",
    "access": "public",
    "description": "in ThreeJS coords",
    "lineNumber": 57,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "lastX",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#lastX",
    "access": "public",
    "description": "mouse position at last click",
    "lineNumber": 59,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "lastY",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#lastY",
    "access": "public",
    "description": "mouse position at last click",
    "lineNumber": 61,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "canvas",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "canvasElement",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#canvasElement",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "view",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#view",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "cmPerPixel",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#cmPerPixel",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "pixelsPerCm",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#pixelsPerCm",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "gridsnapmode",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#gridsnapmode",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "shiftkey",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#shiftkey",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "get",
    "name": "carbonSheet",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#carbonSheet",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "doubleclick",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#doubleclick",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "keyUp",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#keyUp",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "keyDown",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#keyDown",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "escapeKey",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#escapeKey",
    "access": "public",
    "description": "",
    "lineNumber": 167,
    "params": [],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "updateTarget",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#updateTarget",
    "access": "public",
    "description": "",
    "lineNumber": 173,
    "params": [],
    "return": null
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "mousedown",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mousedown",
    "access": "public",
    "description": "",
    "lineNumber": 204,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "mousemove",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mousemove",
    "access": "public",
    "description": "",
    "lineNumber": 242,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "mouseup",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mouseup",
    "access": "public",
    "description": "",
    "lineNumber": 351,
    "params": [],
    "return": null
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "mouseleave",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#mouseleave",
    "access": "public",
    "description": "",
    "lineNumber": 390,
    "params": [],
    "return": null
  },
  {
    "__docId__": 364,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#reset",
    "access": "public",
    "description": "",
    "lineNumber": 397,
    "params": [],
    "return": null
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "resizeView",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#resizeView",
    "access": "public",
    "description": "",
    "lineNumber": 407,
    "params": [],
    "return": null
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "setMode",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#setMode",
    "access": "public",
    "description": "",
    "lineNumber": 413,
    "params": [
      {
        "name": "mode",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "resetOrigin",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#resetOrigin",
    "access": "public",
    "description": "Sets the origin so that floorplan is centered",
    "lineNumber": 423,
    "params": [],
    "return": null
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "convertX",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#convertX",
    "access": "public",
    "description": "Convert from THREEjs coords to canvas coords.",
    "lineNumber": 433,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "convertY",
    "memberof": "scripts/floorplanner/floorplanner.js~Floorplanner2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner.js~Floorplanner2D#convertY",
    "access": "public",
    "description": "Convert from THREEjs coords to canvas coords.",
    "lineNumber": 439,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "scripts/floorplanner/floorplanner_view.js",
    "content": "import $ from 'jquery';\nimport {Vector2} from 'three';\nimport {Utils} from '../core/utils.js';\nimport {EVENT_UPDATED} from '../core/events.js';\n\nimport {Dimensioning} from '../core/dimensioning.js';\nimport {CarbonSheet} from './carbonsheet.js';\n\n/** */\nexport const floorplannerModes = {MOVE: 0,DRAW: 1,DELETE: 2};\n\n// grid parameters\nexport const gridSpacing = 20; // pixels\nexport const gridWidth = 1;\nexport const gridColor = '#f1f1f1';\n\n// room config\n// export const roomColor = '#f9f9f9';\nexport const roomColor = '#fedaff66';\n\n// wall config\nexport const wallWidth = 5;\nexport const wallWidthHover = 7;\nexport const wallColor = '#dddddd';\nexport const wallColorHover = '#008cba';\nexport const edgeColor = '#888888';\nexport const edgeColorHover = '#008cba';\nexport const edgeWidth = 1;\n\nexport const deleteColor = '#ff0000';\n\n// corner config\nexport const cornerRadius = 0;\nexport const cornerRadiusHover = 7;\nexport const cornerColor = '#cccccc';\nexport const cornerColorHover = '#008cba';\n/**\n * The View to be used by a Floorplanner to render in/interact with.\n */\nexport class FloorplannerView2D\n{\n\tconstructor(floorplan, viewmodel, canvas)\n\t{\n\t\tthis.canvasElement = document.getElementById(canvas);\n\t\tthis.canvas = canvas;\n\t\tthis.context = this.canvasElement.getContext('2d');\n\t\tthis.floorplan = floorplan;\n\t\tthis.viewmodel = viewmodel;\n\n\t\tvar scope = this;\n\t\tthis._carbonsheet = new CarbonSheet(floorplan, viewmodel, canvas);\n\t\tthis._carbonsheet.addEventListener(EVENT_UPDATED, function()\n\t\t\t\t{\n\t\t\t\t\tscope.draw();\n\t\t\t\t});\n\n\t\tthis.floorplan.carbonSheet = this._carbonsheet;\n\n\t\t$(window).resize(() => {scope.handleWindowResize();});\n\t\tthis.handleWindowResize();\n\t}\n\n\tget carbonSheet()\n\t{\n\t\treturn this._carbonsheet;\n\t}\n\n\t/** */\n\thandleWindowResize()\n\t{\n\t\tvar canvasSel = $('#' + this.canvas);\n\t\tvar parent = canvasSel.parent();\n\t\tcanvasSel.height(parent.innerHeight());\n\t\tcanvasSel.width(parent.innerWidth());\n\t\tthis.canvasElement.height = parent.innerHeight();\n\t\tthis.canvasElement.width = parent.innerWidth();\n\t\tthis.draw();\n\t}\n\n\t/** */\n\tdraw()\n\t{\n\t\tthis.context.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n\t\tthis._carbonsheet.draw();\n\t\tthis.drawGrid();\n\t\tthis.drawOriginCrossHair();\n\n\t\t// this.context.globalAlpha = 0.3;\n\t\tthis.floorplan.getRooms().forEach((room) => {this.drawRoom(room);});\n\t\t// this.context.globalAlpha = 1.0;\n\n\t\tthis.floorplan.getWalls().forEach((wall) => {this.drawWall(wall);});\n\t\tthis.floorplan.getCorners().forEach((corner) => {this.drawCorner(corner);});\n\t\tif (this.viewmodel.mode == floorplannerModes.DRAW)\n\t\t{\n\t\t\tthis.drawTarget(this.viewmodel.targetX, this.viewmodel.targetY, this.viewmodel.lastNode);\n\t\t\t//Enable the below lines for measurement while drawing, still needs work as it is crashing the whole thing\n\t\t\tif(this.viewmodel.lastNode != null)\n\t\t\t{\n\t\t\t\tvar a = new Vector2(this.viewmodel.lastNode.x,this.viewmodel.lastNode.y);\n\t\t\t\tvar b = new Vector2(this.viewmodel.targetX, this.viewmodel.targetY);\n\t\t\t\tvar abvector = b.clone().sub(a);\n\t\t\t\tvar midPoint = abvector.multiplyScalar(0.5).add(a);\n\t\t\t\tthis.drawTextLabel(Dimensioning.cmToMeasure(a.distanceTo(b)), this.viewmodel.convertX(midPoint.x), this.viewmodel.convertY(midPoint.y));\n\t\t\t}\n\t\t}\n\t\tthis.floorplan.getWalls().forEach((wall) => {this.drawWallLabels(wall);});\n\t}\n\n\tdrawOriginCrossHair()\n\t{\n\t\tvar ox = this.viewmodel.convertX(0);\n\t\tvar oy = this.viewmodel.convertY(0);\n\t\t//draw origin crosshair\n\t\tthis.context.fillStyle = '#0000FF';\n\t\tthis.context.fillRect(ox-2, oy-7.5, 4, 15);\n\t\tthis.context.fillRect(ox-7.5, oy-2, 15, 4);\n\t\tthis.context.strokeStyle = '#FF0000';\n\t\tthis.context.fillRect(ox-1.25, oy-5, 2.5, 10);\n\t\tthis.context.fillRect(ox-5, oy-1.25, 10, 2.5);\n\t}\n\n\n\t/** */\n\tdrawWall(wall)\n\t{\n\t\tvar hover = (wall === this.viewmodel.activeWall);\n\t\tvar color = wallColor;\n\t\tif (hover && this.viewmodel.mode == floorplannerModes.DELETE)\n\t\t{\n\t\t\tcolor = deleteColor;\n\t\t}\n\t\telse if (hover)\n\t\t{\n\t\t\tcolor = wallColorHover;\n\t\t}\n\t\tthis.drawLine(this.viewmodel.convertX(wall.getStartX()),this.viewmodel.convertY(wall.getStartY()),this.viewmodel.convertX(wall.getEndX()),this.viewmodel.convertY(wall.getEndY()),hover ? wallWidthHover : wallWidth,color);\n\t\tif (!hover && wall.frontEdge)\n\t\t{\n\t\t\tthis.drawEdge(wall.frontEdge, hover);\n\t\t}\n\t\tif (!hover && wall.backEdge)\n\t\t{\n\t\t\tthis.drawEdge(wall.backEdge, hover);\n\t\t}\n\t}\n\n\t/** */\n\tdrawWallLabels(wall)\n\t{\n\t\t// we'll just draw the shorter label... idk\n\t\tif (wall.backEdge && wall.frontEdge)\n\t\t{\n\t\t\tif (wall.backEdge.interiorDistance() < wall.frontEdge.interiorDistance())\n\t\t\t{\n\t\t\t\tthis.drawEdgeLabel(wall.backEdge);\n\t\t\t\tthis.drawEdgeLabelExterior(wall.backEdge);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.drawEdgeLabel(wall.frontEdge);\n\t\t\t\tthis.drawEdgeLabelExterior(wall.frontEdge);\n\t\t\t}\n\t\t}\n\t\telse if (wall.backEdge)\n\t\t{\n\t\t\tthis.drawEdgeLabel(wall.backEdge);\n\t\t\tthis.drawEdgeLabelExterior(wall.backEdge);\n\t\t}\n\t\telse if (wall.frontEdge)\n\t\t{\n\t\t\tthis.drawEdgeLabel(wall.frontEdge);\n\t\t\tthis.drawEdgeLabelExterior(wall.frontEdge);\n\t\t}\n\t\tthis.drawWallLabelsMiddle(wall);\n\t}\n\n\tdrawWallLabelsMiddle(wall)\n\t{\n\t\t\tvar pos = wall.wallCenter();\n\t\t\tvar length = wall.wallLength();\n\t\t\tif (length < 60)\n\t\t\t{\n\t\t\t\t// dont draw labels on walls this short\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.drawTextLabel(`m:${Dimensioning.cmToMeasure(length)}` ,this.viewmodel.convertX(pos.x),this.viewmodel.convertY(pos.y));\n\t}\n\n\t/** */\n\tdrawEdgeLabelExterior(edge)\n\t{\n\t\tvar pos = edge.exteriorCenter();\n\t\tvar length = edge.exteriorDistance();\n\t\tif (length < 60)\n\t\t{\n\t\t\t// dont draw labels on walls this short\n\t\t\treturn;\n\t\t}\n\t\tthis.drawTextLabel(`e:${Dimensioning.cmToMeasure(length)}` ,this.viewmodel.convertX(pos.x),this.viewmodel.convertY(pos.y+40));\n\t}\n\n\t/** */\n\tdrawEdgeLabel(edge)\n\t{\n\t\tvar pos = edge.interiorCenter();\n\t\tvar length = edge.interiorDistance();\n\t\tif (length < 60)\n\t\t{\n\t\t\t// dont draw labels on walls this short\n\t\t\treturn;\n\t\t}\n\t\tthis.drawTextLabel(`i:${Dimensioning.cmToMeasure(length)}` ,this.viewmodel.convertX(pos.x),this.viewmodel.convertY(pos.y-40));\n\t}\n\n\tdrawTextLabel(label, x, y, textcolor='#000000', strokecolor='#ffffff', style='normal')\n\t{\n\t\tthis.context.font = `${style} 12px Arial`;\n\t\tthis.context.fillStyle = textcolor;\n\t\tthis.context.textBaseline = 'middle';\n\t\tthis.context.textAlign = 'center';\n\t\tthis.context.strokeStyle = strokecolor;\n\t\tthis.context.lineWidth = 4;\n\t\tthis.context.strokeText(label,x,y);\n\t\tthis.context.fillText(label,x,y);\n\t}\n\n\t/** */\n\tdrawEdge(edge, hover)\n\t{\n\t\tvar color = edgeColor;\n\t\tif (hover && this.viewmodel.mode == floorplannerModes.DELETE)\n\t\t{\n\t\t\tcolor = deleteColor;\n\t\t}\n\t\telse if (hover)\n\t\t{\n\t\t\tcolor = edgeColorHover;\n\t\t}\n\t\tvar corners = edge.corners();\n\n\t\tvar scope = this;\n\t\tthis.drawPolygon(Utils.map(corners, function (corner) {return scope.viewmodel.convertX(corner.x);}),Utils.map(corners, function (corner) {return scope.viewmodel.convertY(corner.y);}),false,null,true,color,edgeWidth);\n\t}\n\n\t/** */\n\tdrawRoom(room)\n\t{\n\t\tvar scope = this;\n\t\tthis.drawPolygon(Utils.map(room.corners, (corner) => {return scope.viewmodel.convertX(corner.x);}),Utils.map(room.corners, (corner) =>  {return scope.viewmodel.convertY(corner.y);}), true,roomColor);\n\t\tthis.drawTextLabel(Dimensioning.cmToMeasure(room.area, 2)+String.fromCharCode(178), this.viewmodel.convertX(room.areaCenter.x), this.viewmodel.convertY(room.areaCenter.y), '#0000FF', '#00FF0000', 'bold');\n\t\tthis.drawTextLabel(room.name, this.viewmodel.convertX(room.areaCenter.x), this.viewmodel.convertY(room.areaCenter.y+30), '#363636', '#00FF0000', 'bold italic');\n\t}\n\n\t/** */\n\tdrawCorner(corner)\n\t{\n\t\tvar cornerX = this.viewmodel.convertX(corner.x);\n\t\tvar cornerY = this.viewmodel.convertY(corner.y);\n\t\tvar hover = (corner === this.viewmodel.activeCorner);\n\t\tvar color = cornerColor;\n\t\tif (hover && this.viewmodel.mode == floorplannerModes.DELETE)\n\t\t{\n\t\t\tcolor = deleteColor;\n\t\t}\n\t\telse if (hover)\n\t\t{\n\t\t\tcolor = cornerColorHover;\n\t\t}\n\t\tthis.drawCircle(cornerX, cornerY, hover ? cornerRadiusHover : cornerRadius,color);\n\t\t// let cx = Dimensioning.roundOff(corner.x, 10);\n\t\t// let cy = Dimensioning.roundOff(corner.y, 10);\n\t\t// var cornerLabel = `(${cx}, ${cy})`;\n\t\t// this.drawTextLabel(cornerLabel, cornerX, cornerY);\n\t}\n\n\t/** */\n\tdrawTarget(x, y, lastNode)\n\t{\n\t\tthis.drawCircle(this.viewmodel.convertX(x),this.viewmodel.convertY(y),cornerRadiusHover,cornerColorHover);\n\t\tif (this.viewmodel.lastNode)\n\t\t{\n\t\t\tthis.drawLine(this.viewmodel.convertX(lastNode.x),this.viewmodel.convertY(lastNode.y),this.viewmodel.convertX(x),this.viewmodel.convertY(y),wallWidthHover,wallColorHover);\n\t\t}\n\t}\n\n\t/** */\n\tdrawLine(startX, startY, endX, endY, width, color)\n\t{\n\t\t// width is an integer\n\t\t// color is a hex string, i.e. #ff0000\n\t\tthis.context.beginPath();\n\t\tthis.context.moveTo(startX, startY);\n\t\tthis.context.lineTo(endX, endY);\n\t\tthis.context.lineWidth = width;\n\t\tthis.context.strokeStyle = color;\n\t\tthis.context.stroke();\n\t}\n\n\t/** */\n\tdrawPolygon(xArr, yArr, fill, fillColor, stroke, strokeColor, strokeWidth)\n\t{\n\t\t// fillColor is a hex string, i.e. #ff0000\n\t\tfill = fill || false;\n\t\tstroke = stroke || false;\n\t\tthis.context.beginPath();\n\t\tthis.context.moveTo(xArr[0], yArr[0]);\n\t\tfor (var i = 1; i < xArr.length; i++)\n\t\t{\n\t\t\tthis.context.lineTo(xArr[i], yArr[i]);\n\t\t}\n\t\tthis.context.closePath();\n\t\tif (fill)\n\t\t{\n\t\t\tthis.context.fillStyle = fillColor;\n\t\t\tthis.context.fill();\n\t\t}\n\t\tif (stroke)\n\t\t{\n\t\t\tthis.context.lineWidth = strokeWidth;\n\t\t\tthis.context.strokeStyle = strokeColor;\n\t\t\tthis.context.stroke();\n\t\t}\n\t}\n\n\t/** */\n\tdrawCircle(centerX, centerY, radius, fillColor)\n\t{\n\t\tthis.context.beginPath();\n\t\tthis.context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n\t\tthis.context.fillStyle = fillColor;\n\t\tthis.context.fill();\n\t}\n\n\t/** returns n where -gridSize/2 < n <= gridSize/2  */\n\tcalculateGridOffset(n)\n\t{\n\t\tif (n >= 0)\n\t\t{\n\t\t\treturn (n + gridSpacing / 2.0) % gridSpacing - gridSpacing / 2.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (n - gridSpacing / 2.0) % gridSpacing + gridSpacing / 2.0;\n\t\t}\n\t}\n\n\t/** */\n\tdrawGrid()\n\t{\n\t\tvar offsetX = this.calculateGridOffset(-this.viewmodel.originX);\n\t\tvar offsetY = this.calculateGridOffset(-this.viewmodel.originY);\n\t\tvar width = this.canvasElement.width;\n\t\tvar height = this.canvasElement.height;\n\t\tfor (var x = 0; x <= (width / gridSpacing); x++)\n\t\t{\n\t\t\tthis.drawLine(gridSpacing * x + offsetX, 0, gridSpacing * x + offsetX, height, gridWidth, gridColor);\n\t\t}\n\t\tfor (var y = 0; y <= (height / gridSpacing); y++)\n\t\t{\n\t\t\tthis.drawLine(0, gridSpacing * y + offsetY, width, gridSpacing * y + offsetY, gridWidth, gridColor);\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/floorplanner/floorplanner_view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "floorplannerModes",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~floorplannerModes",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{floorplannerModes}",
    "description": "",
    "lineNumber": 10,
    "type": {
      "types": [
        "{\"MOVE\": *, \"DRAW\": number, \"DELETE\": number}"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "variable",
    "name": "gridSpacing",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~gridSpacing",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{gridSpacing}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "variable",
    "name": "gridWidth",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~gridWidth",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{gridWidth}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "variable",
    "name": "gridColor",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~gridColor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{gridColor}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "variable",
    "name": "roomColor",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~roomColor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{roomColor}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "variable",
    "name": "wallWidth",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~wallWidth",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{wallWidth}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "variable",
    "name": "wallWidthHover",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~wallWidthHover",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{wallWidthHover}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "variable",
    "name": "wallColor",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~wallColor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{wallColor}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "variable",
    "name": "wallColorHover",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~wallColorHover",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{wallColorHover}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "variable",
    "name": "edgeColor",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~edgeColor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{edgeColor}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "variable",
    "name": "edgeColorHover",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~edgeColorHover",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{edgeColorHover}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "variable",
    "name": "edgeWidth",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~edgeWidth",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{edgeWidth}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "variable",
    "name": "deleteColor",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~deleteColor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{deleteColor}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "variable",
    "name": "cornerRadius",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~cornerRadius",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{cornerRadius}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "variable",
    "name": "cornerRadiusHover",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~cornerRadiusHover",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{cornerRadiusHover}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "variable",
    "name": "cornerColor",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~cornerColor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{cornerColor}",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "variable",
    "name": "cornerColorHover",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~cornerColorHover",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{cornerColorHover}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "class",
    "name": "FloorplannerView2D",
    "memberof": "scripts/floorplanner/floorplanner_view.js",
    "static": true,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/floorplanner/floorplanner_view.js",
    "importStyle": "{FloorplannerView2D}",
    "description": "The View to be used by a Floorplanner to render in/interact with.",
    "lineNumber": 40,
    "interface": false
  },
  {
    "__docId__": 393,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "canvasElement",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#canvasElement",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "member",
    "name": "canvas",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "context",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#context",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 398,
    "kind": "member",
    "name": "viewmodel",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#viewmodel",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 399,
    "kind": "member",
    "name": "_carbonsheet",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#_carbonsheet",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 400,
    "kind": "get",
    "name": "carbonSheet",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#carbonSheet",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "handleWindowResize",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#handleWindowResize",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "params": [],
    "return": null
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "draw",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#draw",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "params": [],
    "return": null
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "drawOriginCrossHair",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawOriginCrossHair",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "drawWall",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawWall",
    "access": "public",
    "description": "",
    "lineNumber": 126,
    "params": [
      {
        "name": "wall",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "drawWallLabels",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawWallLabels",
    "access": "public",
    "description": "",
    "lineNumber": 150,
    "params": [
      {
        "name": "wall",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "drawWallLabelsMiddle",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawWallLabelsMiddle",
    "access": "public",
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "params": [
      {
        "name": "wall",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 407,
    "kind": "method",
    "name": "drawEdgeLabelExterior",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawEdgeLabelExterior",
    "access": "public",
    "description": "",
    "lineNumber": 192,
    "params": [
      {
        "name": "edge",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 408,
    "kind": "method",
    "name": "drawEdgeLabel",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawEdgeLabel",
    "access": "public",
    "description": "",
    "lineNumber": 205,
    "params": [
      {
        "name": "edge",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 409,
    "kind": "method",
    "name": "drawTextLabel",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawTextLabel",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [
      {
        "name": "label",
        "types": [
          "*"
        ]
      },
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "textcolor",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "#000000",
        "defaultValue": "#000000"
      },
      {
        "name": "strokecolor",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "#ffffff",
        "defaultValue": "#ffffff"
      },
      {
        "name": "style",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "normal",
        "defaultValue": "normal"
      }
    ],
    "return": null
  },
  {
    "__docId__": 410,
    "kind": "method",
    "name": "drawEdge",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawEdge",
    "access": "public",
    "description": "",
    "lineNumber": 230,
    "params": [
      {
        "name": "edge",
        "types": [
          "*"
        ]
      },
      {
        "name": "hover",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "drawRoom",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawRoom",
    "access": "public",
    "description": "",
    "lineNumber": 248,
    "params": [
      {
        "name": "room",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 412,
    "kind": "method",
    "name": "drawCorner",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawCorner",
    "access": "public",
    "description": "",
    "lineNumber": 257,
    "params": [
      {
        "name": "corner",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 413,
    "kind": "method",
    "name": "drawTarget",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawTarget",
    "access": "public",
    "description": "",
    "lineNumber": 279,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "lastNode",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "drawLine",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawLine",
    "access": "public",
    "description": "",
    "lineNumber": 289,
    "params": [
      {
        "name": "startX",
        "types": [
          "*"
        ]
      },
      {
        "name": "startY",
        "types": [
          "*"
        ]
      },
      {
        "name": "endX",
        "types": [
          "*"
        ]
      },
      {
        "name": "endY",
        "types": [
          "*"
        ]
      },
      {
        "name": "width",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 415,
    "kind": "method",
    "name": "drawPolygon",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawPolygon",
    "access": "public",
    "description": "",
    "lineNumber": 302,
    "params": [
      {
        "name": "xArr",
        "types": [
          "*"
        ]
      },
      {
        "name": "yArr",
        "types": [
          "*"
        ]
      },
      {
        "name": "fill",
        "types": [
          "*"
        ]
      },
      {
        "name": "fillColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "stroke",
        "types": [
          "*"
        ]
      },
      {
        "name": "strokeColor",
        "types": [
          "*"
        ]
      },
      {
        "name": "strokeWidth",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 416,
    "kind": "method",
    "name": "drawCircle",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawCircle",
    "access": "public",
    "description": "",
    "lineNumber": 328,
    "params": [
      {
        "name": "centerX",
        "types": [
          "*"
        ]
      },
      {
        "name": "centerY",
        "types": [
          "*"
        ]
      },
      {
        "name": "radius",
        "types": [
          "*"
        ]
      },
      {
        "name": "fillColor",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 417,
    "kind": "method",
    "name": "calculateGridOffset",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#calculateGridOffset",
    "access": "public",
    "description": "returns n where -gridSize/2 < n <= gridSize/2",
    "lineNumber": 337,
    "params": [
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "method",
    "name": "drawGrid",
    "memberof": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/floorplanner/floorplanner_view.js~FloorplannerView2D#drawGrid",
    "access": "public",
    "description": "",
    "lineNumber": 350,
    "params": [],
    "return": null
  },
  {
    "__docId__": 419,
    "kind": "file",
    "name": "scripts/items/factory.js",
    "content": "import {Item} from './item.js';\nimport {FloorItem} from './floor_item.js';\nimport {WallItem} from './wall_item.js';\nimport {InWallItem} from './in_wall_item.js';\nimport {InWallFloorItem} from './in_wall_floor_item.js';\nimport {OnFloorItem} from './on_floor_item.js';\nimport {WallFloorItem} from './wall_floor_item.js';\nimport {RoofItem} from './roof_item.js';\n\nexport const item_types = {1: FloorItem, 2: WallItem, 3: InWallItem, 7: InWallFloorItem, 8: OnFloorItem, 9: WallFloorItem, 0: Item, 4: RoofItem};\n\n/** Factory class to create items. */\nexport class Factory\n{\n\t/** Gets the class for the specified item. */\n\tstatic getClass(itemType)\n\t{\n\t\treturn item_types[itemType];\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 420,
    "kind": "variable",
    "name": "item_types",
    "memberof": "scripts/items/factory.js",
    "static": true,
    "longname": "scripts/items/factory.js~item_types",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/factory.js",
    "importStyle": "{item_types}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"1\": *, \"2\": *, \"3\": *, \"7\": *, \"8\": *, \"9\": *, \"0\": *, \"4\": *}"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "class",
    "name": "Factory",
    "memberof": "scripts/items/factory.js",
    "static": true,
    "longname": "scripts/items/factory.js~Factory",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/factory.js",
    "importStyle": "{Factory}",
    "description": "Factory class to create items.",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "getClass",
    "memberof": "scripts/items/factory.js~Factory",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/items/factory.js~Factory.getClass",
    "access": "public",
    "description": "Gets the class for the specified item.",
    "lineNumber": 16,
    "params": [
      {
        "name": "itemType",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "scripts/items/floor_item.js",
    "content": "import {Vector2} from 'three';\nimport {Item} from './item.js';\nimport {Utils} from '../core/utils.js';\n\n/**\n * A Floor Item is an entity to be placed related to a floor.\n */\nexport class FloorItem extends Item\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t}\n\n\t/** */\n\tplaceInRoom()\n\t{\n\t\tif (!this.position_set)\n\t\t{\n\t\t\tvar center = this.model.floorplan.getCenter();\n\t\t\tthis.position.x = center.x;\n\t\t\tthis.position.z = center.z;\n\t\t\tthis.position.y = 0.5 * (this.geometry.boundingBox.max.y - this.geometry.boundingBox.min.y);\n\t\t}\n\t}\n\n\t/** Take action after a resize */\n\tresized()\n\t{\n\t\tthis.position.y = this.halfSize.y;\n\t}\n\n\t/** */\n\tmoveToPosition(vec3)\n\t{\n\t\t// keeps the position in the room and on the floor\n\t\tif (!this.isValidPosition(vec3))\n\t\t{\n\t\t\tthis.showError(vec3);\n\t\t\treturn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.hideError();\n\t\t\tvec3.y = this.position.y; // keep it on the floor!\n//\t\t\tthis.position.copy(vec3);\n\t\t\tsuper.moveToPosition(vec3);\n\t\t}\n\t}\n\n\t/** */\n\tisValidPosition(vec3)\n\t{\n\t\tvar corners = this.getCorners('x', 'z', vec3);\n\t\t// check if we are in a room\n\t\tvar rooms = this.model.floorplan.getRooms();\n\t\tvar isInARoom = false;\n\t\tfor (var i = 0; i < rooms.length; i++)\n\t\t{\n\t\t\tif (Utils.pointInPolygon(new Vector2(vec3.x, vec3.z), rooms[i].interiorCorners) && !Utils.polygonPolygonIntersect(corners, rooms[i].interiorCorners))\n\t\t\t{\n\t\t\t\tisInARoom = true;\n\t\t\t}\n\t\t}\n\t\tif (!isInARoom)\n\t\t{\n\t\t\t//We do not want to check if the object is in room or not\n\t\t\t//It is upto the user to place it anywhere he/she wants however\n//\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\n\t\t// check if we are outside all other objects\n\t\t/*\n      if (this.obstructFloorMoves) {\n          var objects = this.model.items.getItems();\n          for (var i = 0; i < objects.length; i++) {\n              if (objects[i] === this || !objects[i].obstructFloorMoves) {\n                  continue;\n              }\n              if (!utils.polygonOutsidePolygon(corners, objects[i].getCorners('x', 'z')) ||\n                  utils.polygonPolygonIntersect(corners, objects[i].getCorners('x', 'z'))) {\n                  //console.log('object not outside other objects');\n                  return false;\n              }\n          }\n      }*/\n\t\treturn true;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/floor_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "class",
    "name": "FloorItem",
    "memberof": "scripts/items/floor_item.js",
    "static": true,
    "longname": "scripts/items/floor_item.js~FloorItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/floor_item.js",
    "importStyle": "{FloorItem}",
    "description": "A Floor Item is an entity to be placed related to a floor.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "scripts/items/item.js~Item"
    ]
  },
  {
    "__docId__": 425,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/floor_item.js~FloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/floor_item.js~FloorItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "placeInRoom",
    "memberof": "scripts/items/floor_item.js~FloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/floor_item.js~FloorItem#placeInRoom",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [],
    "return": null
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "resized",
    "memberof": "scripts/items/floor_item.js~FloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/floor_item.js~FloorItem#resized",
    "access": "public",
    "description": "Take action after a resize",
    "lineNumber": 28,
    "params": [],
    "return": null
  },
  {
    "__docId__": 428,
    "kind": "method",
    "name": "moveToPosition",
    "memberof": "scripts/items/floor_item.js~FloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/floor_item.js~FloorItem#moveToPosition",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 429,
    "kind": "method",
    "name": "isValidPosition",
    "memberof": "scripts/items/floor_item.js~FloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/floor_item.js~FloorItem#isValidPosition",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "file",
    "name": "scripts/items/in_wall_floor_item.js",
    "content": "/// <reference path=\"../../lib/three.d.ts\" />\n/// <reference path=\"../model/model.ts\" />\n/// <reference path=\"in_wall_item.ts\" />\n/// <reference path=\"metadata.ts\" />\nimport {InWallItem} from './in_wall_item.js';\n\n/** */\nexport class InWallFloorItem extends InWallItem\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t\tthis.boundToFloor = true;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/in_wall_floor_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 431,
    "kind": "class",
    "name": "InWallFloorItem",
    "memberof": "scripts/items/in_wall_floor_item.js",
    "static": true,
    "longname": "scripts/items/in_wall_floor_item.js~InWallFloorItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/in_wall_floor_item.js",
    "importStyle": "{InWallFloorItem}",
    "description": "",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "scripts/items/in_wall_item.js~InWallItem"
    ]
  },
  {
    "__docId__": 432,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/in_wall_floor_item.js~InWallFloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/in_wall_floor_item.js~InWallFloorItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 433,
    "kind": "member",
    "name": "boundToFloor",
    "memberof": "scripts/items/in_wall_floor_item.js~InWallFloorItem",
    "static": false,
    "longname": "scripts/items/in_wall_floor_item.js~InWallFloorItem#boundToFloor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "file",
    "name": "scripts/items/in_wall_item.js",
    "content": "/// <reference path=\"../../lib/three.d.ts\" />\n/// <reference path=\"../model/model.ts\" />\n/// <reference path=\"wall_item.ts\" />\n/// <reference path=\"metadata.ts\" />\nimport {WallItem} from './wall_item.js';\n/** */\nexport class InWallItem extends WallItem\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t\tthis.addToWall = true;\n\t}\n\n\t/** */\n\tgetWallOffset()\n\t{\n\t\t// fudge factor so it saves to the right wall\n\t\treturn -this.currentWallEdge.offset + 0.5;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/in_wall_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 435,
    "kind": "class",
    "name": "InWallItem",
    "memberof": "scripts/items/in_wall_item.js",
    "static": true,
    "longname": "scripts/items/in_wall_item.js~InWallItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/in_wall_item.js",
    "importStyle": "{InWallItem}",
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "scripts/items/wall_item.js~WallItem"
    ]
  },
  {
    "__docId__": 436,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/in_wall_item.js~InWallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/in_wall_item.js~InWallItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "addToWall",
    "memberof": "scripts/items/in_wall_item.js~InWallItem",
    "static": false,
    "longname": "scripts/items/in_wall_item.js~InWallItem#addToWall",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 438,
    "kind": "method",
    "name": "getWallOffset",
    "memberof": "scripts/items/in_wall_item.js~InWallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/in_wall_item.js~InWallItem#getWallOffset",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "scripts/items/item.js",
    "content": "import {Mesh, Matrix4, Vector2, Vector3, BoxGeometry, BoxHelper, Box3, MeshBasicMaterial, MeshStandardMaterial, AdditiveBlending} from 'three';\nimport {CanvasTexture, PlaneGeometry, DoubleSide} from 'three';\nimport {Color} from 'three';\nimport {Utils} from '../core/utils.js';\nimport {Dimensioning} from '../core/dimensioning.js';\n\n/**\n * An Item is an abstract entity for all things placed in the scene, e.g. at\n * walls or on the floor.\n */\nexport class Item extends Mesh\n{\n\t/**\n\t * Constructs an item.\n\t *\n\t * @param model\n\t *            TODO\n\t * @param metadata\n\t *            TODO\n\t * @param geometry\n\t *            TODO\n\t * @param material\n\t *            TODO\n\t * @param position\n\t *            TODO\n\t * @param rotation\n\t *            TODO\n\t * @param scale\n\t *            TODO\n\t */\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper();\n\n\t\tthis.model = model;\n\t\tthis.metadata = metadata;\n\n\t\t/** */\n\t\tthis.errorGlow = new Mesh();\n\t\t/** */\n\t\tthis.hover = false;\n\t\t/** */\n\t\tthis.selected = false;\n\t\t/** */\n\t\tthis.highlighted = false;\n\t\t/** */\n\t\tthis.error = false;\n\t\t/** */\n\t\tthis.emissiveColor = 0x444444;\n\t\t/** Does this object affect other floor items */\n\t\tthis.obstructFloorMoves = true;\n\t\t/** */\n\t\tthis.position_set = false;\n\t\t/** Show rotate option in context menu */\n\t\tthis.allowRotate = true;\n\t\t/** */\n\t\tthis.fixed = false;\n\t\t/** dragging */\n\t\tthis.dragOffset = new Vector3();\n\t\t/** */\n\t\tthis.halfSize = new Vector3(0,0,0);\n\t\tthis.bhelper = null;\n\n\t\tthis.scene = this.model.scene;\n\n\t\tif(!isgltf)\n\t\t{\n\t\t\t\tthis.geometry = geometry;\n\t\t\t\tthis.material = material;\n\t\t\t\t// center in its boundingbox\n\t\t\t\tthis.geometry.computeBoundingBox();\n\t\t\t\tthis.geometry.applyMatrix(new Matrix4().makeTranslation(- 0.5 * (this.geometry.boundingBox.max.x + this.geometry.boundingBox.min.x),- 0.5 * (this.geometry.boundingBox.max.y + this.geometry.boundingBox.min.y),- 0.5 * (this.geometry.boundingBox.max.z + this.geometry.boundingBox.min.z)));\n\t\t\t\tthis.geometry.computeBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\tvar objectBox = new Box3();\n\t\t\t\tobjectBox.setFromObject(geometry);\n\t\t\t\tvar hsize = objectBox.max.clone().sub(objectBox.min).multiplyScalar(0.5);\n\t\t\t\tthis.geometry = new BoxGeometry(hsize.x*0.5, hsize.y*0.5, hsize.z*0.5);\n\t\t\t\tthis.material =  new MeshStandardMaterial({color: 0x000000, wireframe: true, visible:false});\n\t\t\t\tthis.geometry.computeBoundingBox();\n\t\t\t\tthis.add(geometry);\n\t\t}\n\n\t\tif(!this.material.color)\n\t\t{\n\t\t\tthis.material.color = new Color('#FFFFFF');\n\t\t}\n\t\tthis.wirematerial = new MeshBasicMaterial({color: 0x000000, wireframe: true});\n\n\t\tthis.errorColor = 0xff0000;\n\n\t\tthis.resizable = metadata.resizable;\n\n\t\tthis.castShadow = true;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.originalmaterial = material;\n\t\tthis.texture = this.material.texture;\n\n\t\tthis.position_set = false;\n\t\tif (position)\n\t\t{\n\t\t\tthis.position.copy(position);\n\t\t\tthis.position_set = true;\n\t\t}\n\n\t\tthis.halfSize = this.objectHalfSize();\n\t\tthis.canvasWH = document.createElement('canvas');\n\t\tthis.canvasWH.width = this.getWidth()+1.0;\n\t\tthis.canvasWH.height = this.getHeight()+1.0;\n\n\t\tthis.canvascontextWH = this.canvasWH.getContext('2d');\n\t\tthis.canvasTextureWH = new CanvasTexture(this.canvasWH);\n\t\tthis.canvasMaterialWH = new MeshBasicMaterial({map:this.canvasTextureWH, side: DoubleSide, transparent:true});\n\t\tthis.canvasPlaneWH = new Mesh(new PlaneGeometry(this.getWidth(), this.getHeight(), 1, 1), this.canvasMaterialWH);\n\t\tthis.canvasPlaneWH.scale.set(1, 1, 1);\n\t\tthis.canvasPlaneWH.position.set(0, 0, this.getDepth()*0.5 + 0.3);\n\n\t\tthis.canvasWD = document.createElement('canvas');\n\t\tthis.canvasWD.width = this.getWidth()+1.0;\n\t\tthis.canvasWD.height = this.getDepth()+1.0;\n\n\t\tthis.canvascontextWD = this.canvasWD.getContext('2d');\n\t\tthis.canvasTextureWD = new CanvasTexture(this.canvasWD);\n\t\tthis.canvasMaterialWD = new MeshBasicMaterial({map:this.canvasTextureWD, side: DoubleSide, transparent:true});\n\t\tthis.canvasPlaneWD = new Mesh(new PlaneGeometry(this.getWidth(), this.getDepth(), 1, 1), this.canvasMaterialWD);\n\t\tthis.canvasPlaneWD.rotateX(-Math.PI * 0.5);\n\t\tthis.canvasPlaneWD.scale.set(1, 1, 1);\n\t\tthis.canvasPlaneWD.position.set(0, this.getHeight()*0.5 + 0.3, 0);\n\t\tthis.canvasPlaneWH.visible = this.canvasPlaneWD.visible = false;\n\n    this.add(this.canvasPlaneWH);\n\t\tthis.add(this.canvasPlaneWD);\n\t\tthis.resizeProportionally = true;\n\n\t\tif (rotation)\n\t\t{\n\t\t\tthis.rotation.y = rotation;\n\t\t}\n\n\t\tif (scale != null)\n\t\t{\n\t\t\tthis.setScale(scale.x, scale.y, scale.z);\n\t\t}\n\n\t\tif(this.metadata.materialColors)\n\t\t{\n\t\t\tif(this.metadata.materialColors.length)\n\t\t\t{\n\t\t\t\tif(this.material.length)\n\t\t\t\t{\n\t\t\t\t\tfor (var i=0;i<this.metadata.materialColors.length;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.material[i].color = new Color(this.metadata.materialColors[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.material.color = new Color(this.metadata.materialColors[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tupdateCanvasTexture(canvas, context, material, w, h, wPrefix, hPrefix)\n\t{\n\t\tif(w < 1 || h < 1)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\twPrefix = (wPrefix) ? wPrefix: 'w:';\n\t\thPrefix = (hPrefix) ? hPrefix: 'h:';\n\n\t\tw *= 3;\n\t\th *= 3;\n\n\t\tcanvas.width = w;\n\t\tcanvas.height = h;\n\t\tcanvas.style.letterSpacing = '-22.5px';\n\n\t\tcontext.font = 'bold 45pt Courier';\n\t\tcontext.fillStyle = '#DADADA99';\n\t\tcontext.fillRect(0, 0, w, h);\n\t\tcontext.textAlign = 'center';\n\t\tcontext.textBaseline = 'middle';\n\n\t\tcontext.lineWidth = 3;\n\t\tcontext.setLineDash([1, 2]);\n\t\tcontext.strokeStyle = '#000000';\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(0,h*0.5);\n\t\tcontext.lineTo(w,h*0.5);\n\t\tcontext.closePath();\n\t\tcontext.stroke();\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(w * 0.125, 0);\n\t\tcontext.lineTo(w * 0.125, h);\n\t\tcontext.closePath();\n\t\tcontext.stroke();\n\n\t\tcontext.lineWidth = 1;\n\t\tcontext.setLineDash([0]);\n\t\tcontext.strokeStyle = '#0000FF';\n\t\tcontext.strokeText(wPrefix+Dimensioning.cmToMeasure(w/3), w*0.5, h*0.5);\n\n\t\tcontext.fillStyle = '#FF0000';\n\t\tcontext.fillText(wPrefix+Dimensioning.cmToMeasure(w/3), w*0.5, h*0.5);\n\n\t\tcontext.translate(w*0.125, 0);\n\t\tcontext.rotate(Math.PI * 0.5);\n\t\tcontext.strokeStyle = '#0000FF';\n\t\tcontext.strokeText(hPrefix+Dimensioning.cmToMeasure(h/3), h*0.5, 0);\n\n\t\tcontext.fillStyle = '#FF0000';\n\t\tcontext.fillText(hPrefix+Dimensioning.cmToMeasure(h/3), h*0.5, 0);\n\t\tcontext.restore();\n\t\tmaterial.map.needsUpdate = true;\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tthis.material = (flag)? this.wirematerial : this.originalmaterial;\n\t}\n\n\t/** */\n\tremove()\n\t{\n\t\tthis.scene.removeItem(this);\n\t}\n\n\t/** */\n\tresize(height, width, depth)\n\t{\n\t\tvar x = width / this.getWidth();\n\t\tvar y = height / this.getHeight();\n\t\tvar z = depth / this.getDepth();\n\n\t\tif(this.resizeProportionally)\n\t\t{\n\t\t\tif(Math.abs(width - this.getWidth()) > 0.1)\n\t\t\t{\n\t\t\t\tthis.setScale(x, x, x);\n\t\t\t}\n\t\t\telse if(Math.abs(height - this.getHeight()) > 0.1)\n\t\t\t{\n\t\t\t\tthis.setScale(y, y, y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setScale(z, z, z);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.setScale(x, y, z);\n\t}\n\n\tgetMaterial()\n\t{\n\t\treturn this.material;\n\t}\n\n\tgetMaterialColor(index)\n\t{\n\t\tindex = (index)? index : 0;\n\t\tif(this.material.length)\n\t\t{\n\t\t\treturn '#'+this.material[index].color.getHexString();\n\t\t}\n\t\treturn '#'+this.material.color.getHexString();\n\t}\n\n\t// Always send an hexadecimal string value for color - ex. '#FFFFFF'\n\tsetMaterialColor(color, index)\n\t{\n\t\tvar c = new Color(color);\n\t\tif(this.material.length)\n\t\t{\n\t\t\tindex = (index) ? index : 0;\n\t\t\tthis.material[index].color = c;\n\t\t\treturn;\n\t\t}\n\t\tthis.material.color = c;\n\t}\n\n\t/** */\n\tsetScale(x, y, z)\n\t{\n\t\tvar scaleVec = new Vector3(x, y, z);\n\t\tthis.halfSize.multiply(scaleVec);\n\t\tscaleVec.multiply(this.scale);\n\t\tthis.scale.set(scaleVec.x, scaleVec.y, scaleVec.z);\n\t\tthis.resized();\n\t\tif(this.bhelper)\n\t\t{\n\t\t\tthis.bhelper.update();\n\t\t}\n\n//\t\tthis.updateCanvasTexture(canvas, context, material, w, h);\n\t\tthis.updateCanvasTexture(this.canvasWH, this.canvascontextWH, this.canvasMaterialWH, this.getWidth(), this.getHeight(), 'w:', 'h:');\n\t\tthis.updateCanvasTexture(this.canvasWD, this.canvascontextWD, this.canvasMaterialWD, this.getWidth(), this.getDepth(), 'w:', 'd:');\n\n\t\tthis.scene.needsUpdate = true;\n\n\t}\n\n\tgetProportionalResize()\n\t{\n\t\treturn this.resizeProportionally;\n\t}\n\n\tsetProportionalResize(flag)\n\t{\n\t\tthis.resizeProportionally = flag;\n\t}\n\n\t/** */\n\tsetFixed(fixed)\n\t{\n\t\tthis.fixed = fixed;\n\t}\n\n\t/** Subclass can define to take action after a resize. */\n\tresized()\n\t{\n\n\t}\n\n\t/** */\n\tgetHeight()\n\t{\n\t\treturn this.halfSize.y * 2.0;\n\t}\n\n\t/** */\n\tgetWidth()\n\t{\n\t\treturn this.halfSize.x * 2.0;\n\t}\n\n\t/** */\n\tgetDepth()\n\t{\n\t\treturn this.halfSize.z * 2.0;\n\t}\n\n\t/** */\n\tplaceInRoom()\n\t{\n\n\t}\n\n\t/** */\n\tinitObject()\n\t{\n\t\tthis.placeInRoom();\n\t\t// An ugly hack to increase the size of gltf models\n\t\tif(this.halfSize.x < 1.0)\n\t\t{\n\t\t\tthis.resize(this.getHeight()*300, this.getWidth()*300, this.getDepth()*300);\n\t\t}\n\t\tthis.bhelper = new BoxHelper(this);\n\t\tthis.scene.add(this.bhelper);\n\t\tthis.bhelper.visible = false;\n\t\t// select and stuff\n\t\tthis.scene.needsUpdate = true;\n\n\t}\n\n\t/** */\n\tremoved()\n\t{\n\t}\n\n\t/** on is a bool */\n\tupdateHighlight()\n\t{\n\t\tvar on = this.hover || this.selected;\n\t\tthis.highlighted = on;\n\t\tvar hex = on ? this.emissiveColor : 0x000000;\n\t\tif(this.material)\n\t\t{\n\t\t\tif(this.material.length)\n\t\t\t{\n\t\t\t\tthis.material.forEach((material) => {\n\t\t\t\t\t// TODO_Ekki emissive doesn't exist anymore?\n\t\t\t\t\tmaterial.emissive.setHex(hex);\n\t\t\t\t\tthis.material.emissive = new Color(hex);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.material.emissive.setHex(hex);\n\t\t\t\tthis.material.emissive = new Color(hex);\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/** */\n\tmouseOver()\n\t{\n\t\tthis.hover = true;\n\t\tthis.updateHighlight();\n\t}\n\n\t/** */\n\tmouseOff()\n\t{\n\t\tthis.hover = false;\n\t\tthis.updateHighlight();\n\t}\n\n\t/** */\n\tsetSelected()\n\t{\n\t\tthis.setScale(1, 1, 1);\n\t\tthis.selected = true;\n\t\tthis.bhelper.visible = true;\n\t\tthis.canvasPlaneWH.visible = this.canvasPlaneWD.visible = true;\n\t\tthis.updateHighlight();\n\t}\n\n\t/** */\n\tsetUnselected()\n\t{\n\t\tthis.selected = false;\n\t\tthis.bhelper.visible = false;\n\t\tthis.canvasPlaneWH.visible = this.canvasPlaneWD.visible = false;\n\t\tthis.updateHighlight();\n\t}\n\n\t/** intersection has attributes point (vec3) and object (THREE.Mesh) */\n\tclickPressed(intersection)\n\t{\n\t\tthis.dragOffset.copy(intersection.point).sub(this.position);\n\t}\n\n\t/** */\n\tclickDragged(intersection)\n\t{\n\t\tif (intersection)\n\t\t{\n\t\t\tthis.moveToPosition(intersection.point.sub(this.dragOffset), intersection);\n\t\t}\n\t}\n\n\t/** */\n\trotate(intersection)\n\t{\n\t\tif (intersection)\n\t\t{\n\t\t\tvar angle = Utils.angle(new Vector2(0, 1), new Vector2(intersection.point.x - this.position.x,intersection.point.z - this.position.z));\n\t\t\tvar snapTolerance = Math.PI / 16.0;\n\t\t\t// snap to intervals near Math.PI/2\n\t\t\tfor (var i = -4; i <= 4; i++)\n\t\t\t{\n\t\t\t\tif (Math.abs(angle - (i * (Math.PI / 2))) < snapTolerance)\n\t\t\t\t{\n\t\t\t\t\tangle = i * (Math.PI / 2);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.rotation.y = angle;\n\t\t}\n\t}\n\n\t/** */\n\tmoveToPosition(vec3)\n\t{\n\t\tthis.position.copy(vec3);\n\t\tif(this.bhelper)\n\t\t{\n\t\t\tthis.bhelper.update();\n\t\t}\n\t}\n\n\t/** */\n\tclickReleased()\n\t{\n\t\tif (this.error)\n\t\t{\n\t\t\tthis.hideError();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an array of planes to use other than the ground plane for passing\n\t * intersection to clickPressed and clickDragged\n\t */\n\tcustomIntersectionPlanes()\n\t{\n\t\treturn [];\n\t}\n\n\t/**\n\t * returns the 2d corners of the bounding polygon\n\t *\n\t * offset is Vector3 (used for getting corners of object at a new position)\n\t *\n\t * TODO: handle rotated objects better!\n\t */\n\tgetCorners(xDim, yDim, position)\n\t{\n\t\tposition = position || this.position;\n\t\tvar halfSize = this.halfSize.clone();\n\t\tvar c1 = new Vector3(-halfSize.x, 0, -halfSize.z);\n\t\tvar c2 = new Vector3(halfSize.x, 0, -halfSize.z);\n\t\tvar c3 = new Vector3(halfSize.x, 0, halfSize.z);\n\t\tvar c4 = new Vector3(-halfSize.x, 0, halfSize.z);\n\n\t\tvar transform = new Matrix4();\n\t\t// console.log(this.rotation.y);\n\t\ttransform.makeRotationY(this.rotation.y); // + Math.PI/2)\n\n\t\tc1.applyMatrix4(transform);\n\t\tc2.applyMatrix4(transform);\n\t\tc3.applyMatrix4(transform);\n\t\tc4.applyMatrix4(transform);\n\n\t\tc1.add(position);\n\t\tc2.add(position);\n\t\tc3.add(position);\n\t\tc4.add(position);\n\n\t\t// halfSize.applyMatrix4(transform);\n\n\t\t// var min = position.clone().sub(halfSize);\n\t\t// var max = position.clone().add(halfSize);\n\n\t\tvar corners = [{ x: c1.x, y: c1.z },{ x: c2.x, y: c2.z },{ x: c3.x, y: c3.z },{ x: c4.x, y: c4.z }];\n\t\treturn corners;\n\t}\n\n\t/** */\n\tisValidPosition()\n\t{\n\t\treturn false;\n\t}\n\n\t/** */\n\tshowError(vec3)\n\t{\n\t\tvec3 = vec3 || this.position;\n\t\tif (!this.error)\n\t\t{\n\t\t\tthis.error = true;\n\t\t\tthis.errorGlow = this.createGlow(this.errorColor, 0.8, true);\n\t\t\tthis.scene.add(this.errorGlow);\n\t\t}\n\t\tthis.errorGlow.position.copy(vec3);\n\t}\n\n\t/** */\n\thideError()\n\t{\n\t\tif (this.error)\n\t\t{\n\t\t\tthis.error = false;\n\t\t\tthis.scene.remove(this.errorGlow);\n\t\t}\n\t}\n\n\t/** */\n\tobjectHalfSize()\n\t{\n\t\t// var objectBox = new Box3();\n\t\t// objectBox.setFromObject(this);\n    this.geometry.computeBoundingBox();\n    var objectBox = this.geometry.boundingBox.clone();\n\t\treturn objectBox.max.clone().sub(objectBox.min).divideScalar(2);\n\t}\n\n\t/** */\n\tcreateGlow(color, opacity, ignoreDepth)\n\t{\n\t\tignoreDepth = ignoreDepth || false;\n\t\topacity = opacity || 0.2;\n\t\tvar glowMaterial = new MeshBasicMaterial({color: color, blending: AdditiveBlending, opacity: 0.2, transparent: true, depthTest: !ignoreDepth});\n\t\tvar glow = new Mesh(this.geometry.clone(), glowMaterial);\n\t\tglow.position.copy(this.position);\n\t\tglow.rotation.copy(this.rotation);\n\t\tglow.scale.copy(this.scale);\n\t\treturn glow;\n\t}\n\n\n\tgetMetaData()\n\t{\n\t\tvar matattribs = [];\n\t\tif(this.material.length)\n\t\t{\n\t\t\tthis.material.forEach((mat)=>{\n\t\t\t\tmatattribs.push('#'+mat.color.getHexString());\n\t\t\t});\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmatattribs.push('#'+this.material.color.getHexString());\n\t\t}\n\t\treturn {item_name: this.metadata.itemName,\n\t\t\titem_type: this.metadata.itemType, format: this.metadata.format, model_url: this.metadata.modelUrl,\n\t\t\txpos: this.position.x, ypos: this.position.y, zpos: this.position.z,\n\t\t\trotation: this.rotation.y,\n\t\t\tscale_x: this.scale.x, scale_y: this.scale.y,scale_z: this.scale.z,fixed: this.fixed,\n\t\t\tmaterial_colors: matattribs};\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "class",
    "name": "Item",
    "memberof": "scripts/items/item.js",
    "static": true,
    "longname": "scripts/items/item.js~Item",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/item.js",
    "importStyle": "{Item}",
    "description": "An Item is an abstract entity for all things placed in the scene, e.g. at\nwalls or on the floor.",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "three~Mesh"
    ]
  },
  {
    "__docId__": 441,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#constructor",
    "access": "public",
    "description": "Constructs an item.",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metadata",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "geometry",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "material",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "TODO"
      }
    ]
  },
  {
    "__docId__": 442,
    "kind": "member",
    "name": "model",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#model",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "metadata",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#metadata",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "member",
    "name": "errorGlow",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#errorGlow",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "member",
    "name": "hover",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#hover",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "member",
    "name": "selected",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#selected",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "member",
    "name": "highlighted",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#highlighted",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 448,
    "kind": "member",
    "name": "error",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#error",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 449,
    "kind": "member",
    "name": "emissiveColor",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#emissiveColor",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "name": "obstructFloorMoves",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#obstructFloorMoves",
    "access": "public",
    "description": "Does this object affect other floor items",
    "lineNumber": 51,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "member",
    "name": "position_set",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#position_set",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "member",
    "name": "allowRotate",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#allowRotate",
    "access": "public",
    "description": "Show rotate option in context menu",
    "lineNumber": 55,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "fixed",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#fixed",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "dragOffset",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#dragOffset",
    "access": "public",
    "description": "dragging",
    "lineNumber": 59,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "halfSize",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#halfSize",
    "access": "public",
    "description": "",
    "lineNumber": 61,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "bhelper",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#bhelper",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#scene",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "geometry",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#geometry",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "member",
    "name": "material",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#material",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "member",
    "name": "wirematerial",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#wirematerial",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "member",
    "name": "errorColor",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#errorColor",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "resizable",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#resizable",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "castShadow",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#castShadow",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "member",
    "name": "receiveShadow",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#receiveShadow",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "name": "originalmaterial",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#originalmaterial",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "name": "texture",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#texture",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "member",
    "name": "canvasWH",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasWH",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "name": "canvascontextWH",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvascontextWH",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "canvasTextureWH",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasTextureWH",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "member",
    "name": "canvasMaterialWH",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasMaterialWH",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "member",
    "name": "canvasPlaneWH",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasPlaneWH",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "member",
    "name": "canvasWD",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasWD",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "member",
    "name": "canvascontextWD",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvascontextWD",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 479,
    "kind": "member",
    "name": "canvasTextureWD",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasTextureWD",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "canvasMaterialWD",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasMaterialWD",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "name": "canvasPlaneWD",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#canvasPlaneWD",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "resizeProportionally",
    "memberof": "scripts/items/item.js~Item",
    "static": false,
    "longname": "scripts/items/item.js~Item#resizeProportionally",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "updateCanvasTexture",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#updateCanvasTexture",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "canvas",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "material",
        "types": [
          "*"
        ]
      },
      {
        "name": "w",
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "types": [
          "*"
        ]
      },
      {
        "name": "wPrefix",
        "types": [
          "*"
        ]
      },
      {
        "name": "hPrefix",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 486,
    "kind": "method",
    "name": "remove",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#remove",
    "access": "public",
    "description": "",
    "lineNumber": 232,
    "params": [],
    "return": null
  },
  {
    "__docId__": 487,
    "kind": "method",
    "name": "resize",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#resize",
    "access": "public",
    "description": "",
    "lineNumber": 238,
    "params": [
      {
        "name": "height",
        "types": [
          "*"
        ]
      },
      {
        "name": "width",
        "types": [
          "*"
        ]
      },
      {
        "name": "depth",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "getMaterial",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "getMaterialColor",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getMaterialColor",
    "access": "public",
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "setMaterialColor",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#setMaterialColor",
    "access": "public",
    "description": null,
    "lineNumber": 279,
    "undocument": true,
    "params": [
      {
        "name": "color",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "setScale",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#setScale",
    "access": "public",
    "description": "",
    "lineNumber": 292,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "z",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "getProportionalResize",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getProportionalResize",
    "access": "public",
    "description": null,
    "lineNumber": 312,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "setProportionalResize",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#setProportionalResize",
    "access": "public",
    "description": null,
    "lineNumber": 317,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "setFixed",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#setFixed",
    "access": "public",
    "description": "",
    "lineNumber": 323,
    "params": [
      {
        "name": "fixed",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "resized",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#resized",
    "access": "public",
    "description": "Subclass can define to take action after a resize.",
    "lineNumber": 329,
    "params": [],
    "return": null
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "getHeight",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getHeight",
    "access": "public",
    "description": "",
    "lineNumber": 335,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "method",
    "name": "getWidth",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getWidth",
    "access": "public",
    "description": "",
    "lineNumber": 341,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "method",
    "name": "getDepth",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getDepth",
    "access": "public",
    "description": "",
    "lineNumber": 347,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "method",
    "name": "placeInRoom",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#placeInRoom",
    "access": "public",
    "description": "",
    "lineNumber": 353,
    "params": [],
    "return": null
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "initObject",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#initObject",
    "access": "public",
    "description": "",
    "lineNumber": 359,
    "params": [],
    "return": null
  },
  {
    "__docId__": 504,
    "kind": "method",
    "name": "removed",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#removed",
    "access": "public",
    "description": "",
    "lineNumber": 376,
    "params": [],
    "return": null
  },
  {
    "__docId__": 505,
    "kind": "method",
    "name": "updateHighlight",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#updateHighlight",
    "access": "public",
    "description": "on is a bool",
    "lineNumber": 381,
    "params": [],
    "return": null
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "mouseOver",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#mouseOver",
    "access": "public",
    "description": "",
    "lineNumber": 406,
    "params": [],
    "return": null
  },
  {
    "__docId__": 509,
    "kind": "method",
    "name": "mouseOff",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#mouseOff",
    "access": "public",
    "description": "",
    "lineNumber": 413,
    "params": [],
    "return": null
  },
  {
    "__docId__": 511,
    "kind": "method",
    "name": "setSelected",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#setSelected",
    "access": "public",
    "description": "",
    "lineNumber": 420,
    "params": [],
    "return": null
  },
  {
    "__docId__": 513,
    "kind": "method",
    "name": "setUnselected",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#setUnselected",
    "access": "public",
    "description": "",
    "lineNumber": 430,
    "params": [],
    "return": null
  },
  {
    "__docId__": 515,
    "kind": "method",
    "name": "clickPressed",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#clickPressed",
    "access": "public",
    "description": "intersection has attributes point (vec3) and object (THREE.Mesh)",
    "lineNumber": 439,
    "params": [
      {
        "name": "intersection",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 516,
    "kind": "method",
    "name": "clickDragged",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#clickDragged",
    "access": "public",
    "description": "",
    "lineNumber": 445,
    "params": [
      {
        "name": "intersection",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 517,
    "kind": "method",
    "name": "rotate",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#rotate",
    "access": "public",
    "description": "",
    "lineNumber": 454,
    "params": [
      {
        "name": "intersection",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "moveToPosition",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#moveToPosition",
    "access": "public",
    "description": "",
    "lineNumber": 474,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 519,
    "kind": "method",
    "name": "clickReleased",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#clickReleased",
    "access": "public",
    "description": "",
    "lineNumber": 484,
    "params": [],
    "return": null
  },
  {
    "__docId__": 520,
    "kind": "method",
    "name": "customIntersectionPlanes",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#customIntersectionPlanes",
    "access": "public",
    "description": "Returns an array of planes to use other than the ground plane for passing\nintersection to clickPressed and clickDragged",
    "lineNumber": 496,
    "params": [],
    "return": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "getCorners",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getCorners",
    "access": "public",
    "description": "returns the 2d corners of the bounding polygon\n\noffset is Vector3 (used for getting corners of object at a new position)\n\nTODO: handle rotated objects better!",
    "lineNumber": 508,
    "params": [
      {
        "name": "xDim",
        "types": [
          "*"
        ]
      },
      {
        "name": "yDim",
        "types": [
          "*"
        ]
      },
      {
        "name": "position",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "isValidPosition",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#isValidPosition",
    "access": "public",
    "description": "",
    "lineNumber": 541,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 523,
    "kind": "method",
    "name": "showError",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#showError",
    "access": "public",
    "description": "",
    "lineNumber": 547,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 526,
    "kind": "method",
    "name": "hideError",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#hideError",
    "access": "public",
    "description": "",
    "lineNumber": 560,
    "params": [],
    "return": null
  },
  {
    "__docId__": 528,
    "kind": "method",
    "name": "objectHalfSize",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#objectHalfSize",
    "access": "public",
    "description": "",
    "lineNumber": 570,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "method",
    "name": "createGlow",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#createGlow",
    "access": "public",
    "description": "",
    "lineNumber": 580,
    "params": [
      {
        "name": "color",
        "types": [
          "*"
        ]
      },
      {
        "name": "opacity",
        "types": [
          "*"
        ]
      },
      {
        "name": "ignoreDepth",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "method",
    "name": "getMetaData",
    "memberof": "scripts/items/item.js~Item",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/item.js~Item#getMetaData",
    "access": "public",
    "description": null,
    "lineNumber": 593,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{\"item_name\": *, \"item_type\": *, \"format\": *, \"model_url\": *, \"xpos\": *, \"ypos\": *, \"zpos\": *, \"rotation\": *, \"scale_x\": *, \"scale_y\": *, \"scale_z\": *, \"fixed\": *, \"material_colors\": *}"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "file",
    "name": "scripts/items/metadata.js",
    "content": "/** Meta data for items. */\nexport class Metadata \n{\n\tconstructor()\n\t{\n\t\tthis.itemName = '';\n\t\tthis.itemType = -1;\n\t\tthis.modelUrl = '';\n\t\tthis.resizable = false;\n\t}\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/metadata.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 532,
    "kind": "class",
    "name": "Metadata",
    "memberof": "scripts/items/metadata.js",
    "static": true,
    "longname": "scripts/items/metadata.js~Metadata",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/metadata.js",
    "importStyle": "{Metadata}",
    "description": "Meta data for items.",
    "lineNumber": 2,
    "interface": false
  },
  {
    "__docId__": 533,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/metadata.js~Metadata",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/metadata.js~Metadata#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 534,
    "kind": "member",
    "name": "itemName",
    "memberof": "scripts/items/metadata.js~Metadata",
    "static": false,
    "longname": "scripts/items/metadata.js~Metadata#itemName",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "member",
    "name": "itemType",
    "memberof": "scripts/items/metadata.js~Metadata",
    "static": false,
    "longname": "scripts/items/metadata.js~Metadata#itemType",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 536,
    "kind": "member",
    "name": "modelUrl",
    "memberof": "scripts/items/metadata.js~Metadata",
    "static": false,
    "longname": "scripts/items/metadata.js~Metadata#modelUrl",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 537,
    "kind": "member",
    "name": "resizable",
    "memberof": "scripts/items/metadata.js~Metadata",
    "static": false,
    "longname": "scripts/items/metadata.js~Metadata#resizable",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "file",
    "name": "scripts/items/on_floor_item.js",
    "content": "import {FloorItem} from './floor_item.js';\n/// <reference path=\"../../lib/three.d.ts\" />\n/// <reference path=\"../model/model.ts\" />\n/// <reference path=\"floor_item.ts\" />\n/// <reference path=\"metadata.ts\" />\n\n/** */\nexport class OnFloorItem extends FloorItem\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t\tthis.obstructFloorMoves = false;\n\t\tthis.receiveShadow = true;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/on_floor_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 539,
    "kind": "class",
    "name": "OnFloorItem",
    "memberof": "scripts/items/on_floor_item.js",
    "static": true,
    "longname": "scripts/items/on_floor_item.js~OnFloorItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/on_floor_item.js",
    "importStyle": "{OnFloorItem}",
    "description": "",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "scripts/items/floor_item.js~FloorItem"
    ]
  },
  {
    "__docId__": 540,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/on_floor_item.js~OnFloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/on_floor_item.js~OnFloorItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 541,
    "kind": "member",
    "name": "obstructFloorMoves",
    "memberof": "scripts/items/on_floor_item.js~OnFloorItem",
    "static": false,
    "longname": "scripts/items/on_floor_item.js~OnFloorItem#obstructFloorMoves",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "member",
    "name": "receiveShadow",
    "memberof": "scripts/items/on_floor_item.js~OnFloorItem",
    "static": false,
    "longname": "scripts/items/on_floor_item.js~OnFloorItem#receiveShadow",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "file",
    "name": "scripts/items/roof_item.js",
    "content": "import {Item} from './item.js';\nimport {Matrix4, Triangle, Plane, Vector3} from 'three';\n/**\n * A Floor Item is an entity to be placed related to a floor.\n */\nexport class RoofItem extends Item\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t\tthis.allowRotate = false;\n\t\tthis.boundToFloor = false;\n\t\tif(this.geometry)\n\t\t{\n\t\t\t\tthis.geometry.applyMatrix(new Matrix4().makeTranslation(-0.5 * (this.geometry.boundingBox.max.x + this.geometry.boundingBox.min.x), -0.5 * (this.geometry.boundingBox.max.y - this.geometry.boundingBox.min.y),-0.5 * (this.geometry.boundingBox.max.z + this.geometry.boundingBox.min.z)));\n\t\t\t\tthis.geometry.computeBoundingBox();\n\t\t}\n\t\tthis.halfSize = this.objectHalfSize();\n\t\tthis.canvasPlaneWH.position.set(0, this.getHeight() * -0.5, this.getDepth()*0.5);\n\t\tthis.canvasPlaneWD.position.set(0, -this.getHeight(), 0);\n\n\t\tvar co = this.closestCeilingPoint();\n\t\tthis.moveToPosition(co);\n\t}\n\n\t/** Returns an array of planes to use other than the ground plane\n\t * for passing intersection to clickPressed and clickDragged */\n\tcustomIntersectionPlanes()\n\t{\n\t\treturn this.model.floorplan.roofPlanes();\n\t}\n\n\troofContainsPoint(roof, forpoint)\n\t{\n\t\t\tvar g = roof.geometry;\n\t\t\tvar result = {distance: Number.MAX_VALUE, contains: false, point: null, closestPoint: null};\n\t\t\tvar closestPoint = null;\n\t\t\tfor (var i=0;i< g.faces.length;i++)\n\t\t\t{\n\t\t\t\t\tvar f = g.faces[i];\n\t\t\t\t\tvar plane = new Plane();\n\t\t\t\t\tvar triangle = new Triangle(g.vertices[f.a], g.vertices[f.b], g.vertices[f.c]);\n\t\t\t\t\tvar ipoint = new Vector3();\n\t\t\t\t\tvar cpoint = new Vector3();\n\t\t\t\t\tvar contains = false;\n\t\t\t\t\tvar distance = 0.0;\n\t\t\t\t\tclosestPoint = triangle.closestPointToPoint(forpoint, cpoint);\n\t\t\t\t\ttriangle.getPlane(plane);\n\t\t\t\t\tplane.projectPoint(forpoint, ipoint);\n\t\t\t\t\tcontains = triangle.containsPoint(ipoint);\n\t\t\t\t\tdistance = plane.distanceToPoint(forpoint);\n\t\t\t\t\tif(distance < result.distance && contains)\n\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.distance = distance;\n\t\t\t\t\t\t\tresult.contains = contains;\n\t\t\t\t\t\t\tresult.point = ipoint;\n\t\t\t\t\t\t\tresult.closestPoint = closestPoint.clone();\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t//No good result so return the closest point of the last triangle in this roof mesh\n\t\t\tif(result.point == null)\n\t\t\t{\n\t\t\t\t\tresult.closestPoint = closestPoint.clone();\n\t\t\t}\n\n\t\t\treturn result;\n\t}\n\n\tclosestCeilingPoint()\n\t{\n\t\tvar roofs = this.model.floorplan.roofPlanes();\n\t\tvar roof = null;\n\t\tvar globalResult = {distance: Number.MAX_VALUE, point: null};\n\t\tvar result = null;\n\t\tfor (var i=0;i< roofs.length; i++)\n\t\t{\n\t\t\t\troof = roofs[i];\n\t\t\t\tresult = this.roofContainsPoint(roof, this.position);\n\t\t\t\tif(result.point !=null && result.distance < globalResult.distance && result.contains)\n\t\t\t\t{\n\t\t\t\t\t\tglobalResult.distance = result.distance;\n\t\t\t\t\t\tglobalResult.point = result.point.clone();\n\t\t\t\t}\n\t\t}\n\t\t//No good results so assign the closestPoint of the last roof in the above iteration\n\t\tif(globalResult.point == null)\n\t\t{\n\t\t\t\treturn result.closestPoint.clone();\n\t\t}\n\t\treturn globalResult.point.clone();\n\t}\n\n\t/** */\n\tplaceInRoom()\n\t{\n\t\tif (!this.position_set)\n\t\t{\n\t\t\tvar co = this.closestCeilingPoint();\n\t\t\tthis.moveToPosition(co);\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/roof_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 544,
    "kind": "class",
    "name": "RoofItem",
    "memberof": "scripts/items/roof_item.js",
    "static": true,
    "longname": "scripts/items/roof_item.js~RoofItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/roof_item.js",
    "importStyle": "{RoofItem}",
    "description": "A Floor Item is an entity to be placed related to a floor.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "scripts/items/item.js~Item"
    ]
  },
  {
    "__docId__": 545,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 546,
    "kind": "member",
    "name": "allowRotate",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#allowRotate",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "member",
    "name": "boundToFloor",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#boundToFloor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 548,
    "kind": "member",
    "name": "halfSize",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#halfSize",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "customIntersectionPlanes",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#customIntersectionPlanes",
    "access": "public",
    "description": "Returns an array of planes to use other than the ground plane\nfor passing intersection to clickPressed and clickDragged",
    "lineNumber": 28,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "method",
    "name": "roofContainsPoint",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#roofContainsPoint",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "roof",
        "types": [
          "*"
        ]
      },
      {
        "name": "forpoint",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "closestCeilingPoint",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#closestCeilingPoint",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "method",
    "name": "placeInRoom",
    "memberof": "scripts/items/roof_item.js~RoofItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/roof_item.js~RoofItem#placeInRoom",
    "access": "public",
    "description": "",
    "lineNumber": 94,
    "params": [],
    "return": null
  },
  {
    "__docId__": 553,
    "kind": "file",
    "name": "scripts/items/wall_floor_item.js",
    "content": "import {WallItem} from './wall_item.js';\n/// <reference path=\"../../lib/three.d.ts\" />\n/// <reference path=\"../model/model.ts\" />\n/// <reference path=\"wall_item.ts\" />\n/// <reference path=\"metadata.ts\" />\n/** */\nexport class WallFloorItem extends WallItem\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t\tthis.boundToFloor = true;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/wall_floor_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 554,
    "kind": "class",
    "name": "WallFloorItem",
    "memberof": "scripts/items/wall_floor_item.js",
    "static": true,
    "longname": "scripts/items/wall_floor_item.js~WallFloorItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/wall_floor_item.js",
    "importStyle": "{WallFloorItem}",
    "description": "",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "scripts/items/wall_item.js~WallItem"
    ]
  },
  {
    "__docId__": 555,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/wall_floor_item.js~WallFloorItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_floor_item.js~WallFloorItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 556,
    "kind": "member",
    "name": "boundToFloor",
    "memberof": "scripts/items/wall_floor_item.js~WallFloorItem",
    "static": false,
    "longname": "scripts/items/wall_floor_item.js~WallFloorItem#boundToFloor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 557,
    "kind": "file",
    "name": "scripts/items/wall_item.js",
    "content": "import {Vector2, Vector3} from 'three';\nimport {EVENT_DELETED} from '../core/events.js';\nimport {Utils} from '../core/utils.js';\nimport {Item} from './item.js';\n\n/**\n * A Wall Item is an entity to be placed related to a wall.\n */\nexport class WallItem extends Item\n{\n\tconstructor(model, metadata, geometry, material, position, rotation, scale, isgltf=false)\n\t{\n\t\tsuper(model, metadata, geometry, material, position, rotation, scale, isgltf);\n\t\t/** The currently applied wall edge. */\n\t\tthis.currentWallEdge = null;\n\t\t/* TODO:\n         This caused a huge headache.\n         HalfEdges get destroyed/created every time floorplan is edited.\n         This item should store a reference to a wall and front/back,\n         and grab its edge reference dynamically whenever it needs it.\n\t\t */\n\n\t\t/** used for finding rotations */\n\t\tthis.refVec = new Vector2(0, 1.0);\n\t\t/** */\n\t\tthis.wallOffsetScalar = 0;\n\t\t/** */\n\t\tthis.sizeX = 0;\n\t\t/** */\n\t\tthis.sizeY = 0;\n\t\t/** */\n\t\tthis.addToWall = false;\n\t\t/** */\n\t\tthis.boundToFloor = false;\n\t\t/** */\n\t\tthis.frontVisible = false;\n\t\t/** */\n\t\tthis.backVisible = false;\n\t\tthis.allowRotate = false;\n\t}\n\n\t/** Get the closet wall edge.\n\t * @returns The wall edge.\n\t */\n\tclosestWallEdge()\n\t{\n\t\tvar wallEdges = this.model.floorplan.wallEdges();\n\t\tvar wallEdge = null;\n\t\tvar minDistance = null;\n\t\tvar itemX = this.position.x;\n\t\tvar itemZ = this.position.z;\n\t\twallEdges.forEach((edge) => {\n\t\t\tvar distance = edge.distanceTo(itemX, itemZ);\n\t\t\tif (minDistance === null || distance < minDistance)\n\t\t\t{\n\t\t\t\tminDistance = distance;\n\t\t\t\twallEdge = edge;\n\t\t\t}\n\t\t});\n\t\treturn wallEdge;\n\t}\n\n\t/** */\n\tremoved()\n\t{\n\t\tif (this.currentWallEdge != null && this.addToWall)\n\t\t{\n\t\t\tUtils.removeValue(this.currentWallEdge.wall.items, this);\n\t\t\tthis.redrawWall();\n\t\t}\n\t}\n\n\t/** */\n\tredrawWall()\n\t{\n\t\tif (this.addToWall)\n\t\t{\n\t\t\tthis.currentWallEdge.wall.fireRedraw();\n\t\t}\n\t}\n\n\t/** */\n\tupdateEdgeVisibility(visible, front)\n\t{\n\t\tif (front)\n\t\t{\n\t\t\tthis.frontVisible = visible;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.backVisible = visible;\n\t\t}\n\t\tthis.visible = (this.frontVisible || this.backVisible);\n\t}\n\n\t/** */\n\tupdateSize()\n\t{\n\t\tthis.wallOffsetScalar = (this.geometry.boundingBox.max.z - this.geometry.boundingBox.min.z) * this.scale.z / 2.0;\n\t\tthis.sizeX = (this.geometry.boundingBox.max.x - this.geometry.boundingBox.min.x) * this.scale.x;\n\t\tthis.sizeY = (this.geometry.boundingBox.max.y - this.geometry.boundingBox.min.y) * this.scale.y;\n\t}\n\n\t/** */\n\tresized()\n\t{\n\t\tif (this.boundToFloor)\n\t\t{\n\t\t\tthis.position.y = 0.5 * (this.geometry.boundingBox.max.y - this.geometry.boundingBox.min.y) * this.scale.y + 0.01;\n\t\t}\n\t\tthis.updateSize();\n\t\tthis.redrawWall();\n\t}\n\n\t/** */\n\tplaceInRoom()\n\t{\n\t\tvar closestWallEdge = this.closestWallEdge();\n\t\tthis.changeWallEdge(closestWallEdge);\n\t\tthis.updateSize();\n\n\t\tif (!this.position_set)\n\t\t{\n\t\t\t// position not set\n\t\t\tvar center = closestWallEdge.interiorCenter();\n\t\t\tvar newPos = new Vector3(center.x, closestWallEdge.wall.height / 2.0, center.y);\n\t\t\tthis.boundMove(newPos);\n\t\t\tthis.position.copy(newPos);\n\t\t\tthis.redrawWall();\n\t\t}\n\t}\n\n\t/** */\n\tmoveToPosition(vec3, intersection)\n\t{\n\t\tvar intersectionEdge = (intersection) ? (intersection.object) ? intersection.object.edge: intersection : this.closestWallEdge();\n\t\tthis.changeWallEdge(intersectionEdge);\n\t\tthis.boundMove(vec3);\n\n//\t\tthis.position.copy(vec3);\n\t\tsuper.moveToPosition(vec3);\n\t\tthis.redrawWall();\n\t}\n\n\t/** */\n\tgetWallOffset()\n\t{\n\t\treturn this.wallOffsetScalar;\n\t}\n\n\t/** */\n\tchangeWallEdge(wallEdge)\n\t{\n\t\tif (this.currentWallEdge != null)\n\t\t{\n\t\t\tif (this.addToWall)\n\t\t\t{\n\t\t\t\tUtils.removeValue(this.currentWallEdge.wall.items, this);\n\t\t\t\tthis.redrawWall();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tUtils.removeValue(this.currentWallEdge.wall.onItems, this);\n\t\t\t}\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tfunction __remove(event)\n\t\t{\n\t\t\tscope.remove(event.item);\n\t\t}\n\n\t\t// handle subscription to wall being removed\n\t\tif (this.currentWallEdge != null)\n\t\t{\n//\t\t\tthis.currentWallEdge.wall.dontFireOnDelete(this.remove.bind(this));\n\t\t\tthis.currentWallEdge.wall.removeEventListener(EVENT_DELETED, __remove);\n\t\t}\n//\t\twallEdge.wall.fireOnDelete(this.remove.bind(this));\n\t\twallEdge.wall.addEventListener(EVENT_DELETED, __remove);\n\n\t\t// find angle between wall normals\n\t\tvar normal2 = new Vector2();\n\t\tvar normal3 = wallEdge.plane.geometry.faces[0].normal;\n\t\tnormal2.x = normal3.x;\n\t\tnormal2.y = normal3.z;\n\n\t\tvar angle = Utils.angle( new Vector2(this.refVec.x, this.refVec.y), new Vector2(normal2.x, normal2.y));\n\t\tthis.rotation.y = angle;\n\t\t// update currentWall\n\t\tthis.currentWallEdge = wallEdge;\n\t\tif (this.addToWall)\n\t\t{\n\t\t\twallEdge.wall.items.push(this);\n\t\t\tthis.redrawWall();\n\t\t}\n\t\telse\n\t\t{\n\t\t\twallEdge.wall.onItems.push(this);\n\t\t}\n\t}\n\n\t/** Returns an array of planes to use other than the ground plane\n\t * for passing intersection to clickPressed and clickDragged */\n\tcustomIntersectionPlanes()\n\t{\n\t\treturn this.model.floorplan.wallEdgePlanes();\n\t}\n\n\t/** takes the move vec3, and makes sure object stays bounded on plane */\n\tboundMove(vec3)\n\t{\n\t\tvar tolerance = 1;\n\t\tvar edge = this.currentWallEdge;\n\t\tvec3.applyMatrix4(edge.interiorTransform);\n\t\tif (vec3.x < this.sizeX / 2.0 + tolerance)\n\t\t{\n\t\t\tvec3.x = this.sizeX / 2.0 + tolerance;\n\t\t}\n\t\telse if (vec3.x > (edge.interiorDistance() - this.sizeX / 2.0 - tolerance))\n\t\t{\n\t\t\tvec3.x = edge.interiorDistance() - this.sizeX / 2.0 - tolerance;\n\t\t}\n\n\t\tif (this.boundToFloor)\n\t\t{\n\t\t\tvec3.y = 0.5 * (this.geometry.boundingBox.max.y - this.geometry.boundingBox.min.y) * this.scale.y + 0.01;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vec3.y < this.sizeY / 2.0 + tolerance)\n\t\t\t{\n\t\t\t\tvec3.y = this.sizeY / 2.0 + tolerance;\n\t\t\t}\n\t\t\telse if (vec3.y > edge.height - this.sizeY / 2.0 - tolerance)\n\t\t\t{\n\t\t\t\tvec3.y = edge.height - this.sizeY / 2.0 - tolerance;\n\t\t\t}\n\t\t}\n\t\tvec3.z = this.getWallOffset();\n\t\tvec3.applyMatrix4(edge.invInteriorTransform);\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/items/wall_item.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 558,
    "kind": "class",
    "name": "WallItem",
    "memberof": "scripts/items/wall_item.js",
    "static": true,
    "longname": "scripts/items/wall_item.js~WallItem",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/items/wall_item.js",
    "importStyle": "{WallItem}",
    "description": "A Wall Item is an entity to be placed related to a wall.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "scripts/items/item.js~Item"
    ]
  },
  {
    "__docId__": 559,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 560,
    "kind": "member",
    "name": "currentWallEdge",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#currentWallEdge",
    "access": "public",
    "description": "The currently applied wall edge.",
    "lineNumber": 15,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 561,
    "kind": "member",
    "name": "refVec",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#refVec",
    "access": "public",
    "description": "used for finding rotations",
    "lineNumber": 24,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 562,
    "kind": "member",
    "name": "wallOffsetScalar",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#wallOffsetScalar",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 563,
    "kind": "member",
    "name": "sizeX",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#sizeX",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 564,
    "kind": "member",
    "name": "sizeY",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#sizeY",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 565,
    "kind": "member",
    "name": "addToWall",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#addToWall",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 566,
    "kind": "member",
    "name": "boundToFloor",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#boundToFloor",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "member",
    "name": "frontVisible",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#frontVisible",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 568,
    "kind": "member",
    "name": "backVisible",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#backVisible",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "member",
    "name": "allowRotate",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#allowRotate",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 570,
    "kind": "method",
    "name": "closestWallEdge",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#closestWallEdge",
    "access": "public",
    "description": "Get the closet wall edge.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The wall edge."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The wall edge."
    },
    "params": []
  },
  {
    "__docId__": 571,
    "kind": "method",
    "name": "removed",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#removed",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "params": [],
    "return": null
  },
  {
    "__docId__": 572,
    "kind": "method",
    "name": "redrawWall",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#redrawWall",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "params": [],
    "return": null
  },
  {
    "__docId__": 573,
    "kind": "method",
    "name": "updateEdgeVisibility",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#updateEdgeVisibility",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "params": [
      {
        "name": "visible",
        "types": [
          "*"
        ]
      },
      {
        "name": "front",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 576,
    "kind": "member",
    "name": "visible",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#visible",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "method",
    "name": "updateSize",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#updateSize",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "params": [],
    "return": null
  },
  {
    "__docId__": 581,
    "kind": "method",
    "name": "resized",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#resized",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "params": [],
    "return": null
  },
  {
    "__docId__": 582,
    "kind": "method",
    "name": "placeInRoom",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#placeInRoom",
    "access": "public",
    "description": "",
    "lineNumber": 116,
    "params": [],
    "return": null
  },
  {
    "__docId__": 583,
    "kind": "method",
    "name": "moveToPosition",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#moveToPosition",
    "access": "public",
    "description": "",
    "lineNumber": 134,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      },
      {
        "name": "intersection",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 584,
    "kind": "method",
    "name": "getWallOffset",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#getWallOffset",
    "access": "public",
    "description": "",
    "lineNumber": 146,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 585,
    "kind": "method",
    "name": "changeWallEdge",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#changeWallEdge",
    "access": "public",
    "description": "",
    "lineNumber": 152,
    "params": [
      {
        "name": "wallEdge",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 587,
    "kind": "method",
    "name": "customIntersectionPlanes",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#customIntersectionPlanes",
    "access": "public",
    "description": "Returns an array of planes to use other than the ground plane\nfor passing intersection to clickPressed and clickDragged",
    "lineNumber": 206,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 588,
    "kind": "method",
    "name": "boundMove",
    "memberof": "scripts/items/wall_item.js~WallItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/items/wall_item.js~WallItem#boundMove",
    "access": "public",
    "description": "takes the move vec3, and makes sure object stays bounded on plane",
    "lineNumber": 212,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 589,
    "kind": "file",
    "name": "scripts/model/corner.js",
    "content": "import {EVENT_ACTION, EVENT_DELETED, EVENT_MOVED} from '../core/events.js';\nimport {EventDispatcher, Vector2} from 'three';\nimport {Utils} from '../core/utils.js';\nimport {Dimensioning} from '../core/dimensioning.js';\nimport {Configuration, configWallHeight} from '../core/configuration.js';\n\n/** */\nexport const cornerTolerance = 20;\n\n/**\n * Corners are used to define Walls.\n */\nexport class Corner extends EventDispatcher\n{\n\n\t/** Constructs a corner.\n\t * @param {Floorplan} floorplan The associated model floorplan.\n\t * @param {Number} x X coordinate.\n\t * @param {Number} y Y coordinate.\n\t * @param {String} id An optional unique id. If not set, created internally.\n\t */\n\tconstructor(floorplan, x, y, id)\n\t{\n\t\tsuper();\n\t\t/** @property {Array} wallStarts Array of walls that are start walls\n\t\t\t* @type {Array}\n\t\t**/\n\t\tthis.wallStarts = [];\n\t\t/** @property {Array} wallEnds Array of walls that are end walls\n\t\t\t* @type {Array}\n\t\t**/\n\t\tthis.wallEnds = [];\n\t\t/**\n\t\t\t* @deprecated Not in use. The EventDispatcher from threejs is used for emit and listen events\n\t\t**/\n\t\tthis.moved_callbacks = null;\n\t\t/**\n\t\t\t* @deprecated Not in use. The EventDispatcher from threejs is used for emit and listen events\n\t\t**/\n\t\tthis.deleted_callbacks = null;\n\t\t/**\n\t\t\t* @deprecated Not in use. The EventDispatcher from threejs is used for emit and listen events\n\t\t**/\n\t\tthis.action_callbacks = null;\n\t\t/**\n\t\t\t* @property {Floorplan} floorplan Reference to the model floorplan\n\t\t\t* @type {Floorplan}\n\t\t**/\n\t\tthis.floorplan = floorplan;\n\t\t/**\n\t\t\t* @property {Number} x The position in x dimension\n\t\t\t* @type {Number}\n\t\t**/\n\t\tthis.x = x;\n\t\t/**\n\t\t\t* @property {Number} y The position in y dimension\n\t\t\t* @type {Number}\n\t\t**/\n\t\tthis.y = y;\n\t\t/**\n\t\t\t* @property {Number} _elevation The elevation at this corner\n\t\t\t* @type {Number}\n\t\t**/\n\t\tthis._elevation = Configuration.getNumericValue(configWallHeight);\n\t\t/**\n\t\t\t* @property {String} id The id of this corner. Autogenerated the first time\n\t\t\t* @type {String}\n\t\t**/\n\t\tthis.id = id || Utils.guide();\n\t\t/**\n\t\t\t* @property {Array} attachedRooms Array of rooms that have walls using this corner\n\t\t\t* @type {Array}\n\t\t**/\n\t\tthis.attachedRooms = [];\n\t}\n\n\t/** @type {Number} elevation The elevation value at this corner*/\n\tset elevation(value)\n\t{\n\t\tthis._elevation = Dimensioning.cmFromMeasureRaw(Number(value));\n\t}\n\n\t/** @type {Number} elevation The elevation value at this corner*/\n\tget elevation()\n\t{\n\t\treturn this._elevation;\n\t}\n\n\t/**\n   * @param {Room} room - The room that should be attached to this corner\n\t * @return {void}\n   */\n\tattachRoom(room)\n\t{\n\t\tif(room)\n\t\t{\n\t\t\tthis.attachedRooms.push(room);\n\t\t}\n\t}\n\n\t/**\n   * @return {Room[]} Array of rooms attached to this corner\n   */\n\tgetAttachedRooms()\n\t{\n\t\treturn this.attachedRooms;\n\t}\n\n\t/**\n   * @return {void} Clear all the rooms attached to this corner\n   */\n\tclearAttachedRooms()\n\t{\n\t\tthis.attachedRooms = [];\n\t}\n\n\t/** Add function to moved callbacks.\n\t * @param func The function to be added.\n\t */\n\tfireOnMove(func)\n\t{\n\t\tthis.moved_callbacks.add(func);\n\t}\n\n\t/** Add function to deleted callbacks.\n\t * @param func The function to be added.\n\t */\n\tfireOnDelete(func)\n\t{\n\t\tthis.deleted_callbacks.add(func);\n\t}\n\n\t/** Add function to action callbacks.\n\t * @param func The function to be added.\n\t */\n\tfireOnAction(func)\n\t{\n\t\tthis.action_callbacks.add(func);\n\t}\n\n\tfireAction(action)\n\t{\n\t\tthis.dispatchEvent({type:EVENT_ACTION, item: this, action:action});\n\t\t//      this.action_callbacks.fire(action)\n\t}\n\n\t/**\n\t * @returns\n\t * @deprecated\n\t */\n\tgetX()\n\t{\n\t\treturn this.x;\n\t}\n\n\t/**\n\t * @returns\n\t * @deprecated\n\t */\n\tgetY()\n\t{\n\t\treturn this.y;\n\t}\n\n\t/**\n\t *\t@param {Number} tolerance - The tolerance value within which it will snap to adjacent corners\n\t *  @return {Object} snapped Contains keys x and y with true/false values\n\t *  @description The object with x and y that are boolean values to indicate if the snap happens in x and y\n\t */\n\tsnapToAxis(tolerance)\n\t{\n\t\t// try to snap this corner to an axis\n\t\tvar snapped = {x: false,y: false};\n\t\tvar scope = this;\n\n\t\tthis.adjacentCorners().forEach((corner) => {\n\t\t\tif (Math.abs(corner.x - scope.x) < tolerance)\n\t\t\t{\n\t\t\t\tscope.x = corner.x;\n\t\t\t\tsnapped.x = true;\n\t\t\t}\n\t\t\tif (Math.abs(corner.y - scope.y) < tolerance)\n\t\t\t{\n\t\t\t\tscope.y = corner.y;\n\t\t\t\tsnapped.y = true;\n\t\t\t}\n\t\t});\n\t\treturn snapped;\n\t}\n\n\t/** Moves corner relatively to new position.\n\t * @param {Number} dx The delta x.\n\t * @param {Number} dy The delta y.\n\t */\n\trelativeMove(dx, dy)\n\t{\n\t\tthis.move(this.x + dx, this.y + dy);\n\t}\n\n\t/**\n\t\t* Dispatches an event when removed from the floorplan({@link Floorplan}) instance. The event object contains reference to this {@link Corner} instance as item.\n\t\t* @example\n\t\t* let corner = new Corner(floorplan, 0, 0);\n\t\t* function cornerRemoved(e) { console.log('I WAS REMOVED FROM LOCATION ', e.item.x, e.item.y) };\n\t\t* corner.remove();\n\t\t* @emits {EVENT_DELETED}\n\t**/\n\tremove()\n\t{\n\t\tthis.dispatchEvent({type:EVENT_DELETED, item:this});\n\t\t//      this.deleted_callbacks.fire(this);\n\t}\n\n\t/**\n\t\t* Removes all the connected corners and itself. This in essence removes all the walls({@link Wall}) this corner is connected to.\n\t\t* @example\n\t\t* let corner1 = new Corner(floorplan, 0, 0);\n\t\t* let corner2 = new Corner(floorplan, 10, 0);\n\t\t* function cornerRemoved(e) { console.log('I WAS REMOVED FROM LOCATION ', e.item.x, e.item.y) } //Will log twice for two corners;\n\t\t* corner.removeAll();\n\t**/\n\tremoveAll()\n\t{\n\t\tvar i = 0;\n\t\tfor (i = 0; i < this.wallStarts.length; i++)\n\t\t{\n\t\t\tthis.wallStarts[i].remove();\n\t\t}\n\t\tfor (i = 0; i < this.wallEnds.length; i++)\n\t\t{\n\t\t\tthis.wallEnds[i].remove();\n\t\t}\n\t\tthis.remove();\n\t}\n\n\t/** Moves corner to new position.\n\t * @param {Number} newX The new x position.\n\t * @param {Number} newY The new y position.\n\t */\n\tmove(newX, newY)\n\t{\n\t\tthis.x = newX;\n\t\tthis.y = newY;\n\t\tthis.mergeWithIntersected();\n\n\t\tthis.dispatchEvent({type:EVENT_MOVED, item: this, position: new Vector2(this.x, this.y)});\n\t\t//      this.moved_callbacks.fire(this.x, this.y);\n\n\t\tthis.wallStarts.forEach((wall) => {\n\t\t\twall.fireMoved();\n\t\t});\n\n\t\tthis.wallEnds.forEach((wall) => {\n\t\t\twall.fireMoved();\n\t\t});\n\t}\n\n\t/**\n\t\t* When a corner is moved from its location it will impact the connected rooms ({@link Room}) shape, thus their areas. This will update the rooms\n\t\t* @example\n\t\t* let corner = new Corner(floorplan, 0, 0);\n\t\t* corner.move(10, 0);\n\t**/\n\tupdateAttachedRooms()\n\t{\n\t\tthis.attachedRooms.forEach((room)=>{\n\t\t\t\troom.updateArea();\n\t\t});\n\t}\n\n\t/** Gets the adjacent corners that are connected to this corner by walls ({@link Wall}).\n\t * @returns {Corner[]} Array of corners.\n\t */\n\tadjacentCorners()\n\t{\n\t\tvar retArray = [];\n\t\tvar i = 0;\n\t\tfor (i = 0; i < this.wallStarts.length; i++)\n\t\t{\n\t\t\tretArray.push(this.wallStarts[i].getEnd());\n\t\t}\n\t\tfor (i = 0; i < this.wallEnds.length; i++)\n\t\t{\n\t\t\tretArray.push(this.wallEnds[i].getStart());\n\t\t}\n\t\treturn retArray;\n\t}\n\n\t/** Checks if a wall is connected.\n\t * @param {Wall} wall A wall.\n\t * @returns {boolean} in case of connection.\n\t */\n\tisWallConnected(wall)\n\t{\n\t\tvar i =0;\n\t\tfor (i = 0; i < this.wallStarts.length; i++)\n\t\t{\n\t\t\tif (this.wallStarts[i] == wall)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < this.wallEnds.length; i++)\n\t\t{\n\t\t\tif (this.wallEnds[i] == wall)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\t* Returns the distance between this corner and a point in 2d space\n\t\t* @param {Vector2} point\n\t\t* @see https://threejs.org/docs/#api/en/math/Vector2\n\t\t* @return {Number} distance The distance\n\t**/\n\tdistanceFrom(point)\n\t{\n\t\tvar distance = Utils.distance(point, new Vector2(this.x, this.y));\n\t\t//console.log('x,y ' + x + ',' + y + ' to ' + this.getX() + ',' + this.getY() + ' is ' + distance);\n\t\treturn distance;\n\t}\n\n\t/** Gets the distance from a wall.\n\t * @param {Wall} wall A wall.\n\t * @returns {Number} distance The distance.\n\t */\n\tdistanceFromWall(wall)\n\t{\n\t\treturn wall.distanceFrom(new Vector2(this.x, this.y));\n\t}\n\n\t/** Gets the distance from a corner.\n\t * @param {Corner} corner A corner.\n\t * @returns {Number} The distance.\n\t */\n\tdistanceFromCorner(corner)\n\t{\n\t\treturn this.distanceFrom(new Vector2(corner.x, corner.y));\n\t}\n\n\t/** Detaches a wall.\n\t * @param {Wall} wall A wall.\n\t */\n\tdetachWall(wall)\n\t{\n\t\tUtils.removeValue(this.wallStarts, wall);\n\t\tUtils.removeValue(this.wallEnds, wall);\n\n\t\tif (this.wallStarts.length == 0 && this.wallEnds.length == 0)\n\t\t{\n\t\t\tthis.remove();\n\t\t}\n\t}\n\n\t/** Attaches a start wall.\n\t * @param {Wall} wall A wall.\n\t */\n\tattachStart(wall)\n\t{\n\t\tthis.wallStarts.push(wall);\n\t}\n\n\t/** Attaches an end wall.\n\t * @param {Wall} wall A wall.\n\t */\n\tattachEnd(wall)\n\t{\n\t\tthis.wallEnds.push(wall);\n\t}\n\n\t/** Get wall to corner.\n\t * @param {Corner} corner A corner.\n\t * @return {Wall} The associated wall or null.\n\t */\n\twallTo(corner)\n\t{\n\t\tfor (var i = 0; i < this.wallStarts.length; i++)\n\t\t{\n\t\t\tif (this.wallStarts[i].getEnd() === corner)\n\t\t\t{\n\t\t\t\treturn this.wallStarts[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Get wall from corner.\n\t * @param {Corner}  corner A corner.\n\t * @return {Wall} The associated wall or null.\n\t */\n\twallFrom(corner)\n\t{\n\t\tfor (var i = 0; i < this.wallEnds.length; i++)\n\t\t{\n\t\t\tif (this.wallEnds[i].getStart() === corner)\n\t\t\t{\n\t\t\t\treturn this.wallEnds[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Get wall to or from corner.\n\t * @param {Corner} corner A corner.\n\t * @return {Wall} The associated wall or null.\n\t */\n\twallToOrFrom(corner)\n\t{\n\t\treturn this.wallTo(corner) || this.wallFrom(corner);\n\t}\n\n\t/** Get wall from corner.\n\t * @param {Corner}  corner A corner.\n\t */\n\tcombineWithCorner(corner)\n\t{\n\t\tvar i = 0;\n\t\t// update position to other corner's\n\t\tthis.x = corner.x;\n\t\tthis.y = corner.y;\n\t\t// absorb the other corner's wallStarts and wallEnds\n\t\tfor (i = corner.wallStarts.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tcorner.wallStarts[i].setStart(this);\n\t\t}\n\t\tfor (i = corner.wallEnds.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tcorner.wallEnds[i].setEnd(this);\n\t\t}\n\t\t// delete the other corner\n\t\tcorner.removeAll();\n\t\tthis.removeDuplicateWalls();\n\t\tthis.floorplan.update();\n\t}\n\n\tmergeWithIntersected()\n\t{\n\t\tvar i =0;\n\t\t//console.log('mergeWithIntersected for object: ' + this.type);\n\t\t// check corners\n\t\tfor (i = 0; i < this.floorplan.getCorners().length; i++)\n\t\t{\n\t\t\tvar corner = this.floorplan.getCorners()[i];\n\t\t\tif (this.distanceFromCorner(corner) < cornerTolerance && corner != this)\n\t\t\t{\n\t\t\t\tthis.combineWithCorner(corner);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// check walls\n\t\tfor (i = 0; i < this.floorplan.getWalls().length; i++)\n\t\t{\n\t\t\tvar wall = this.floorplan.getWalls()[i];\n\t\t\tif (this.distanceFromWall(wall) < cornerTolerance && !this.isWallConnected(wall))\n\t\t\t{\n\t\t\t\t// update position to be on wall\n\t\t\t\tvar intersection = Utils.closestPointOnLine(new Vector2(this.x, this.y), wall.getStart(), wall.getEnd());\n\t\t\t\tthis.x = intersection.x;\n\t\t\t\tthis.y = intersection.y;\n\t\t\t\t// merge this corner into wall by breaking wall into two parts\n\t\t\t\tthis.floorplan.newWall(this, wall.getEnd());\n\t\t\t\twall.setEnd(this);\n\t\t\t\tthis.floorplan.update();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/** Ensure we do not have duplicate walls (i.e. same start and end points) */\n\tremoveDuplicateWalls()\n\t{\n\t\tvar i = 0;\n\t\t// delete the wall between these corners, if it exists\n\t\tvar wallEndpoints = {};\n\t\tvar wallStartpoints = {};\n\t\tfor (i = this.wallStarts.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (this.wallStarts[i].getEnd() === this)\n\t\t\t{\n\t\t\t\t// remove zero length wall\n\t\t\t\tthis.wallStarts[i].remove();\n\t\t\t}\n\t\t\telse if (this.wallStarts[i].getEnd().id in wallEndpoints)\n\t\t\t{\n\t\t\t\t// remove duplicated wall\n\t\t\t\tthis.wallStarts[i].remove();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twallEndpoints[this.wallStarts[i].getEnd().id] = true;\n\t\t\t}\n\t\t}\n\t\tfor (i = this.wallEnds.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (this.wallEnds[i].getStart() === this)\n\t\t\t{\n\t\t\t\t// removed zero length wall\n\t\t\t\tthis.wallEnds[i].remove();\n\t\t\t}\n\t\t\telse if (this.wallEnds[i].getStart().id in wallStartpoints)\n\t\t\t{\n\t\t\t\t// removed duplicated wall\n\t\t\t\tthis.wallEnds[i].remove();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twallStartpoints[this.wallEnds[i].getStart().id] = true;\n\t\t\t}\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/corner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 590,
    "kind": "variable",
    "name": "cornerTolerance",
    "memberof": "scripts/model/corner.js",
    "static": true,
    "longname": "scripts/model/corner.js~cornerTolerance",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/corner.js",
    "importStyle": "{cornerTolerance}",
    "description": "",
    "lineNumber": 8,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 591,
    "kind": "class",
    "name": "Corner",
    "memberof": "scripts/model/corner.js",
    "static": true,
    "longname": "scripts/model/corner.js~Corner",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/corner.js",
    "importStyle": "{Corner}",
    "description": "Corners are used to define Walls.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 592,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#constructor",
    "access": "public",
    "description": "Constructs a corner.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Floorplan"
        ],
        "spread": false,
        "optional": false,
        "name": "floorplan",
        "description": "The associated model floorplan."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "X coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Y coordinate."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "An optional unique id. If not set, created internally."
      }
    ]
  },
  {
    "__docId__": 593,
    "kind": "member",
    "name": "wallStarts",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#wallStarts",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "wallStarts",
        "description": "Array of walls that are start walls"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 594,
    "kind": "member",
    "name": "wallEnds",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#wallEnds",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "wallEnds",
        "description": "Array of walls that are end walls"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 595,
    "kind": "member",
    "name": "moved_callbacks",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#moved_callbacks",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "deprecated": "Not in use. The EventDispatcher from threejs is used for emit and listen events",
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "deleted_callbacks",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#deleted_callbacks",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "deprecated": "Not in use. The EventDispatcher from threejs is used for emit and listen events",
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "action_callbacks",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#action_callbacks",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "deprecated": "Not in use. The EventDispatcher from threejs is used for emit and listen events",
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#floorplan",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Floorplan"
        ],
        "spread": false,
        "optional": false,
        "name": "floorplan",
        "description": "Reference to the model floorplan"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Floorplan"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 599,
    "kind": "member",
    "name": "x",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#x",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The position in x dimension"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 600,
    "kind": "member",
    "name": "y",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#y",
    "access": "public",
    "description": "",
    "lineNumber": 59,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The position in y dimension"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 601,
    "kind": "member",
    "name": "_elevation",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#_elevation",
    "access": "private",
    "description": "",
    "lineNumber": 64,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "_elevation",
        "description": "The elevation at this corner"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 602,
    "kind": "member",
    "name": "id",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#id",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of this corner. Autogenerated the first time"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 603,
    "kind": "member",
    "name": "attachedRooms",
    "memberof": "scripts/model/corner.js~Corner",
    "static": false,
    "longname": "scripts/model/corner.js~Corner#attachedRooms",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "attachedRooms",
        "description": "Array of rooms that have walls using this corner"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 604,
    "kind": "set",
    "name": "elevation",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#elevation",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 606,
    "kind": "get",
    "name": "elevation",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#elevation",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 607,
    "kind": "method",
    "name": "attachRoom",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#attachRoom",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Room"
        ],
        "spread": false,
        "optional": false,
        "name": "room",
        "description": "The room that should be attached to this corner"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 608,
    "kind": "method",
    "name": "getAttachedRooms",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#getAttachedRooms",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "return": {
      "nullable": null,
      "types": [
        "Room[]"
      ],
      "spread": false,
      "description": "Array of rooms attached to this corner"
    },
    "params": []
  },
  {
    "__docId__": 609,
    "kind": "method",
    "name": "clearAttachedRooms",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#clearAttachedRooms",
    "access": "public",
    "description": "",
    "lineNumber": 112,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": "Clear all the rooms attached to this corner"
    },
    "params": []
  },
  {
    "__docId__": 611,
    "kind": "method",
    "name": "fireOnMove",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#fireOnMove",
    "access": "public",
    "description": "Add function to moved callbacks.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "The function to be added."
      }
    ],
    "return": null
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "fireOnDelete",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#fireOnDelete",
    "access": "public",
    "description": "Add function to deleted callbacks.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "The function to be added."
      }
    ],
    "return": null
  },
  {
    "__docId__": 613,
    "kind": "method",
    "name": "fireOnAction",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#fireOnAction",
    "access": "public",
    "description": "Add function to action callbacks.",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "The function to be added."
      }
    ],
    "return": null
  },
  {
    "__docId__": 614,
    "kind": "method",
    "name": "fireAction",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#fireAction",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 615,
    "kind": "method",
    "name": "getX",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#getX",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "deprecated": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "method",
    "name": "getY",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#getY",
    "access": "public",
    "description": "",
    "lineNumber": 160,
    "deprecated": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 617,
    "kind": "method",
    "name": "snapToAxis",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#snapToAxis",
    "access": "public",
    "description": "",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "The object with x and y that are boolean values to indicate if the snap happens in x and y"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tolerance",
        "description": "The tolerance value within which it will snap to adjacent corners"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "snapped Contains keys x and y with true/false values"
    }
  },
  {
    "__docId__": 618,
    "kind": "method",
    "name": "relativeMove",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#relativeMove",
    "access": "public",
    "description": "Moves corner relatively to new position.",
    "lineNumber": 195,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "The delta x."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "The delta y."
      }
    ],
    "return": null
  },
  {
    "__docId__": 619,
    "kind": "method",
    "name": "remove",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#remove",
    "access": "public",
    "description": "Dispatches an event when removed from the floorplan({@link Floorplan}) instance. The event object contains reference to this {@link Corner} instance as item.",
    "examples": [
      "let corner = new Corner(floorplan, 0, 0);\nfunction cornerRemoved(e) { console.log('I WAS REMOVED FROM LOCATION ', e.item.x, e.item.y) };\ncorner.remove();"
    ],
    "lineNumber": 208,
    "emits": [
      {
        "types": [
          "EVENT_DELETED"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 620,
    "kind": "method",
    "name": "removeAll",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#removeAll",
    "access": "public",
    "description": "Removes all the connected corners and itself. This in essence removes all the walls({@link Wall}) this corner is connected to.",
    "examples": [
      "let corner1 = new Corner(floorplan, 0, 0);\nlet corner2 = new Corner(floorplan, 10, 0);\nfunction cornerRemoved(e) { console.log('I WAS REMOVED FROM LOCATION ', e.item.x, e.item.y) } //Will log twice for two corners;\ncorner.removeAll();"
    ],
    "lineNumber": 222,
    "params": [],
    "return": null
  },
  {
    "__docId__": 621,
    "kind": "method",
    "name": "move",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#move",
    "access": "public",
    "description": "Moves corner to new position.",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "newX",
        "description": "The new x position."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "newY",
        "description": "The new y position."
      }
    ],
    "return": null
  },
  {
    "__docId__": 624,
    "kind": "method",
    "name": "updateAttachedRooms",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#updateAttachedRooms",
    "access": "public",
    "description": "When a corner is moved from its location it will impact the connected rooms ({@link Room}) shape, thus their areas. This will update the rooms",
    "examples": [
      "let corner = new Corner(floorplan, 0, 0);\ncorner.move(10, 0);"
    ],
    "lineNumber": 264,
    "params": [],
    "return": null
  },
  {
    "__docId__": 625,
    "kind": "method",
    "name": "adjacentCorners",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#adjacentCorners",
    "access": "public",
    "description": "Gets the adjacent corners that are connected to this corner by walls ({@link Wall}).",
    "lineNumber": 274,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Corner[]} Array of corners."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Corner[]"
      ],
      "spread": false,
      "description": "Array of corners."
    },
    "params": []
  },
  {
    "__docId__": 626,
    "kind": "method",
    "name": "isWallConnected",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#isWallConnected",
    "access": "public",
    "description": "Checks if a wall is connected.",
    "lineNumber": 293,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} in case of connection."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "A wall."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "in case of connection."
    }
  },
  {
    "__docId__": 627,
    "kind": "method",
    "name": "distanceFrom",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#distanceFrom",
    "access": "public",
    "description": "Returns the distance between this corner and a point in 2d space",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 319,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "distance The distance"
    }
  },
  {
    "__docId__": 628,
    "kind": "method",
    "name": "distanceFromWall",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#distanceFromWall",
    "access": "public",
    "description": "Gets the distance from a wall.",
    "lineNumber": 330,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} distance The distance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "A wall."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "distance The distance."
    }
  },
  {
    "__docId__": 629,
    "kind": "method",
    "name": "distanceFromCorner",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#distanceFromCorner",
    "access": "public",
    "description": "Gets the distance from a corner.",
    "lineNumber": 339,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} The distance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "A corner."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance."
    }
  },
  {
    "__docId__": 630,
    "kind": "method",
    "name": "detachWall",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#detachWall",
    "access": "public",
    "description": "Detaches a wall.",
    "lineNumber": 347,
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "A wall."
      }
    ],
    "return": null
  },
  {
    "__docId__": 631,
    "kind": "method",
    "name": "attachStart",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#attachStart",
    "access": "public",
    "description": "Attaches a start wall.",
    "lineNumber": 361,
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "A wall."
      }
    ],
    "return": null
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "attachEnd",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#attachEnd",
    "access": "public",
    "description": "Attaches an end wall.",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "A wall."
      }
    ],
    "return": null
  },
  {
    "__docId__": 633,
    "kind": "method",
    "name": "wallTo",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#wallTo",
    "access": "public",
    "description": "Get wall to corner.",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "A corner."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wall"
      ],
      "spread": false,
      "description": "The associated wall or null."
    }
  },
  {
    "__docId__": 634,
    "kind": "method",
    "name": "wallFrom",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#wallFrom",
    "access": "public",
    "description": "Get wall from corner.",
    "lineNumber": 394,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "A corner."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wall"
      ],
      "spread": false,
      "description": "The associated wall or null."
    }
  },
  {
    "__docId__": 635,
    "kind": "method",
    "name": "wallToOrFrom",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#wallToOrFrom",
    "access": "public",
    "description": "Get wall to or from corner.",
    "lineNumber": 410,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "A corner."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wall"
      ],
      "spread": false,
      "description": "The associated wall or null."
    }
  },
  {
    "__docId__": 636,
    "kind": "method",
    "name": "combineWithCorner",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#combineWithCorner",
    "access": "public",
    "description": "Get wall from corner.",
    "lineNumber": 418,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "A corner."
      }
    ],
    "return": null
  },
  {
    "__docId__": 639,
    "kind": "method",
    "name": "mergeWithIntersected",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#mergeWithIntersected",
    "access": "public",
    "description": null,
    "lineNumber": 439,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 642,
    "kind": "method",
    "name": "removeDuplicateWalls",
    "memberof": "scripts/model/corner.js~Corner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/corner.js~Corner#removeDuplicateWalls",
    "access": "public",
    "description": "Ensure we do not have duplicate walls (i.e. same start and end points)",
    "lineNumber": 474,
    "params": [],
    "return": null
  },
  {
    "__docId__": 643,
    "kind": "file",
    "name": "scripts/model/floorplan.js",
    "content": "import {EVENT_UPDATED, EVENT_LOADED, EVENT_NEW, EVENT_DELETED, EVENT_ROOM_NAME_CHANGED} from '../core/events.js';\nimport {EventDispatcher, Vector2, Vector3} from 'three';\nimport {Utils} from '../core/utils.js';\nimport {Dimensioning} from '../core/dimensioning.js';\n\nimport {HalfEdge} from './half_edge.js';\nimport {Corner} from './corner.js';\nimport {Wall} from './wall.js';\nimport {Room} from './room.js';\n\n/** */\nexport const defaultFloorPlanTolerance = 10.0;\n\n/**\n * A Floorplan represents a number of Walls, Corners and Rooms. This is an\n * abstract that keeps the 2d and 3d in sync\n */\nexport class Floorplan extends EventDispatcher\n{\n\t/** Constructs a floorplan. */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\t/**\n\t\t\t* List of elements of Wall instance\n\t\t\t* @property {Wall[]} walls Array of walls\n\t\t\t* @type {Wall[]}\n\t\t**/\n\t\tthis.walls = [];\n\t\t/**\n\t\t\t* List of elements of Corner instance\n\t\t\t* @property {Corner[]} corners array of corners\n\t\t\t* @type {Corner[]}\n\t\t**/\n\t\tthis.corners = [];\n\n\t\t/**\n\t\t* List of elements of Room instance\n\t\t* @property {Room[]} walls Array of walls\n\t\t* @type {Room[]}\n\t\t**/\n\t\tthis.rooms = [];\n\n\t\t/**\n\t\t\t* An {@link Object} that stores the metadata of rooms like name\n\t\t\t* @property {Object} metaroomsdata  stores the metadata of rooms like name\n\t\t\t* @type {Object}\n\t\t**/\n\t\tthis.metaroomsdata = {};\n\t\t// List with reference to callback on a new wall insert event\n\t\t/**\n\t\t\t@deprecated\n\t\t**/\n\t\tthis.new_wall_callbacks = [];\n\t\t// List with reference to callbacks on a new corner insert event\n\t\t/**\n\t\t\t@deprecated\n\t\t**/\n\t\tthis.new_corner_callbacks = [];\n\t\t// List with reference to callbacks on redraw event\n\t\t/**\n\t\t\t@deprecated\n\t\t**/\n\t\tthis.redraw_callbacks = [];\n\t\t// List with reference to callbacks for updated_rooms event\n\t\t/**\n\t\t\t@deprecated\n\t\t**/\n\t\tthis.updated_rooms = [];\n\t\t// List with reference to callbacks for roomLoaded event\n\t\t/**\n\t\t\t@deprecated\n\t\t**/\n\t\tthis.roomLoadedCallbacks = [];\n\n\t\tthis.floorTextures = {};\n\t\t/**\n\t\t\t* The {@link CarbonSheet} that handles the background image to show in the 2D view\n\t\t\t* @property {CarbonSheet} _carbonSheet  The carbonsheet instance\n\t\t\t* @type {Object}\n\t\t**/\n\t\tthis._carbonSheet = null;\n\t}\n\n\t/**\n\t\t*\t@param {CarbonSheet} val\n\t**/\n\tset carbonSheet(val)\n\t{\n\t\tthis._carbonSheet = val;\n\t}\n\n\t/**\n\t\t*\t@return {CarbonSheet} _carbonSheet reference to the instance of {@link CarbonSheet}\n\t**/\n\tget carbonSheet()\n\t{\n\t\treturn this._carbonSheet;\n\t}\n\n\t/**\n\t\t*\t@return {HalfEdge[]} edges The array of {@link HalfEdge} \n\t**/\n\twallEdges()\n\t{\n\t\tvar edges = [];\n\t\tthis.walls.forEach((wall) => {\n\t\t\tif (wall.frontEdge)\n\t\t\t{\n\t\t\t\tedges.push(wall.frontEdge);\n\t\t\t}\n\t\t\tif (wall.backEdge)\n\t\t\t{\n\t\t\t\tedges.push(wall.backEdge);\n\t\t\t}\n\t\t});\n\t\treturn edges;\n\t}\n\n\t/**\n\t\t* Returns the roof planes in the floorplan for intersection testing\n\t\t*\t@return {Mesh[]} planes @see <https://threejs.org/docs/#api/en/objects/Mesh>\n\t**/\n\troofPlanes()\n\t{\n\t\tvar planes = [];\n\t\tthis.rooms.forEach((room) => {\n\t\t\tplanes.push(room.roofPlane);\n\t\t});\n\t\treturn planes;\n\t}\n\n\t/**\n\t\t*\tReturns all the planes for intersection for the walls\n\t\t* @return {Mesh[]} planes @see <https://threejs.org/docs/#api/en/objects/Mesh>\n\t**/\n\twallEdgePlanes()\n\t{\n\t\tvar planes = [];\n\t\tthis.walls.forEach((wall) => {\n\t\t\tif (wall.frontEdge)\n\t\t\t{\n\t\t\t\tplanes.push(wall.frontEdge.plane);\n\t\t\t}\n\t\t\tif (wall.backEdge)\n\t\t\t{\n\t\t\t\tplanes.push(wall.backEdge.plane);\n\t\t\t}\n\t\t});\n\t\treturn planes;\n\t}\n\n\t/**\n\t\t*\tReturns all the planes for intersection of the floors in all room\n\t\t* @return {Mesh[]} planes @see <https://threejs.org/docs/#api/en/objects/Mesh>\n\t**/\n\tfloorPlanes()\n\t{\n\t\treturn Utils.map(this.rooms, (room) => {\n\t\t\treturn room.floorPlane;\n\t\t});\n\t}\n\n\tfireOnNewWall(callback)\n\t{\n\t\tthis.new_wall_callbacks.add(callback);\n\t}\n\n\tfireOnNewCorner(callback)\n\t{\n\t\tthis.new_corner_callbacks.add(callback);\n\t}\n\n\tfireOnRedraw(callback)\n\t{\n\t\tthis.redraw_callbacks.add(callback);\n\t}\n\n\tfireOnUpdatedRooms(callback)\n\t{\n\t\tthis.updated_rooms.add(callback);\n\t}\n\n\t// This method needs to be called from the 2d floorplan whenever\n\t// the other method newWall is called.\n\t// This is to ensure that there are no floating walls going across\n\t// other walls. If two walls are intersecting then the intersection point\n\t// has to create a new wall.\n\t/**\n\t *  Checks existing walls for any intersections they would make. If there are intersections then introduce new corners and new walls as required at places\n\t *  @param {Corner} start\n\t *  @param {Corner} end\n\t *  @return {boolean} intersects \n\t**/\n\n\tnewWallsForIntersections(start, end)\n\t{\n\t\tvar intersections = false;\n\t\t// This is a bug in the logic\n\t\t// When creating a new wall with a start and end\n\t\t// it needs to be checked if it is cutting other walls\n\t\t// If it cuts then all those walls have to removed and introduced as\n\t\t// new walls along with this new wall\n\t\tvar cStart = new Vector2(start.getX(), start.getY());\n\t\tvar cEnd = new Vector2(end.getX(), end.getY());\n\t\tvar newCorners = [];\n\n\t\tfor (var i=0;i<this.walls.length;i++)\n\t\t{\n\t\t\tvar twall = this.walls[i];\n\t\t\tvar bstart = {x:twall.getStartX(), y:twall.getStartY()};\n\t\t\tvar bend = {x:twall.getEndX(), y:twall.getEndY()};\n\t\t\tvar iPoint = Utils.lineLineIntersectPoint(cStart, cEnd, bstart, bend);\n\t\t\tif(iPoint)\n\t\t\t{\n\t\t\t\tvar nCorner = this.newCorner(iPoint.x, iPoint.y);\n\t\t\t\tnewCorners.push(nCorner);\n\t\t\t\tintersections = true;\n\t\t\t}\n\t\t}\n\t\tfor( i=0;i<this.corners.length;i++)\n\t\t{\n\t\t\tvar aCorner = this.corners[i];\n\t\t\tif(aCorner)\n\t\t\t{\n\t\t\t\taCorner.relativeMove(0, 0);\n\t\t\t\taCorner.snapToAxis(25);\n\t\t\t}\n\t\t}\n\t\tthis.update();\n\t\tfor( i=0;i<this.corners.length;i++)\n\t\t{\n\t\t\taCorner = this.corners[i];\n\t\t\tif(aCorner)\n\t\t\t{\n\t\t\t\taCorner.relativeMove(0, 0);\n\t\t\t\taCorner.snapToAxis(25);\n\t\t\t}\n\t\t}\n\n\t\tthis.update();\n\t\treturn intersections;\n\t}\n\n\t/**\n\t * Creates a new wall.\n\t *\n\t * @param {Corner} start The start corner.\n\t * @param {Corner} end The end corner.\n\t * @returns {Wall} The new wall.\n\t */\n\tnewWall(start, end)\n\t{\n\t\tvar wall = new Wall(start, end);\n    this.walls.push(wall);\n\t\tvar scope = this;\n\t\twall.addEventListener(EVENT_DELETED, function(o){scope.removeWall(o.item);});\n\t\tthis.dispatchEvent({type: EVENT_NEW, item: this, newItem: wall});\n\t\tthis.update();\n\t\treturn wall;\n\t}\n\n\n\n\t/**\n\t * Creates a new corner.\n\t *\n\t * @param {Number} x The x coordinate.\n\t * @param {Number} y The y coordinate.\n\t * @param {String} id An optional id. If unspecified, the id will be created internally.\n\t * @returns {Corner} The new corner.\n\t */\n\tnewCorner(x, y, id)\n\t{\n\t\tvar corner = new Corner(this, x, y, id);\n\t\tfor (var i=0;i<this.corners.length;i++)\n\t\t{\n\t\t\t\tvar existingCorner = this.corners[i];\n\t\t\t\tif(existingCorner.distanceFromCorner(corner) < 50)\n\t\t\t\t{\n          return existingCorner;\n\t\t\t\t}\n\t\t}\n\n\t\tvar scope = this;\n\t\tthis.corners.push(corner);\n\t\tcorner.addEventListener(EVENT_DELETED, function(o){scope.removeCorner(o.item);});\n\t\tthis.dispatchEvent({type: EVENT_NEW, item: this, newItem: corner});\n\n\t\t// This code has been added by #0K. There should be an update whenever a\n\t\t// new corner is inserted\n\t\tthis.update();\n\n\t\treturn corner;\n\t}\n\n\t/**\n\t * Removes a wall.\n\t *\n\t * @param {Wall} wall The wall to be removed.\n\t */\n\tremoveWall(wall)\n\t{\n\t\tUtils.removeValue(this.walls, wall);\n\t\tthis.update();\n\t}\n\n\t/**\n\t * Removes a corner.\n\t *\n\t * @param {Corner} corner The corner to be removed.\n\t */\n\tremoveCorner(corner)\n\t{\n\t\tUtils.removeValue(this.corners, corner);\n\t}\n\n\t/** Gets the walls.\n\t\t* @return {Wall[]}\n\t **/\n\tgetWalls()\n\t{\n\t\treturn this.walls;\n\t}\n\n\t/** Gets the corners.\n\t\t* @return {Corner[]}\n\t**/\n\tgetCorners()\n\t{\n\t\treturn this.corners;\n\t}\n\n\t/** Gets the rooms.\n\t\t* @return {Room[]}\n\t**/\n\tgetRooms()\n\t{\n\t\treturn this.rooms;\n\t}\n\n\t/** Gets the room overlapping the location x, y.\n\t\t* @param {Number} mx\n\t\t* @param {Number} my\n\t\t* @return {Room}\n\t**/\n\toverlappedRoom(mx, my)\n\t{\n\t\t\tfor (var i=0;i<this.rooms.length;i++)\n\t\t\t{\n\t\t\t\t\tvar room = this.rooms[i];\n\t\t\t\t\tvar flag = room.pointInRoom(new Vector2(mx, my));\n\t\t\t\t\tif(flag)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t}\n\n\t/** Gets the Corner overlapping the location x, y at a tolerance.\n\t\t* @param {Number} x\n\t\t* @param {Number} y\n\t\t* @param {Number} tolerance\n\t\t* @return {Corner}\n\t**/\n\toverlappedCorner(x, y, tolerance)\n\t{\n\t\ttolerance = tolerance || defaultFloorPlanTolerance;\n\t\tfor (var i = 0; i < this.corners.length; i++)\n\t\t{\n\t\t\tif (this.corners[i].distanceFrom(new Vector2(x, y)) < tolerance)\n\t\t\t{\n\t\t\t\treturn this.corners[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** Gets the Wall overlapping the location x, y at a tolerance.\n\t\t* @param {Number} x\n\t\t* @param {Number} y\n\t\t* @param {Number} tolerance\n\t\t* @return {Wall}\n\t**/\n\toverlappedWall(x, y, tolerance)\n\t{\n\t\ttolerance = tolerance || defaultFloorPlanTolerance;\n\t\tfor (var i = 0; i < this.walls.length; i++)\n\t\t{\n\t\t\tif (this.walls[i].distanceFrom(new Vector2(x, y)) < tolerance)\n\t\t\t{\n\t\t\t\treturn this.walls[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/** The metadata object with information about the rooms.\n\t\t* @return {Object} metaroomdata an object with room corner ids as key and names as values\n\t**/\n\tgetMetaRoomData()\n\t{\n\t\t  var metaRoomData = {};\n\t\t\tthis.rooms.forEach((room)=>{\n\t\t\t\tvar metaroom = {};\n\t\t\t\t// var cornerids = [];\n\t\t\t\t// room.corners.forEach((corner)=>{\n\t\t\t\t// \t\tcornerids.push(corner.id);\n\t\t\t\t// });\n\t\t\t\t// var ids = cornerids.join(',');\n\t\t\t\tvar ids = room.roomByCornersId;\n\t\t\t\tmetaroom['name'] = room.name;\n\t\t\t\tmetaRoomData[ids] = metaroom;\n\t\t\t});\n\t\t\treturn metaRoomData;\n\t}\n\n\t// Save the floorplan as a json object file\n\t/**\n\t\t*\t@return {void}\n\t**/\n\tsaveFloorplan()\n\t{\n\t\tvar floorplans = {corners: {}, walls: [], rooms: {}, wallTextures: [], floorTextures: {}, newFloorTextures: {}, carbonSheet:{}};\n\t\tvar cornerIds = [];\n// writing all the corners based on the corners array\n// is having a bug. This is because some walls have corners\n// that aren't part of the corners array anymore. This is a quick fix\n// by adding the corners to the json file based on the corners in the walls\n// this.corners.forEach((corner) => {\n// floorplans.corners[corner.id] = {'x': corner.x,'y': corner.y};\n// });\n\n\t\tthis.walls.forEach((wall) => {\n\t\t\tif(wall.getStart() && wall.getEnd())\n\t\t\t{\n\t\t\t\tfloorplans.walls.push({\n\t\t\t\t\t'corner1': wall.getStart().id,\n\t\t\t\t\t'corner2': wall.getEnd().id,\n\t\t\t\t\t'frontTexture': wall.frontTexture,\n\t\t\t\t\t'backTexture': wall.backTexture\n\t\t\t\t});\n\t\t\t\tcornerIds.push(wall.getStart());\n\t\t\t\tcornerIds.push(wall.getEnd());\n\t\t\t}\n\t\t});\n\n\t\tcornerIds.forEach((corner)=>{\n\t\t\tfloorplans.corners[corner.id] = {'x': corner.x,'y': corner.y, 'elevation': Dimensioning.cmToMeasureRaw(corner.elevation)};\n\t\t});\n\n\t\tthis.rooms.forEach((room)=>{\n\t\t\tvar metaroom = {};\n\t\t\tvar cornerids = [];\n\t\t\troom.corners.forEach((corner)=>{\n\t\t\t\t\tcornerids.push(corner.id);\n\t\t\t});\n\t\t\tvar ids = cornerids.join(',');\n\t\t\tmetaroom['name'] = room.name;\n\t\t\tfloorplans.rooms[ids] = metaroom;\n\t\t});\n\t\t// floorplans.rooms = this.getMetaRoomData();\n\n\t\tif(this.carbonSheet)\n\t\t{\n\t\t\tfloorplans.carbonSheet['url'] = this.carbonSheet.url;\n\t\t\tfloorplans.carbonSheet['transparency'] = this.carbonSheet.transparency;\n\t\t\tfloorplans.carbonSheet['x'] = this.carbonSheet.x;\n\t\t\tfloorplans.carbonSheet['y'] = this.carbonSheet.y;\n\t\t\tfloorplans.carbonSheet['anchorX'] = this.carbonSheet.anchorX;\n\t\t\tfloorplans.carbonSheet['anchorY'] = this.carbonSheet.anchorY;\n\t\t\tfloorplans.carbonSheet['width'] = this.carbonSheet.width;\n\t\t\tfloorplans.carbonSheet['height'] = this.carbonSheet.height;\n\t\t}\n\n\t\tfloorplans.newFloorTextures = this.floorTextures;\n\t\treturn floorplans;\n\t}\n\n\t//Load the floorplan from a previously saved json object file\n\t/**\n\t\t*\t@param {JSON} floorplan\n\t\t*\t@return {void}\n\t\t*\t@emits {EVENT_LOADED}\n\t**/\n\tloadFloorplan(floorplan)\n\t{\n\t\tthis.reset();\n\n\t\tvar corners = {};\n\t\tif (floorplan == null || !('corners' in floorplan) || !('walls' in floorplan))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tfor (var id in floorplan.corners)\n\t\t{\n\t\t\tvar corner = floorplan.corners[id];\n\t\t\tcorners[id] = this.newCorner(corner.x, corner.y, id);\n\t\t\tif(corner.elevation)\n\t\t\t{\n\t\t\t\t\tcorners[id].elevation = corner.elevation;\n\t\t\t}\n\t\t}\n\t\tvar scope = this;\n\t\tfloorplan.walls.forEach((wall) => {\n\t\t\tvar newWall = scope.newWall(corners[wall.corner1], corners[wall.corner2]);\n\t\t\tif (wall.frontTexture)\n\t\t\t{\n\t\t\t\tnewWall.frontTexture = wall.frontTexture;\n\t\t\t}\n\t\t\tif (wall.backTexture)\n\t\t\t{\n\t\t\t\tnewWall.backTexture = wall.backTexture;\n\t\t\t}\n\t\t});\n\n\t\tif ('newFloorTextures' in floorplan)\n\t\t{\n\t\t\tthis.floorTextures = floorplan.newFloorTextures;\n\t\t}\n\t\tthis.metaroomsdata = floorplan.rooms;\n\n\t\tthis.update();\n\n\t\tif('carbonSheet' in floorplan)\n\t\t{\n\t\t\tthis.carbonSheet.clear();\n\t\t\tthis.carbonSheet.maintainProportion = false;\n\t\t\tthis.carbonSheet.x = floorplan.carbonSheet['x'];\n\t\t\tthis.carbonSheet.y = floorplan.carbonSheet['y'];\n\t\t\tthis.carbonSheet.transparency = floorplan.carbonSheet['transparency'];\n\t\t\tthis.carbonSheet.anchorX = floorplan.carbonSheet['anchorX'];\n\t\t\tthis.carbonSheet.anchorY = floorplan.carbonSheet['anchorY'];\n\t\t\tthis.carbonSheet.width = floorplan.carbonSheet['width'];\n\t\t\tthis.carbonSheet.height = floorplan.carbonSheet['height'];\n\t\t\tthis.carbonSheet.url = floorplan.carbonSheet['url'];\n\t\t\tthis.carbonSheet.maintainProportion = true;\n\t\t}\n\t\tthis.dispatchEvent({type: EVENT_LOADED, item: this});\n// this.roomLoadedCallbacks.fire();\n\t}\n\n\t/**\n\t\t* @deprecated\n\t**/\n\tgetFloorTexture(uuid)\n\t{\n\t\tif (uuid in this.floorTextures)\n\t\t{\n\t\t\treturn this.floorTextures[uuid];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\t* @deprecated\n\t**/\n\tsetFloorTexture(uuid, url, scale)\n\t{\n\t\tthis.floorTextures[uuid] = {url: url,scale: scale};\n\t}\n\n\t/** clear out obsolete floor textures */\n\t/**\n\t\t* @deprecated\n\t**/\n\tupdateFloorTextures()\n\t{\n\t\tvar uuids = Utils.map(this.rooms, function (room){return room.getUuid();});\n\t\tfor (var uuid in this.floorTextures)\n\t\t{\n\t\t\tif (!Utils.hasValue(uuids, uuid))\n\t\t\t{\n\t\t\t\tdelete this.floorTextures[uuid];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t\t* Resets the floorplan data to empty\n\t\t* @return {void}\n\t**/\n\treset()\n\t{\n\t\tvar tmpCorners = this.corners.slice(0);\n\t\tvar tmpWalls = this.walls.slice(0);\n\t\ttmpCorners.forEach((corner) => {\n\t\t\tcorner.remove();\n\t\t});\n\t\ttmpWalls.forEach((wall) => {\n\t\t\twall.remove();\n\t\t});\n\t\tthis.corners = [];\n\t\tthis.walls = [];\n\t}\n\n\t/**\n\t\t* @param {Object} event\n\t\t* @listens {EVENT_ROOM_NAME_CHANGED} When a room name is changed and updates to metaroomdata\n\t**/\n\troomNameChanged(e)\n\t{\n\t\t\tif(this.metaroomsdata)\n\t\t\t{\n\t\t\t\t\tthis.metaroomsdata[e.item.roomByCornersId] = e.newname;\n\t\t\t}\n\t}\n\n\t/**\n\t *\tUpdate the floorplan with new rooms, remove old rooms etc.\n\t */\n\tupdate()\n\t{\n\t\tvar scope = this;\n\t\tthis.walls.forEach((wall) => {\n\t\t\twall.resetFrontBack();\n\t\t});\n\n\t\t// this.rooms.forEach((room)=>{room.removeEventListener(EVENT_ROOM_NAME_CHANGED, scope.roomNameChanged)});\n\n\t\tvar roomCorners = this.findRooms(this.corners);\n\t\tthis.rooms = [];\n\n\n\t\tthis.corners.forEach((corner)=>{\n\t\t\tcorner.clearAttachedRooms();\n\t\t});\n\n\t\troomCorners.forEach((corners) =>\n\t\t{\n\t\t\tvar room = new Room(scope, corners);\n\t\t\troom.updateArea();\n\t\t\tscope.rooms.push(room);\n\t\t\troom.addEventListener(EVENT_ROOM_NAME_CHANGED, (e)=>{scope.roomNameChanged(e);});\n\t\t\tif(scope.metaroomsdata)\n\t\t\t{\n\t\t\t\t// var allids = Object.keys(scope.metaroomsdata);\n\t\t\t\tif(scope.metaroomsdata[room.roomByCornersId])\n\t\t\t\t{\n\t\t\t\t\troom.name = scope.metaroomsdata[room.roomByCornersId];\n\t\t\t\t}\n\t\t\t\t// for (var i=0;i<allids.length;i++)\n\t\t\t\t// {\n\t\t\t\t// \t\tvar keyName = allids[i];\n\t\t\t\t// \t\tvar ids = keyName.split(',');\n\t\t\t\t// \t\tvar isThisRoom = room.hasAllCornersById(ids);\n\t\t\t\t// \t\tif(isThisRoom)\n\t\t\t\t// \t\t{\n\t\t\t\t// \t\t\t\troom.name = scope.metaroomsdata[keyName]['name'];\n\t\t\t\t// \t\t}\n\t\t\t\t// }\n\t\t\t}\n\t\t});\n\n\t\t// this.metaroomsdata = this.getMetaRoomData();\n\t\tthis.assignOrphanEdges();\n\t\tthis.updateFloorTextures();\n\t\tthis.dispatchEvent({type: EVENT_UPDATED, item: this});\n// this.updated_rooms.fire();\n\t}\n\n\t/**\n\t * Returns the center of the floorplan in the y plane\n\t * @return {Vector2} center\n\t *\t@see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\tgetCenter()\n\t{\n\t\treturn this.getDimensions(true);\n\t}\n\n\t/**\n\t * Returns the bounding volume of the full floorplan\n\t * @return {Vector3} size\n\t *\t@see https://threejs.org/docs/#api/en/math/Vector3\n\t */\n\tgetSize()\n\t{\n\t\treturn this.getDimensions(false);\n\t}\n\n\t/**\n\t * Returns the bounding size or the center location of the full floorplan\n\t *\t@param {boolean} center If true return the center else the size\n\t * @return {Vector3} size\n\t *\t@see https://threejs.org/docs/#api/en/math/Vector3\n\t */\n\tgetDimensions(center)\n\t{\n\t\tcenter = center || false; // otherwise, get size\n\n\t\tvar xMin = Infinity;\n\t\tvar xMax = -Infinity;\n\t\tvar zMin = Infinity;\n\t\tvar zMax = -Infinity;\n\t\tthis.corners.forEach((corner) => {\n\t\t\tif (corner.x < xMin) xMin = corner.x;\n\t\t\tif (corner.x > xMax) xMax = corner.x;\n\t\t\tif (corner.y < zMin) zMin = corner.y;\n\t\t\tif (corner.y > zMax) zMax = corner.y;\n\t\t});\n\t\tvar ret;\n\t\tif (xMin == Infinity || xMax == -Infinity || zMin == Infinity || zMax == -Infinity)\n\t\t{\n\t\t\tret = new Vector3();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (center)\n\t\t\t{\n\t\t\t\t// center\n\t\t\t\tret = new Vector3((xMin + xMax) * 0.5, 0, (zMin + zMax) * 0.5);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// size\n\t\t\t\tret = new Vector3((xMax - xMin), 0, (zMax - zMin));\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * An internal cleanup method\n\t */\n\tassignOrphanEdges()\n\t{\n\t\t// kinda hacky\n\t\t// find orphaned wall segments (i.e. not part of rooms) and\n\t\t// give them edges\n\t\tvar orphanWalls = [];\n\t\tthis.walls.forEach((wall) => {\n\t\t\tif (!wall.backEdge && !wall.frontEdge)\n\t\t\t{\n\t\t\t\twall.orphan = true;\n\t\t\t\tvar back = new HalfEdge(null, wall, false);\n\t\t\t\tvar front = new HalfEdge(null, wall, true);\n\t\t\t\tback.generatePlane();\n\t\t\t\tfront.generatePlane();\n\t\t\t\torphanWalls.push(wall);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Find the \"rooms\" in our planar straight-line graph. Rooms are set of the\n\t * smallest (by area) possible cycles in this graph. @param corners The\n\t * corners of the floorplan. @returns The rooms, each room as an array of\n\t * corners.\n\t *\t@param {Corners[]} corners\n\t * @return {Corners[][]} loops\n\t **/\n\tfindRooms(corners)\n\t{\n\n\t\tfunction _calculateTheta(previousCorner, currentCorner, nextCorner)\n\t\t{\n\t\t\tvar theta = Utils.angle2pi(new Vector2(previousCorner.x - currentCorner.x, previousCorner.y - currentCorner.y), new Vector2(nextCorner.x - currentCorner.x, nextCorner.y - currentCorner.y));\n\t\t\treturn theta;\n\t\t}\n\n\t\tfunction _removeDuplicateRooms(roomArray)\n\t\t{\n\t\t\tvar results = [];\n\t\t\tvar lookup = {};\n\t\t\tvar hashFunc = function (corner)\n\t\t\t{\n\t\t\t\treturn corner.id;\n\t\t\t};\n\t\t\tvar sep = '-';\n\t\t\tfor (var i = 0; i < roomArray.length; i++)\n\t\t\t{\n\t\t\t\t// rooms are cycles, shift it around to check uniqueness\n\t\t\t\tvar add = true;\n\t\t\t\tvar room = roomArray[i];\n\t\t\t\tfor (var j = 0; j < room.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar roomShift = Utils.cycle(room, j);\n\t\t\t\t\tvar str = Utils.map(roomShift, hashFunc).join(sep);\n\t\t\t\t\tif (lookup.hasOwnProperty(str))\n\t\t\t\t\t{\n\t\t\t\t\t\tadd = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (add)\n\t\t\t\t{\n\t\t\t\t\tresults.push(roomArray[i]);\n\t\t\t\t\tlookup[str] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\n\t\t/**\n\t\t * An internal method to find rooms based on corners and their connectivities\n\t\t */\n\t\tfunction _findTightestCycle(firstCorner, secondCorner)\n\t\t{\n\t\t\tvar stack = [];\n\t\t\tvar next = {corner: secondCorner,previousCorners: [firstCorner]};\n\t\t\tvar visited = {};\n\t\t\tvisited[firstCorner.id] = true;\n\n\t\t\twhile (next)\n\t\t\t{\n\t\t\t\t// update previous corners, current corner, and visited corners\n\t\t\t\tvar currentCorner = next.corner;\n\t\t\t\tvisited[currentCorner.id] = true;\n\n\t\t\t\t// did we make it back to the startCorner?\n\t\t\t\tif (next.corner === firstCorner && currentCorner !== secondCorner)\n\t\t\t\t{\n\t\t\t\t\treturn next.previousCorners;\n\t\t\t\t}\n\n\t\t\t\tvar addToStack = [];\n\t\t\t\tvar adjacentCorners = next.corner.adjacentCorners();\n\t\t\t\tfor (var i = 0; i < adjacentCorners.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar nextCorner = adjacentCorners[i];\n\n\t\t\t\t\t// is this where we came from?\n\t\t\t\t\t// give an exception if its the first corner and we aren't\n\t\t\t\t\t// at the second corner\n\t\t\t\t\tif (nextCorner.id in visited && !(nextCorner === firstCorner && currentCorner !== secondCorner))\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// nope, throw it on the queue\n\t\t\t\t\taddToStack.push(nextCorner);\n\t\t\t\t}\n\n\t\t\t\tvar previousCorners = next.previousCorners.slice(0);\n\t\t\t\tpreviousCorners.push(currentCorner);\n\t\t\t\tif (addToStack.length > 1)\n\t\t\t\t{\n\t\t\t\t\t// visit the ones with smallest theta first\n\t\t\t\t\tvar previousCorner = next.previousCorners[next.previousCorners.length - 1];\n\t\t\t\t\taddToStack.sort(function (a, b){return (_calculateTheta(previousCorner, currentCorner, b) - _calculateTheta(previousCorner, currentCorner, a));});\n\t\t\t\t}\n\n\t\t\t\tif (addToStack.length > 0)\n\t\t\t\t{\n\t\t\t\t\t// add to the stack\n\t\t\t\t\taddToStack.forEach((corner) => {\n\t\t\t\t\t\tstack.push({ corner: corner, previousCorners: previousCorners});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// pop off the next one\n\t\t\t\tnext = stack.pop();\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\t// find tightest loops, for each corner, for each adjacent\n\t\t// TODO: optimize this, only check corners with > 2 adjacents, or\n\t\t// isolated cycles\n\t\tvar loops = [];\n\n\t\tcorners.forEach((firstCorner) => {\n\t\t\tfirstCorner.adjacentCorners().forEach((secondCorner) => {\n\t\t\t\tloops.push(_findTightestCycle(firstCorner, secondCorner));\n\t\t\t});\n\t\t});\n\n\t\t// remove duplicates\n\t\tvar uniqueLoops = _removeDuplicateRooms(loops);\n\t\t// remove CW loops\n\t\tvar uniqueCCWLoops = Utils.removeIf(uniqueLoops, Utils.isClockwise);\n\t\treturn uniqueCCWLoops;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/floorplan.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 644,
    "kind": "variable",
    "name": "defaultFloorPlanTolerance",
    "memberof": "scripts/model/floorplan.js",
    "static": true,
    "longname": "scripts/model/floorplan.js~defaultFloorPlanTolerance",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/floorplan.js",
    "importStyle": "{defaultFloorPlanTolerance}",
    "description": "",
    "lineNumber": 12,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 645,
    "kind": "class",
    "name": "Floorplan",
    "memberof": "scripts/model/floorplan.js",
    "static": true,
    "longname": "scripts/model/floorplan.js~Floorplan",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/floorplan.js",
    "importStyle": "{Floorplan}",
    "description": "A Floorplan represents a number of Walls, Corners and Rooms. This is an\nabstract that keeps the 2d and 3d in sync",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 646,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#constructor",
    "access": "public",
    "description": "Constructs a floorplan.",
    "lineNumber": 21
  },
  {
    "__docId__": 647,
    "kind": "member",
    "name": "walls",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#walls",
    "access": "public",
    "description": "List of elements of Wall instance",
    "lineNumber": 29,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Wall[]"
        ],
        "spread": false,
        "optional": false,
        "name": "walls",
        "description": "Array of walls"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Wall[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 648,
    "kind": "member",
    "name": "corners",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#corners",
    "access": "public",
    "description": "List of elements of Corner instance",
    "lineNumber": 35,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Corner[]"
        ],
        "spread": false,
        "optional": false,
        "name": "corners",
        "description": "array of corners"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Corner[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 649,
    "kind": "member",
    "name": "rooms",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#rooms",
    "access": "public",
    "description": "List of elements of Room instance",
    "lineNumber": 42,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Room[]"
        ],
        "spread": false,
        "optional": false,
        "name": "walls",
        "description": "Array of walls"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Room[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "metaroomsdata",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#metaroomsdata",
    "access": "public",
    "description": "An {@link Object} that stores the metadata of rooms like name",
    "lineNumber": 49,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "metaroomsdata",
        "description": "stores the metadata of rooms like name"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 651,
    "kind": "member",
    "name": "new_wall_callbacks",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#new_wall_callbacks",
    "access": "public",
    "description": "",
    "lineNumber": 54,
    "deprecated": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 652,
    "kind": "member",
    "name": "new_corner_callbacks",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#new_corner_callbacks",
    "access": "public",
    "description": "",
    "lineNumber": 59,
    "deprecated": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 653,
    "kind": "member",
    "name": "redraw_callbacks",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#redraw_callbacks",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "deprecated": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 654,
    "kind": "member",
    "name": "updated_rooms",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#updated_rooms",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "deprecated": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 655,
    "kind": "member",
    "name": "roomLoadedCallbacks",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#roomLoadedCallbacks",
    "access": "public",
    "description": "",
    "lineNumber": 74,
    "deprecated": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 656,
    "kind": "member",
    "name": "floorTextures",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#floorTextures",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 657,
    "kind": "member",
    "name": "_carbonSheet",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#_carbonSheet",
    "access": "private",
    "description": "The {@link CarbonSheet} that handles the background image to show in the 2D view",
    "lineNumber": 82,
    "properties": [
      {
        "nullable": null,
        "types": [
          "CarbonSheet"
        ],
        "spread": false,
        "optional": false,
        "name": "_carbonSheet",
        "description": "The carbonsheet instance"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 658,
    "kind": "set",
    "name": "carbonSheet",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#carbonSheet",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "CarbonSheet"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 660,
    "kind": "get",
    "name": "carbonSheet",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#carbonSheet",
    "access": "public",
    "description": "",
    "lineNumber": 96,
    "return": {
      "nullable": null,
      "types": [
        "CarbonSheet"
      ],
      "spread": false,
      "description": "_carbonSheet reference to the instance of {@link CarbonSheet}"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 661,
    "kind": "method",
    "name": "wallEdges",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#wallEdges",
    "access": "public",
    "description": "",
    "lineNumber": 104,
    "return": {
      "nullable": null,
      "types": [
        "HalfEdge[]"
      ],
      "spread": false,
      "description": "edges The array of {@link HalfEdge}"
    },
    "params": []
  },
  {
    "__docId__": 662,
    "kind": "method",
    "name": "roofPlanes",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#roofPlanes",
    "access": "public",
    "description": "Returns the roof planes in the floorplan for intersection testing",
    "lineNumber": 124,
    "return": {
      "nullable": null,
      "types": [
        "Mesh[]"
      ],
      "spread": false,
      "description": "planes @see <https://threejs.org/docs/#api/en/objects/Mesh>"
    },
    "params": []
  },
  {
    "__docId__": 663,
    "kind": "method",
    "name": "wallEdgePlanes",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#wallEdgePlanes",
    "access": "public",
    "description": "Returns all the planes for intersection for the walls",
    "lineNumber": 137,
    "return": {
      "nullable": null,
      "types": [
        "Mesh[]"
      ],
      "spread": false,
      "description": "planes @see <https://threejs.org/docs/#api/en/objects/Mesh>"
    },
    "params": []
  },
  {
    "__docId__": 664,
    "kind": "method",
    "name": "floorPlanes",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#floorPlanes",
    "access": "public",
    "description": "Returns all the planes for intersection of the floors in all room",
    "lineNumber": 157,
    "return": {
      "nullable": null,
      "types": [
        "Mesh[]"
      ],
      "spread": false,
      "description": "planes @see <https://threejs.org/docs/#api/en/objects/Mesh>"
    },
    "params": []
  },
  {
    "__docId__": 665,
    "kind": "method",
    "name": "fireOnNewWall",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#fireOnNewWall",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 666,
    "kind": "method",
    "name": "fireOnNewCorner",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#fireOnNewCorner",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 667,
    "kind": "method",
    "name": "fireOnRedraw",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#fireOnRedraw",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 668,
    "kind": "method",
    "name": "fireOnUpdatedRooms",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#fireOnUpdatedRooms",
    "access": "public",
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 669,
    "kind": "method",
    "name": "newWallsForIntersections",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#newWallsForIntersections",
    "access": "public",
    "description": " Checks existing walls for any intersections they would make. If there are intersections then introduce new corners and new walls as required at places",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "intersects"
    }
  },
  {
    "__docId__": 670,
    "kind": "method",
    "name": "newWall",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#newWall",
    "access": "public",
    "description": "Creates a new wall.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Wall} The new wall."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The start corner."
      },
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The end corner."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wall"
      ],
      "spread": false,
      "description": "The new wall."
    }
  },
  {
    "__docId__": 671,
    "kind": "method",
    "name": "newCorner",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#newCorner",
    "access": "public",
    "description": "Creates a new corner.",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Corner} The new corner."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "An optional id. If unspecified, the id will be created internally."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Corner"
      ],
      "spread": false,
      "description": "The new corner."
    }
  },
  {
    "__docId__": 672,
    "kind": "method",
    "name": "removeWall",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#removeWall",
    "access": "public",
    "description": "Removes a wall.",
    "lineNumber": 302,
    "params": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "The wall to be removed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 673,
    "kind": "method",
    "name": "removeCorner",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#removeCorner",
    "access": "public",
    "description": "Removes a corner.",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "The corner to be removed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 674,
    "kind": "method",
    "name": "getWalls",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getWalls",
    "access": "public",
    "description": "Gets the walls.",
    "lineNumber": 321,
    "return": {
      "nullable": null,
      "types": [
        "Wall[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 675,
    "kind": "method",
    "name": "getCorners",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getCorners",
    "access": "public",
    "description": "Gets the corners.",
    "lineNumber": 329,
    "return": {
      "nullable": null,
      "types": [
        "Corner[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 676,
    "kind": "method",
    "name": "getRooms",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getRooms",
    "access": "public",
    "description": "Gets the rooms.",
    "lineNumber": 337,
    "return": {
      "nullable": null,
      "types": [
        "Room[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 677,
    "kind": "method",
    "name": "overlappedRoom",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#overlappedRoom",
    "access": "public",
    "description": "Gets the room overlapping the location x, y.",
    "lineNumber": 347,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "mx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "my",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Room"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 678,
    "kind": "method",
    "name": "overlappedCorner",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#overlappedCorner",
    "access": "public",
    "description": "Gets the Corner overlapping the location x, y at a tolerance.",
    "lineNumber": 368,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tolerance",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Corner"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 679,
    "kind": "method",
    "name": "overlappedWall",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#overlappedWall",
    "access": "public",
    "description": "Gets the Wall overlapping the location x, y at a tolerance.",
    "lineNumber": 387,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tolerance",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Wall"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 680,
    "kind": "method",
    "name": "getMetaRoomData",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getMetaRoomData",
    "access": "public",
    "description": "The metadata object with information about the rooms.",
    "lineNumber": 403,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "metaroomdata an object with room corner ids as key and names as values"
    },
    "params": []
  },
  {
    "__docId__": 681,
    "kind": "method",
    "name": "saveFloorplan",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#saveFloorplan",
    "access": "public",
    "description": "",
    "lineNumber": 424,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 682,
    "kind": "method",
    "name": "loadFloorplan",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#loadFloorplan",
    "access": "public",
    "description": "",
    "lineNumber": 488,
    "params": [
      {
        "nullable": null,
        "types": [
          "JSON"
        ],
        "spread": false,
        "optional": false,
        "name": "floorplan",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "EVENT_LOADED"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 685,
    "kind": "method",
    "name": "getFloorTexture",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getFloorTexture",
    "access": "public",
    "description": "",
    "lineNumber": 548,
    "deprecated": true,
    "params": [
      {
        "name": "uuid",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 686,
    "kind": "method",
    "name": "setFloorTexture",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#setFloorTexture",
    "access": "public",
    "description": "",
    "lineNumber": 560,
    "deprecated": true,
    "params": [
      {
        "name": "uuid",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "scale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 687,
    "kind": "method",
    "name": "updateFloorTextures",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#updateFloorTextures",
    "access": "public",
    "description": "",
    "lineNumber": 569,
    "deprecated": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 688,
    "kind": "method",
    "name": "reset",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#reset",
    "access": "public",
    "description": "Resets the floorplan data to empty",
    "lineNumber": 585,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 691,
    "kind": "method",
    "name": "roomNameChanged",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#roomNameChanged",
    "access": "public",
    "description": "",
    "lineNumber": 603,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "listens": [
      {
        "types": [
          "EVENT_ROOM_NAME_CHANGED"
        ],
        "description": "When a room name is changed and updates to metaroomdata"
      }
    ],
    "return": null
  },
  {
    "__docId__": 692,
    "kind": "method",
    "name": "update",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#update",
    "access": "public",
    "description": "Update the floorplan with new rooms, remove old rooms etc.",
    "lineNumber": 614,
    "params": [],
    "return": null
  },
  {
    "__docId__": 694,
    "kind": "method",
    "name": "getCenter",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getCenter",
    "access": "public",
    "description": "Returns the center of the floorplan in the y plane",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 669,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "center"
    },
    "params": []
  },
  {
    "__docId__": 695,
    "kind": "method",
    "name": "getSize",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getSize",
    "access": "public",
    "description": "Returns the bounding volume of the full floorplan",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector3"
    ],
    "lineNumber": 679,
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "size"
    },
    "params": []
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#getDimensions",
    "access": "public",
    "description": "Returns the bounding size or the center location of the full floorplan",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector3"
    ],
    "lineNumber": 690,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "If true return the center else the size"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "size"
    }
  },
  {
    "__docId__": 697,
    "kind": "method",
    "name": "assignOrphanEdges",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#assignOrphanEdges",
    "access": "public",
    "description": "An internal cleanup method",
    "lineNumber": 728,
    "params": [],
    "return": null
  },
  {
    "__docId__": 698,
    "kind": "method",
    "name": "findRooms",
    "memberof": "scripts/model/floorplan.js~Floorplan",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/floorplan.js~Floorplan#findRooms",
    "access": "public",
    "description": "Find the \"rooms\" in our planar straight-line graph. Rooms are set of the\nsmallest (by area) possible cycles in this graph. @param corners The\ncorners of the floorplan. @returns The rooms, each room as an array of\ncorners.",
    "lineNumber": 755,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corners[]"
        ],
        "spread": false,
        "optional": false,
        "name": "corners",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Corners[][]"
      ],
      "spread": false,
      "description": "loops"
    }
  },
  {
    "__docId__": 699,
    "kind": "file",
    "name": "scripts/model/half_edge.js",
    "content": "import {EventDispatcher, Vector2, Vector3, Matrix4, Face3, Mesh, Geometry, MeshBasicMaterial, Box3} from 'three';\nimport {EVENT_REDRAW} from '../core/events.js';\nimport {Utils} from '../core/utils.js';\n\n\n/**\n * Half Edges are created by Room.\n *\n * Once rooms have been identified, Half Edges are created for each interior wall.\n *\n * A wall can have two half edges if it is visible from both sides.\n */\nexport class HalfEdge extends EventDispatcher\n{\n\t/**\n\t * Constructs a half edge.\n\t * @param {Room} room The associated room. Instance of Room\n\t * @param {Wall} wall The corresponding wall. Instance of Wall\n\t * @param {boolean} front True if front side. Boolean value\n\t */\n\tconstructor(room, wall, front)\n\t{\n\t\tsuper();\n\n\t\t/**  The minimum point in space calculated from the bounds\n\t\t * @property {Vector3} min  The minimum point in space calculated from the bounds\n\t\t * @type {Vector3}\n\t\t * @see https://threejs.org/docs/#api/en/math/Vector3\n\t\t**/\n\t\tthis.min = null;\n\t\t\n\t\t/**\n\t\t * The maximum point in space calculated from the bounds\n\t\t * @property {Vector3} max\t The maximum point in space calculated from the bounds\n\t\t * @type {Vector3}\n\t\t * @see https://threejs.org/docs/#api/en/math/Vector3\n\t\t**/\n\t\tthis.max = null;\n\n\t\t/**\n\t\t * The center of this half edge\n\t\t * @property {Vector3} center The center of this half edge\n\t\t * @type {Vector3}\n\t\t * @see https://threejs.org/docs/#api/en/math/Vector3\n\t\t**/\n\t\tthis.center = null;\n\n\t\t/**\n\t\t * Reference to a Room instance\n\t\t * @property {Room} room Reference to a Room instance\n\t\t * @type {Room}\n\t\t**/\n\t\tthis.room = room;\n\t\t\n\t\t/** \n\t\t *  Reference to a Wall instance\n\t\t * @property {Wall} room Reference to a Wall instance\n\t\t * @type {Wall}\n\t\t**/\n\t\tthis.wall = wall;\n\t\t\n\t\t/**\n\t\t * Reference to the next halfedge instance connected to this\n\t\t * @property {HalfEdge} next Reference to the next halfedge instance connected to this\n\t\t * @type {HalfEdge}\n\t\t**/\n\t\tthis.next = null;\n\t\t\n\t\t/**\n\t\t * Reference to the previous halfedge instance connected to this\n\t\t * @property {HalfEdge} prev Reference to the previous halfedge instance connected to this\n\t\t * @type {HalfEdge}\n\t\t**/\n\t\tthis.prev = null;\n\t\t\n\t\t/** \n\t\t * The offset to maintain for the front and back walls from the midline of a wall\n\t\t * @property {Number} offset The offset to maintain for the front and back walls from the midline of a wall\n\t\t * @type {Number}\n\t\t**/\n\t\tthis.offset = 0.0;\n\n\t\t/**\n\t\t *  The height of a wall\n\t\t * @property {Number} height The height of a wall\n\t\t * @type {Number}\n\t\t**/\n\t\tthis.height = 0.0;\n\t\t\n\t\t/**\n\t\t * The plane mesh that will be used for checking intersections of wall items\n\t\t * @property {Mesh} plane The plane mesh that will be used for checking intersections of wall items\n\t\t * @type {Mesh}\n\t\t * @see https://threejs.org/docs/#api/en/objects/Mesh\n\t\t */\n\t\tthis.plane = null;\n\t\t\n\t\t/**\n\t\t * The interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @property {Matrix4} interiorTransform The interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @type {Matrix4} \n\t\t * @see https://threejs.org/docs/#api/en/math/Matrix4\n\t\t */\n\t\tthis.interiorTransform = new Matrix4();\n\t\t\n\t\t/**\n\t\t * The inverse of the interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @property {Matrix4} invInteriorTransform The inverse of the interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @type {Matrix4}\n\t\t * @see https://threejs.org/docs/#api/en/math/Matrix4\n\t\t */\n\t\tthis.invInteriorTransform = new Matrix4();\n\t\t\n\t\t/**\n\t\t * The exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @property {Matrix4} exteriorTransform The exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @type {Matrix4} \n\t\t * @see https://threejs.org/docs/#api/en/math/Matrix4\n\t\t */\n\t\tthis.exteriorTransform = new Matrix4();\n\t\t\n\t\t/**\n\t\t * The inverse of the exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @property {Matrix4} invExteriorTransform The inverse of the exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall\n\t\t * @type {Matrix4}\n\t\t * @see https://threejs.org/docs/#api/en/math/Matrix4\n\t\t */\n\t\tthis.invExteriorTransform = new Matrix4();\n\t\t\n\t\t/**\n\t\t * This is an array of callbacks to be call when redraw happens\n\t\t * @depreceated \n\t\t */\n\t\tthis.redrawCallbacks = null;\n\t\t\n\t\t/**\n\t\t * Is this is the front edge or the back edge\n\t\t * @property {boolean} front Is this is the front edge or the back edge\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.front = front || false;\n\t\t\n\t\tthis.offset = wall.thickness / 2.0;\n\t\tthis.height = wall.height;\n\n\t\tif (this.front)\n\t\t{\n\t\t\tthis.wall.frontEdge = this;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.wall.backEdge = this;\n\t\t}\n\n\t}\n\n\t/**\n\t * Two separate textures are used for the walls. Based on which side of the wall this {HalfEdge} refers the texture is returned\n\t * @return {Object} front/back Two separate textures are used for the walls. Based on which side of the wall this {@link HalfEdge} refers the texture is returned\n\t */\n\tgetTexture()\n\t{\n\t\tif (this.front)\n\t\t{\n\t\t\treturn this.wall.frontTexture;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.wall.backTexture;\n\t\t}\n\t}\n\n\t/**\n\t * Set a Texture to the wall. Based on the edge side as front or back the texture is applied appropriately to the wall\n\t * @param {String} textureUrl The path to the texture image\n\t * @param {boolean} textureStretch Can the texture stretch? If not it will be repeated\n\t * @param {Number} textureScale The scale value using which the number of repetitions of the texture image is calculated\n\t * @emits {EVENT_REDRAW}\n\t */\n\tsetTexture(textureUrl, textureStretch, textureScale)\n\t{\n\t\tvar texture = {url: textureUrl, stretch: textureStretch, scale: textureScale};\n\t\tif (this.front)\n\t\t{\n\t\t\tthis.wall.frontTexture = texture;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.wall.backTexture = texture;\n\t\t}\n\n\t\t//this.redrawCallbacks.fire();\n\t\tthis.dispatchEvent({type:EVENT_REDRAW, item: this});\n\t}\n\t\n\t/**\n\t * Emit the redraw event\n\t * @emits {EVENT_REDRAW}\n\t */\n\tdispatchRedrawEvent()\n\t{\n\t\tthis.dispatchEvent({type:EVENT_REDRAW, item: this});\n\t}\n\t\n\t/**\n\t * Transform the {@link Corner} instance to a Vector3 instance using the x and y position returned as x and z\n\t * @param {Corner} corner\n\t * @return {Vector3}\n\t * @see https://threejs.org/docs/#api/en/math/Vector3\n\t */\n\ttransformCorner(corner)\n\t{\n\t\treturn new Vector3(corner.x, 0, corner.y);\n\t}\n\n\n\t/**\n\t * This generates the invisible planes in the scene that are used for interesection testing for the wall items\n\t */\n\tgeneratePlane()\n\t{\n\t\tvar geometry = new Geometry();\n\t\tvar v1 = this.transformCorner(this.interiorStart());\n\t\tvar v2 = this.transformCorner(this.interiorEnd());\n\t\tvar v3 = v2.clone();\n\t\tvar v4 = v1.clone();\n\n\t\t// v3.y = this.wall.height;\n\t\t// v4.y = this.wall.height;\n\n\t\tv3.y = this.wall.getStart().elevation;\n\t\tv4.y = this.wall.getEnd().elevation;\n\n\t\tgeometry.vertices = [v1, v2, v3, v4];\n\t\tgeometry.faces.push(new Face3(0, 1, 2));\n\t\tgeometry.faces.push(new Face3(0, 2, 3));\n\t\tgeometry.computeFaceNormals();\n\t\tgeometry.computeBoundingBox();\n\n\n\t\tthis.plane = new Mesh(geometry, new MeshBasicMaterial({visible:false}));\n\t\t//The below line was originally setting the plane visibility to false\n\t\t//Now its setting visibility to true. This is necessary to be detected\n\t\t//with the raycaster objects to click walls and floors.\n\t\tthis.plane.visible = true;\n\t\tthis.plane.edge = this; // js monkey patch\n\n\n\t\tthis.computeTransforms(this.interiorTransform, this.invInteriorTransform, this.interiorStart(), this.interiorEnd());\n\t\tthis.computeTransforms(this.exteriorTransform, this.invExteriorTransform, this.exteriorStart(), this.exteriorEnd());\n\n\t\tvar b3 = new Box3();\n\t\tb3.setFromObject(this.plane);\n\t\tthis.min = b3.min.clone();\n\t\tthis.max = b3.max.clone();\n\t\tthis.center = this.max.clone().sub(this.min).multiplyScalar(0.5).add(this.min);\n\t}\n\t\n\t/**\n\t * Calculate the transformation matrix for the edge (front/back) baesd on the parameters. \n\t * @param {Matrix4} transform The matrix reference in which the transformation is stored\n\t * @param {Matrix4} invTransform The inverse of the transform that is stored in the invTransform\n\t * @param {Vector2} start The starting point location\n\t * @param {Vector2} end The ending point location\n\t * @see https://threejs.org/docs/#api/en/math/Matrix4\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\tcomputeTransforms(transform, invTransform, start, end)\n\t{\n\t\tvar v1 = start;\n\t\tvar v2 = end;\n\n\t\tvar angle = Utils.angle(new Vector2(1, 0), new Vector2(v2.x - v1.x, v2.y - v1.y));\n\n\t\tvar tt = new Matrix4();\n\t\tvar tr = new Matrix4();\n\n\t\ttt.makeTranslation(-v1.x, 0, -v1.y);\n\t\ttr.makeRotationY(-angle);\n\t\ttransform.multiplyMatrices(tr, tt);\n\t\tinvTransform.getInverse(transform);\n\t}\n\n\t/** Gets the distance from specified point.\n\t * @param {Number} x X coordinate of the point.\n\t * @param {Number} y Y coordinate of the point.\n\t * @returns {Number} The distance.\n\t */\n\tdistanceTo(x, y)\n\t{\n\t\t// x, y, x1, y1, x2, y2\n\t\treturn Utils.pointDistanceFromLine(new Vector2(x, y), this.interiorStart(), this.interiorEnd());\n\t}\n\t\n\t/**\n\t * Get the starting corner of the wall this instance represents\n\t * @return {Corner} The starting corner\n\t */\n\tgetStart()\n\t{\n\t\tif (this.front)\n\t\t{\n\t\t\treturn this.wall.getStart();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.wall.getEnd();\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the ending corner of the wall this instance represents\n\t * @return {Corner} The ending corner\n\t */\n\tgetEnd()\n\t{\n\t\tif (this.front)\n\t\t{\n\t\t\treturn this.wall.getEnd();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.wall.getStart();\n\t\t}\n\t}\n\t\n\t/**\n\t * If this is the front edge then return the back edge. \n\t * For example in a wall there are two halfedges, i.e one for front and one back. Based on which side this halfedge lies return the opposite {@link HalfEdge}\n\t * @return {HalfEdge} The other HalfEdge\n\t */\n\tgetOppositeEdge()\n\t{\n\t\tif (this.front)\n\t\t{\n\t\t\treturn this.wall.backEdge;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.wall.frontEdge;\n\t\t}\n\t}\n\t\n\t/**\n\t * Return the 2D interior location that is at the end. \n\t * @return {Vector2} Return an object with attributes x, y\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\t// \n\tinteriorEnd()\n\t{\n\t\tvar vec = this.halfAngleVector(this, this.next);\n\t\treturn new Vector2(this.getEnd().x + vec.x, this.getEnd().y + vec.y);\n\t\t// return {x:this.getEnd().x + vec.x, y:this.getEnd().y + vec.y};\n\t}\n\t\n\t/**\n\t * Return the 2D interior location that is at the start. \n\t * @return {Vector2} Return an object with attributes x, y\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\tinteriorStart()\n\t{\n\t\tvar vec = this.halfAngleVector(this.prev, this);\n\t\treturn new Vector2(this.getStart().x + vec.x, this.getStart().y + vec.y);\n\t\t// return {x:this.getStart().x + vec.x, y:this.getStart().y + vec.y};\n\t}\n\t\n\t/**\n\t * Return the 2D interior location that is at the center/middle. \n\t * @return {Vector2} Return an object with attributes x, y\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\tinteriorCenter()\n\t{\n\t\treturn new Vector2((this.interiorStart().x + this.interiorEnd().x) / 2.0, (this.interiorStart().y + this.interiorEnd().y) / 2.0);\n\t}\n\t\n\t/**\n\t * Return the interior distance of the interior wall \n\t * @return {Number} The distance\n\t */\n\tinteriorDistance()\n\t{\n\t\tvar start = this.interiorStart();\n\t\tvar end = this.interiorEnd();\n\t\treturn Utils.distance(start, end);\n\t}\n\t\n\t/**\n\t * Return the 2D exterior location that is at the end. \n\t * @return {Vector2} Return an object with attributes x, y\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\texteriorEnd()\n\t{\n\t\tvar vec = this.halfAngleVector(this, this.next);\n\t\treturn new Vector2(this.getEnd().x - vec.x, this.getEnd().y - vec.y);\n\t}\n\t\n\t/**\n\t * Return the 2D exterior location that is at the start. \n\t * @return {Vector2} Return an object with attributes x, y\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\texteriorStart()\n\t{\n\t\tvar vec = this.halfAngleVector(this.prev, this);\n\t\treturn new Vector2(this.getStart().x - vec.x, this.getStart().y - vec.y);\n\t}\n\t\n\t/**\n\t * Return the 2D exterior location that is at the center/middle. \n\t * @return {Vector2} Return an object with attributes x, y\n\t * @see https://threejs.org/docs/#api/en/math/Vector2\n\t */\n\texteriorCenter()\n\t{\n\t\t\treturn new Vector2((this.exteriorStart().x + this.exteriorEnd().x) / 2.0, (this.exteriorStart().y + this.exteriorEnd().y) / 2.0);\n\t}\n\t\n\t/**\n\t * Return the exterior distance of the exterior wall \n\t * @return {Number} The distance\n\t */\n\texteriorDistance()\n\t{\n\t\tvar start = this.exteriorStart();\n\t\tvar end = this.exteriorEnd();\n\t\treturn Utils.distance(start, end);\n\t}\n\n\t/** Get the corners of the half edge.\n\t * @returns {Corner[]} An array of x,y pairs.\n\t */\n\tcorners()\n\t{\n\t\treturn [this.interiorStart(), this.interiorEnd(), this.exteriorEnd(), this.exteriorStart()];\n\t}\n\n\t/**\n\t * Gets CCW angle from v1 to v2\n\t * @param {Vector2} v1 The point a\n\t * @param {Vector2} v1 The point b\n\t * @return {Object} contains keys x and y with number representing the halfAngles\n\t */\n\thalfAngleVector(v1, v2)\n\t{\n\t\tvar v1startX=0.0, v1startY=0.0, v1endX=0.0, v1endY=0.0;\n\t\tvar v2startX=0.0, v2startY=0.0, v2endX=0.0, v2endY=0.0;\n\n\t\t// make the best of things if we dont have prev or next\n\t\tif (!v1)\n\t\t{\n\t\t\tv1startX = v2.getStart().x - (v2.getEnd().x - v2.getStart().x);\n\t\t\tv1startY = v2.getStart().y - (v2.getEnd().y - v2.getStart().y);\n\n\t\t\tv1endX = v2.getStart().x;\n\t\t\tv1endY = v2.getStart().y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tv1startX = v1.getStart().x;\n\t\t\tv1startY = v1.getStart().y;\n\t\t\tv1endX = v1.getEnd().x;\n\t\t\tv1endY = v1.getEnd().y;\n\t\t}\n\n\t\tif (!v2)\n\t\t{\n\t\t\tv2startX = v1.getEnd().x;\n\t\t\tv2startY = v1.getEnd().y;\n\t\t\tv2endX = v1.getEnd().x + (v1.getEnd().x - v1.getStart().x);\n\t\t\tv2endY = v1.getEnd().y + (v1.getEnd().y - v1.getStart().y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tv2startX = v2.getStart().x;\n\t\t\tv2startY = v2.getStart().y;\n\t\t\tv2endX = v2.getEnd().x;\n\t\t\tv2endY = v2.getEnd().y;\n\t\t}\n\n\t\t// CCW angle between edges\n\t\tvar theta = Utils.angle2pi( new Vector2(v1startX - v1endX, v1startY - v1endY), new Vector2(v2endX - v1endX, v2endY - v1endY));\n\n\t\t// cosine and sine of half angle\n\t\tvar cs = Math.cos(theta / 2.0);\n\t\tvar sn = Math.sin(theta / 2.0);\n\n\t\t// rotate v2\n\t\tvar v2dx = v2endX - v2startX;\n\t\tvar v2dy = v2endY - v2startY;\n\n\t\tvar vx = v2dx * cs - v2dy * sn;\n\t\tvar vy = v2dx * sn + v2dy * cs;\n\n\t\t// normalize\n\t\tvar mag = Utils.distance(new Vector2(0, 0), new Vector2(vx, vy));\n\t\tvar desiredMag = (this.offset) / sn;\n\t\tvar scalar = desiredMag / mag;\n\n\t\tvar halfAngleVector = {x:vx * scalar, y:vy * scalar};//new Vector2(vx * scalar, vy * scalar);\n\t\treturn halfAngleVector;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/half_edge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 700,
    "kind": "class",
    "name": "HalfEdge",
    "memberof": "scripts/model/half_edge.js",
    "static": true,
    "longname": "scripts/model/half_edge.js~HalfEdge",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/half_edge.js",
    "importStyle": "{HalfEdge}",
    "description": "Half Edges are created by Room.\n\nOnce rooms have been identified, Half Edges are created for each interior wall.\n\nA wall can have two half edges if it is visible from both sides.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 701,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#constructor",
    "access": "public",
    "description": "Constructs a half edge.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Room"
        ],
        "spread": false,
        "optional": false,
        "name": "room",
        "description": "The associated room. Instance of Room"
      },
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "wall",
        "description": "The corresponding wall. Instance of Wall"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "front",
        "description": "True if front side. Boolean value"
      }
    ]
  },
  {
    "__docId__": 702,
    "kind": "member",
    "name": "min",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#min",
    "access": "public",
    "description": " The minimum point in space calculated from the bounds",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector3"
    ],
    "lineNumber": 30,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": "The minimum point in space calculated from the bounds"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 703,
    "kind": "member",
    "name": "max",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#max",
    "access": "public",
    "description": "The maximum point in space calculated from the bounds",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector3"
    ],
    "lineNumber": 38,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "The maximum point in space calculated from the bounds"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 704,
    "kind": "member",
    "name": "center",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#center",
    "access": "public",
    "description": "The center of this half edge",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector3"
    ],
    "lineNumber": 46,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "The center of this half edge"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 705,
    "kind": "member",
    "name": "room",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#room",
    "access": "public",
    "description": "Reference to a Room instance",
    "lineNumber": 53,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Room"
        ],
        "spread": false,
        "optional": false,
        "name": "room",
        "description": "Reference to a Room instance"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Room"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 706,
    "kind": "member",
    "name": "wall",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#wall",
    "access": "public",
    "description": " Reference to a Wall instance",
    "lineNumber": 60,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Wall"
        ],
        "spread": false,
        "optional": false,
        "name": "room",
        "description": "Reference to a Wall instance"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Wall"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 707,
    "kind": "member",
    "name": "next",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#next",
    "access": "public",
    "description": "Reference to the next halfedge instance connected to this",
    "lineNumber": 67,
    "properties": [
      {
        "nullable": null,
        "types": [
          "HalfEdge"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "Reference to the next halfedge instance connected to this"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HalfEdge"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 708,
    "kind": "member",
    "name": "prev",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#prev",
    "access": "public",
    "description": "Reference to the previous halfedge instance connected to this",
    "lineNumber": 74,
    "properties": [
      {
        "nullable": null,
        "types": [
          "HalfEdge"
        ],
        "spread": false,
        "optional": false,
        "name": "prev",
        "description": "Reference to the previous halfedge instance connected to this"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "HalfEdge"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 709,
    "kind": "member",
    "name": "offset",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#offset",
    "access": "public",
    "description": "The offset to maintain for the front and back walls from the midline of a wall",
    "lineNumber": 81,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "The offset to maintain for the front and back walls from the midline of a wall"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 710,
    "kind": "member",
    "name": "height",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#height",
    "access": "public",
    "description": " The height of a wall",
    "lineNumber": 88,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The height of a wall"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 711,
    "kind": "member",
    "name": "plane",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#plane",
    "access": "public",
    "description": "The plane mesh that will be used for checking intersections of wall items",
    "see": [
      "https://threejs.org/docs/#api/en/objects/Mesh"
    ],
    "lineNumber": 96,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Mesh"
        ],
        "spread": false,
        "optional": false,
        "name": "plane",
        "description": "The plane mesh that will be used for checking intersections of wall items"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Mesh"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 712,
    "kind": "member",
    "name": "interiorTransform",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#interiorTransform",
    "access": "public",
    "description": "The interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall",
    "see": [
      "https://threejs.org/docs/#api/en/math/Matrix4"
    ],
    "lineNumber": 104,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "interiorTransform",
        "description": "The interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 713,
    "kind": "member",
    "name": "invInteriorTransform",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#invInteriorTransform",
    "access": "public",
    "description": "The inverse of the interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall",
    "see": [
      "https://threejs.org/docs/#api/en/math/Matrix4"
    ],
    "lineNumber": 112,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "invInteriorTransform",
        "description": "The inverse of the interior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 714,
    "kind": "member",
    "name": "exteriorTransform",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#exteriorTransform",
    "access": "public",
    "description": "The exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall",
    "see": [
      "https://threejs.org/docs/#api/en/math/Matrix4"
    ],
    "lineNumber": 120,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "exteriorTransform",
        "description": "The exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 715,
    "kind": "member",
    "name": "invExteriorTransform",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#invExteriorTransform",
    "access": "public",
    "description": "The inverse of the exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall",
    "see": [
      "https://threejs.org/docs/#api/en/math/Matrix4"
    ],
    "lineNumber": 128,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "invExteriorTransform",
        "description": "The inverse of the exterior transformation matrix that contains the homogeneous transformation of the plane based on the two corner positions of the wall"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 716,
    "kind": "member",
    "name": "redrawCallbacks",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#redrawCallbacks",
    "access": "public",
    "description": "This is an array of callbacks to be call when redraw happens",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@depreceated",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 717,
    "kind": "member",
    "name": "front",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#front",
    "access": "public",
    "description": "Is this is the front edge or the back edge",
    "lineNumber": 141,
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "front",
        "description": "Is this is the front edge or the back edge"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 720,
    "kind": "method",
    "name": "getTexture",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#getTexture",
    "access": "public",
    "description": "Two separate textures are used for the walls. Based on which side of the wall this {HalfEdge} refers the texture is returned",
    "lineNumber": 161,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "front/back Two separate textures are used for the walls. Based on which side of the wall this {@link HalfEdge} refers the texture is returned"
    },
    "params": []
  },
  {
    "__docId__": 721,
    "kind": "method",
    "name": "setTexture",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#setTexture",
    "access": "public",
    "description": "Set a Texture to the wall. Based on the edge side as front or back the texture is applied appropriately to the wall",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "textureUrl",
        "description": "The path to the texture image"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "textureStretch",
        "description": "Can the texture stretch? If not it will be repeated"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "textureScale",
        "description": "The scale value using which the number of repetitions of the texture image is calculated"
      }
    ],
    "emits": [
      {
        "types": [
          "EVENT_REDRAW"
        ],
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 722,
    "kind": "method",
    "name": "dispatchRedrawEvent",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#dispatchRedrawEvent",
    "access": "public",
    "description": "Emit the redraw event",
    "lineNumber": 200,
    "emits": [
      {
        "types": [
          "EVENT_REDRAW"
        ],
        "description": ""
      }
    ],
    "params": [],
    "return": null
  },
  {
    "__docId__": 723,
    "kind": "method",
    "name": "transformCorner",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#transformCorner",
    "access": "public",
    "description": "Transform the {@link Corner} instance to a Vector3 instance using the x and y position returned as x and z",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector3"
    ],
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "Corner"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 724,
    "kind": "method",
    "name": "generatePlane",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#generatePlane",
    "access": "public",
    "description": "This generates the invisible planes in the scene that are used for interesection testing for the wall items",
    "lineNumber": 220,
    "params": [],
    "return": null
  },
  {
    "__docId__": 729,
    "kind": "method",
    "name": "computeTransforms",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#computeTransforms",
    "access": "public",
    "description": "Calculate the transformation matrix for the edge (front/back) baesd on the parameters. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Matrix4",
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "transform",
        "description": "The matrix reference in which the transformation is stored"
      },
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "invTransform",
        "description": "The inverse of the transform that is stored in the invTransform"
      },
      {
        "nullable": null,
        "types": [
          "Vector2"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The starting point location"
      },
      {
        "nullable": null,
        "types": [
          "Vector2"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The ending point location"
      }
    ],
    "return": null
  },
  {
    "__docId__": 730,
    "kind": "method",
    "name": "distanceTo",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#distanceTo",
    "access": "public",
    "description": "Gets the distance from specified point.",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} The distance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "X coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Y coordinate of the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance."
    }
  },
  {
    "__docId__": 731,
    "kind": "method",
    "name": "getStart",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#getStart",
    "access": "public",
    "description": "Get the starting corner of the wall this instance represents",
    "lineNumber": 299,
    "return": {
      "nullable": null,
      "types": [
        "Corner"
      ],
      "spread": false,
      "description": "The starting corner"
    },
    "params": []
  },
  {
    "__docId__": 732,
    "kind": "method",
    "name": "getEnd",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#getEnd",
    "access": "public",
    "description": "Get the ending corner of the wall this instance represents",
    "lineNumber": 315,
    "return": {
      "nullable": null,
      "types": [
        "Corner"
      ],
      "spread": false,
      "description": "The ending corner"
    },
    "params": []
  },
  {
    "__docId__": 733,
    "kind": "method",
    "name": "getOppositeEdge",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#getOppositeEdge",
    "access": "public",
    "description": "If this is the front edge then return the back edge. \nFor example in a wall there are two halfedges, i.e one for front and one back. Based on which side this halfedge lies return the opposite {@link HalfEdge}",
    "lineNumber": 332,
    "return": {
      "nullable": null,
      "types": [
        "HalfEdge"
      ],
      "spread": false,
      "description": "The other HalfEdge"
    },
    "params": []
  },
  {
    "__docId__": 734,
    "kind": "method",
    "name": "interiorEnd",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#interiorEnd",
    "access": "public",
    "description": "Return the 2D interior location that is at the end. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 350,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "Return an object with attributes x, y"
    },
    "params": []
  },
  {
    "__docId__": 735,
    "kind": "method",
    "name": "interiorStart",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#interiorStart",
    "access": "public",
    "description": "Return the 2D interior location that is at the start. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 362,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "Return an object with attributes x, y"
    },
    "params": []
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "interiorCenter",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#interiorCenter",
    "access": "public",
    "description": "Return the 2D interior location that is at the center/middle. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 374,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "Return an object with attributes x, y"
    },
    "params": []
  },
  {
    "__docId__": 737,
    "kind": "method",
    "name": "interiorDistance",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#interiorDistance",
    "access": "public",
    "description": "Return the interior distance of the interior wall ",
    "lineNumber": 383,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance"
    },
    "params": []
  },
  {
    "__docId__": 738,
    "kind": "method",
    "name": "exteriorEnd",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#exteriorEnd",
    "access": "public",
    "description": "Return the 2D exterior location that is at the end. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 395,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "Return an object with attributes x, y"
    },
    "params": []
  },
  {
    "__docId__": 739,
    "kind": "method",
    "name": "exteriorStart",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#exteriorStart",
    "access": "public",
    "description": "Return the 2D exterior location that is at the start. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 406,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "Return an object with attributes x, y"
    },
    "params": []
  },
  {
    "__docId__": 740,
    "kind": "method",
    "name": "exteriorCenter",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#exteriorCenter",
    "access": "public",
    "description": "Return the 2D exterior location that is at the center/middle. ",
    "see": [
      "https://threejs.org/docs/#api/en/math/Vector2"
    ],
    "lineNumber": 417,
    "return": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": "Return an object with attributes x, y"
    },
    "params": []
  },
  {
    "__docId__": 741,
    "kind": "method",
    "name": "exteriorDistance",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#exteriorDistance",
    "access": "public",
    "description": "Return the exterior distance of the exterior wall ",
    "lineNumber": 426,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance"
    },
    "params": []
  },
  {
    "__docId__": 742,
    "kind": "method",
    "name": "corners",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#corners",
    "access": "public",
    "description": "Get the corners of the half edge.",
    "lineNumber": 436,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Corner[]} An array of x,y pairs."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Corner[]"
      ],
      "spread": false,
      "description": "An array of x,y pairs."
    },
    "params": []
  },
  {
    "__docId__": 743,
    "kind": "method",
    "name": "halfAngleVector",
    "memberof": "scripts/model/half_edge.js~HalfEdge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/half_edge.js~HalfEdge#halfAngleVector",
    "access": "public",
    "description": "Gets CCW angle from v1 to v2",
    "lineNumber": 447,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector2"
        ],
        "spread": false,
        "optional": false,
        "name": "v1",
        "description": "The point a"
      },
      {
        "nullable": null,
        "types": [
          "Vector2"
        ],
        "spread": false,
        "optional": false,
        "name": "v1",
        "description": "The point b"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "contains keys x and y with number representing the halfAngles"
    }
  },
  {
    "__docId__": 744,
    "kind": "file",
    "name": "scripts/model/model.js",
    "content": "import {EVENT_LOADED, EVENT_LOADING, EVENT_GLTF_READY} from '../core/events.js';\nimport {EventDispatcher, Vector3, Mesh} from 'three';\nimport {Floorplan} from './floorplan.js';\nimport {Scene} from './scene.js';\n\nimport {OBJExporter} from '../exporters/OBJExporter.js';\n\nimport GLTFExporter from 'three-gltf-exporter';\n\n/**\n * A Model connects a Floorplan and a Scene.\n */\nexport class Model extends EventDispatcher\n{\n\t/** Constructs a new model.\n\t * @param textureDir The directory containing the textures.\n\t */\n\tconstructor(textureDir)\n\t{\n\t\tsuper();\n\t\tthis.floorplan = new Floorplan();\n\t\tthis.scene = new Scene(this, textureDir);\n\t\tthis.roomLoadingCallbacks = null;\n\t\tthis.roomLoadedCallbacks = null;\n\t\tthis.roomSavedCallbacks = null;\n\t\tthis.roomDeletedCallbacks = null;\n\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tthis.scene.switchWireframe(flag);\n\t}\n\n\tloadSerialized(json)\n\t{\n\t\t// TODO: better documentation on serialization format.\n\t\t// TODO: a much better serialization format.\n\t\tthis.dispatchEvent({type: EVENT_LOADING, item: this});\n\t\t//      this.roomLoadingCallbacks.fire();\n\n\t\tvar data = JSON.parse(json);\n\t\tthis.newRoom(data.floorplan, data.items);\n\n\t\tthis.dispatchEvent({type: EVENT_LOADED, item: this});\n\t\t//      this.roomLoadedCallbacks.fire();\n\t}\n\n\texportMeshAsObj()\n\t{\n\t\tvar exporter = new OBJExporter();\n\t\treturn exporter.parse(this.scene.getScene());\n\t}\n\n\texportForBlender()\n\t{\n\t\tvar scope = this;\n\t\tvar gltfexporter = new GLTFExporter();\n\t\tvar meshes = [];\n\t\tthis.scene.getScene().traverse( function(child)\n\t\t{\n\t\t\tif (child instanceof Mesh)\n\t\t\t{\n\t\t\t\tif(child.material)\n\t\t\t\t{\n\t\t\t\t\tif(child.material.length || child.material.visible)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar op = (child.material.transparent)? child.material.opacity: undefined;\n\t\t\t\t\t\tmeshes.push(child);\n\t\t\t\t\t\tif(op)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchild.material.opacity = op;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t  });\n\n\t\tgltfexporter.parse(meshes, function(result)\n\t\t{\n\t\t\tvar output = JSON.stringify( result, null, 2 );\n\t\t\tscope.dispatchEvent({type:EVENT_GLTF_READY, item: this, gltf: output});\n\t\t});\n\t}\n\n\texportSerialized()\n\t{\n\t\tvar items_arr = [];\n\t\tvar objects = this.scene.getItems();\n\t\tfor (var i = 0; i < objects.length; i++)\n\t\t{\n\t\t\tvar obj = objects[i];\n//\t\t\titems_arr[i] = {item_name: obj.metadata.itemName,item_type: obj.metadata.itemType,model_url: obj.metadata.modelUrl,xpos: obj.position.x,ypos: obj.position.y,zpos: obj.position.z,rotation: obj.rotation.y,scale_x: obj.scale.x,scale_y: obj.scale.y,scale_z: obj.scale.z,fixed: obj.fixed};\n\t\t\titems_arr[i] = obj.getMetaData();\n\t\t}\n\n\t\tvar room = {floorplan: (this.floorplan.saveFloorplan()),items: items_arr};\n\t\treturn JSON.stringify(room);\n\t}\n\n\tnewRoom(floorplan, items)\n\t{\n\t\tthis.scene.clearItems();\n\t\tthis.floorplan.loadFloorplan(floorplan);\n\t\titems.forEach((item) => {\n\t\t\tvar matColors = (item.material_colors) ? item.material_colors : [];\n\t\t\tvar position = new Vector3(item.xpos, item.ypos, item.zpos);\n\t\t\tvar metadata = {itemName: item.item_name,resizable: item.resizable,format: item.format, itemType: item.item_type, modelUrl: item.model_url, materialColors: matColors};\n\t\t\tvar scale = new Vector3(item.scale_x,item.scale_y,item.scale_z);\n\t\t\tthis.scene.addItem(item.item_type,item.model_url,metadata,position,item.rotation,scale,item.fixed);\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 745,
    "kind": "class",
    "name": "Model",
    "memberof": "scripts/model/model.js",
    "static": true,
    "longname": "scripts/model/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/model.js",
    "importStyle": "{Model}",
    "description": "A Model connects a Floorplan and a Scene.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 746,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#constructor",
    "access": "public",
    "description": "Constructs a new model.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "textureDir",
        "description": "The directory containing the textures."
      }
    ]
  },
  {
    "__docId__": 747,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/model/model.js~Model",
    "static": false,
    "longname": "scripts/model/model.js~Model#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 748,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/model/model.js~Model",
    "static": false,
    "longname": "scripts/model/model.js~Model#scene",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "member",
    "name": "roomLoadingCallbacks",
    "memberof": "scripts/model/model.js~Model",
    "static": false,
    "longname": "scripts/model/model.js~Model#roomLoadingCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 750,
    "kind": "member",
    "name": "roomLoadedCallbacks",
    "memberof": "scripts/model/model.js~Model",
    "static": false,
    "longname": "scripts/model/model.js~Model#roomLoadedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 751,
    "kind": "member",
    "name": "roomSavedCallbacks",
    "memberof": "scripts/model/model.js~Model",
    "static": false,
    "longname": "scripts/model/model.js~Model#roomSavedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 752,
    "kind": "member",
    "name": "roomDeletedCallbacks",
    "memberof": "scripts/model/model.js~Model",
    "static": false,
    "longname": "scripts/model/model.js~Model#roomDeletedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 753,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 754,
    "kind": "method",
    "name": "loadSerialized",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#loadSerialized",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "json",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 755,
    "kind": "method",
    "name": "exportMeshAsObj",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#exportMeshAsObj",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 756,
    "kind": "method",
    "name": "exportForBlender",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#exportForBlender",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 757,
    "kind": "method",
    "name": "exportSerialized",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#exportSerialized",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 758,
    "kind": "method",
    "name": "newRoom",
    "memberof": "scripts/model/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/model.js~Model#newRoom",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "floorplan",
        "types": [
          "*"
        ]
      },
      {
        "name": "items",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 759,
    "kind": "file",
    "name": "scripts/model/room.js",
    "content": "import {EVENT_CHANGED, EVENT_ROOM_NAME_CHANGED} from '../core/events.js';\nimport {EventDispatcher, Vector2, Vector3, Face3, Geometry, Shape, ShapeGeometry, Mesh, MeshBasicMaterial, DoubleSide, Box3} from 'three';\nimport {Utils} from '../core/utils.js';\nimport {HalfEdge} from './half_edge.js';\n\n/** Default texture to be used if nothing is provided. */\nexport const defaultRoomTexture = {url: 'rooms/textures/hardwood.png', scale: 400};\n\n/**\n * A Room is the combination of a Floorplan with a floor plane.\n */\nexport class Room extends EventDispatcher\n{\n\t/**\n\t *  ordered CCW\n\t */\n\tconstructor(floorplan, corners)\n\t{\n\t\tsuper();\n\t\tthis._name = 'A New Room';\n\t\tthis.min = null;\n\t\tthis.max = null;\n\t\tthis.center = null;\n\t\tthis.area = 0.0;\n\t\tthis.areaCenter = null;\n\n\t\tthis.floorplan = floorplan;\n\t\tthis.corners = corners;\n\t\tthis.interiorCorners = [];\n\t\tthis.edgePointer = null;\n\t\tthis.floorPlane = null;\n\t\tthis.roofPlane = null;\n\t\tthis.customTexture = false;\n\t\tthis.floorChangeCallbacks = null;\n\t\tthis.updateWalls();\n\t\tthis.updateInteriorCorners();\n\t\tthis.generatePlane();\n\t\tthis.generateRoofPlane();\n\n\t\tvar cornerids = [];\n\t\tthis.corners.forEach((corner)=>{\n\t\t\tcorner.attachRoom(this);\n\t\t\tcornerids.push(corner.id);\n\t\t});\n\t\tthis._roomByCornersId = cornerids.join(',');\n\t}\n\n\tget roomByCornersId()\n\t{\n\t\treturn this._roomByCornersId;\n\t}\n\n\tset name(value)\n\t{\n\t\tvar oldname = this._name;\n\t\tthis._name = value;\n\t\tthis.dispatchEvent({type:EVENT_ROOM_NAME_CHANGED, item:this, oldname: oldname, newname: this._name});\n\t}\n\tget name()\n\t{\n\t\treturn this._name;\n\t}\n\n\troomIdentifier()\n\t{\n\t\tvar cornerids = [];\n\t\tthis.corners.forEach((corner)=>{\n\t\t\t\tcornerids.push(corner.id);\n\t\t});\n\t\tvar ids = cornerids.join(',');\n\t\treturn ids;\n\t}\n\n\tgetUuid()\n\t{\n\t\tvar cornerUuids = Utils.map(this.corners, function (c) {return c.id;});\n\t\tcornerUuids.sort();\n\t\treturn cornerUuids.join();\n\t}\n\n\tfireOnFloorChange(callback)\n\t{\n\t\tthis.floorChangeCallbacks.add(callback);\n\t}\n\n\tgetTexture()\n\t{\n\t\tvar uuid = this.getUuid();\n\t\tvar tex = this.floorplan.getFloorTexture(uuid);\n\t\treturn tex || defaultRoomTexture;\n\t}\n\n\tsetRoomWallsTexture(textureUrl, textureStretch, textureScale)\n\t{\n\t\tvar edge = this.edgePointer;\n\t\tvar iterateWhile = true;\n\t\tedge.setTexture(textureUrl, textureStretch, textureScale);\n\t\twhile (iterateWhile)\n\t\t{\n\t\t\tif (edge.next === this.edgePointer)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge = edge.next;\n\t\t\t}\n\t\t\tedge.setTexture(textureUrl, textureStretch, textureScale);\n\t\t}\n\t}\n\n\t/**\n\t * textureStretch always true, just an argument for consistency with walls\n\t */\n\tsetTexture(textureUrl, textureStretch, textureScale)\n\t{\n\t\tvar uuid = this.getUuid();\n\t\tthis.floorplan.setFloorTexture(uuid, textureUrl, textureScale);\n\t\tthis.dispatchEvent({type:EVENT_CHANGED, item: this});\n//\t\tthis.floorChangeCallbacks.fire();\n\t}\n\n\tgenerateRoofPlane()\n\t{\n\t\tif(this.roofPlane && this.roofPlane != null)\n\t\t{\n\t\t\tif(this.roofPlane.parent != null)\n\t\t\t{\n\t\t\t\t\tthis.roofPlane.parent.remove(this.roofPlane);\n\t\t\t}\n\t\t}\n\t\t// setup texture\n\t\tvar geometry = new Geometry();\n\n\t\tthis.corners.forEach((corner) => {\n\t\t\tvar vertex = new Vector3(corner.x,corner.elevation, corner.y);\n\t\t\tgeometry.vertices.push(vertex);\n\t\t});\n\t\tfor (var i=2;i<geometry.vertices.length;i++)\n\t\t{\n\t\t\tvar face = new Face3(0, i-1, i);\n\t\t\tgeometry.faces.push(face);\n\t\t}\n\t\tthis.roofPlane = new Mesh(geometry, new MeshBasicMaterial({side: DoubleSide, visible:false}));\n\t\tthis.roofPlane.room = this;\n\t}\n\n\tgeneratePlane()\n\t{\n\t\tvar points = [];\n\t\tthis.interiorCorners.forEach((corner) => {\n\t\t\tpoints.push(new Vector2(corner.x,corner.y));\n\t\t});\n\t\tvar shape = new Shape(points);\n\t\tvar geometry = new ShapeGeometry(shape);\n\t\tthis.floorPlane = new Mesh(geometry, new MeshBasicMaterial({side: DoubleSide, visible:false}));\n\t\t//The below line was originally setting the plane visibility to false\n\t\t//Now its setting visibility to true. This is necessary to be detected\n\t\t//with the raycaster objects to click walls and floors.\n\t\tthis.floorPlane.visible = true;\n\t\tthis.floorPlane.rotation.set(Math.PI / 2, 0, 0);\n\t\tthis.floorPlane.room = this; // js monkey patch\n\n\t\tvar b3 = new Box3();\n\t\tb3.setFromObject(this.floorPlane);\n\t\tthis.min = b3.min.clone();\n\t\tthis.max = b3.max.clone();\n\t\tthis.center = this.max.clone().sub(this.min).multiplyScalar(0.5).add(this.min);\n\t}\n\n\tcycleIndex(index)\n\t{\n\t\tif (index < 0)\n\t\t{\n\t\t\treturn index += this.corners.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn index % this.corners.length;\n\t\t}\n\t}\n\n\tpointInRoom(pt)\n\t{\n\t\tvar polygon = [];\n\t\tthis.corners.forEach((corner) => {\n\t\t\tvar co = new Vector2(corner.x,corner.y);\n\t\t\tpolygon.push(co);\n\t\t});\n\t\treturn Utils.pointInPolygon2(pt, polygon);\n\t}\n\n\tupdateInteriorCorners()\n\t{\n\t\tvar edge = this.edgePointer;\n\t\tvar iterateWhile = true;\n\t\twhile (iterateWhile)\n\t\t{\n\t\t\tthis.interiorCorners.push(edge.interiorStart());\n\t\t\tedge.generatePlane();\n\t\t\tif (edge.next === this.edgePointer)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge = edge.next;\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateArea()\n\t{\n\t\tvar points = [];\n\t\tthis.area = 0;\n\t\tthis.areaCenter = new Vector2();\n\n\t\tthis.updateWalls();\n\t\tthis.updateInteriorCorners();\n\t\tthis.generatePlane();\n\t\tthis.generateRoofPlane();\n\n\t\tthis.corners.forEach((corner) => {\n\t\t\tvar co = new Vector2(corner.x,corner.y);\n\t\t\tthis.areaCenter.add(co);\n\t\t\tpoints.push(co);\n\t\t});\n\t\tthis.areaCenter.multiplyScalar(1.0 / points.length);\n\t\tfor (var i=0;i<points.length;i++)\n\t\t{\n\t\t\t\tvar inext = (i+1 ) % points.length;\n\t\t\t\tvar a = points[i];\n\t\t\t\tvar b = points[inext];\n\t\t\t\tvar ax_by = (a.x * b.y);\n\t\t\t\tvar ay_bx = (a.y * b.x);\n\t\t\t\tvar delta = ax_by - ay_bx;\n\t\t\t\tthis.area += delta;\n\n\t\t}\n\t\tthis.area = this.area;\n\t\tthis.area = Math.abs(this.area) * 0.5;\n\t}\n\n\thasAllCornersById(ids)\n\t{\n\t\tvar sum = 0;\n\t\tfor (var i=0;i<ids.length;i++)\n\t\t{\n\t\t\t sum += this.hasACornerById(ids[i]);\n\t\t}\n\t\treturn (sum == this.corners.length);\n\t}\n\n\thasACornerById(id)\n\t{\n\t\tfor (var i=0;i< this.corners.length;i++)\n\t\t{\n\t\t\tvar corner = this.corners[i];\n\t\t\tif(corner.id == id)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Populates each wall's half edge relating to this room\n\t * this creates a fancy doubly connected edge list (DCEL)\n\t */\n\tupdateWalls()\n\t{\n\n\t\tvar prevEdge = null;\n\t\tvar firstEdge = null;\n\n\t\tfor (var i = 0; i < this.corners.length; i++)\n\t\t{\n\n\t\t\tvar firstCorner = this.corners[i];\n\t\t\tvar secondCorner = this.corners[(i + 1) % this.corners.length];\n\n\t\t\t// find if wall is heading in that direction\n\t\t\tvar wallTo = firstCorner.wallTo(secondCorner);\n\t\t\tvar wallFrom = firstCorner.wallFrom(secondCorner);\n\t\t\tvar edge = null;\n\t\t\tif (wallTo)\n\t\t\t{\n\t\t\t\tedge = new HalfEdge(this, wallTo, true);\n\t\t\t}\n\t\t\telse if (wallFrom)\n\t\t\t{\n\t\t\t\tedge = new HalfEdge(this, wallFrom, false);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// something horrible has happened\n\t\t\t\tconsole.log('corners arent connected by a wall, uh oh');\n\t\t\t}\n\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tfirstEdge = edge;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tedge.prev = prevEdge;\n\t\t\t\tprevEdge.next = edge;\n\t\t\t\tif (i + 1 == this.corners.length)\n\t\t\t\t{\n\t\t\t\t\tfirstEdge.prev = edge;\n\t\t\t\t\tedge.next = firstEdge;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevEdge = edge;\n\t\t}\n\n\t\t// hold on to an edge reference\n\t\tthis.edgePointer = firstEdge;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/room.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 760,
    "kind": "variable",
    "name": "defaultRoomTexture",
    "memberof": "scripts/model/room.js",
    "static": true,
    "longname": "scripts/model/room.js~defaultRoomTexture",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/room.js",
    "importStyle": "{defaultRoomTexture}",
    "description": "Default texture to be used if nothing is provided.",
    "lineNumber": 7,
    "type": {
      "types": [
        "{\"url\": string, \"scale\": number}"
      ]
    }
  },
  {
    "__docId__": 761,
    "kind": "class",
    "name": "Room",
    "memberof": "scripts/model/room.js",
    "static": true,
    "longname": "scripts/model/room.js~Room",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/room.js",
    "importStyle": "{Room}",
    "description": "A Room is the combination of a Floorplan with a floor plane.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 762,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#constructor",
    "access": "public",
    "description": " ordered CCW",
    "lineNumber": 17
  },
  {
    "__docId__": 763,
    "kind": "member",
    "name": "_name",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#_name",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 764,
    "kind": "member",
    "name": "min",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#min",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 765,
    "kind": "member",
    "name": "max",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#max",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 766,
    "kind": "member",
    "name": "center",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#center",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 767,
    "kind": "member",
    "name": "area",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#area",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 768,
    "kind": "member",
    "name": "areaCenter",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#areaCenter",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 769,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 770,
    "kind": "member",
    "name": "corners",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#corners",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 771,
    "kind": "member",
    "name": "interiorCorners",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#interiorCorners",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 772,
    "kind": "member",
    "name": "edgePointer",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#edgePointer",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 773,
    "kind": "member",
    "name": "floorPlane",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#floorPlane",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 774,
    "kind": "member",
    "name": "roofPlane",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#roofPlane",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 775,
    "kind": "member",
    "name": "customTexture",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#customTexture",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 776,
    "kind": "member",
    "name": "floorChangeCallbacks",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#floorChangeCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 777,
    "kind": "member",
    "name": "_roomByCornersId",
    "memberof": "scripts/model/room.js~Room",
    "static": false,
    "longname": "scripts/model/room.js~Room#_roomByCornersId",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 778,
    "kind": "get",
    "name": "roomByCornersId",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#roomByCornersId",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 779,
    "kind": "set",
    "name": "name",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#name",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 781,
    "kind": "get",
    "name": "name",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#name",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 782,
    "kind": "method",
    "name": "roomIdentifier",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#roomIdentifier",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 783,
    "kind": "method",
    "name": "getUuid",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#getUuid",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 784,
    "kind": "method",
    "name": "fireOnFloorChange",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#fireOnFloorChange",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 785,
    "kind": "method",
    "name": "getTexture",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#getTexture",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 786,
    "kind": "method",
    "name": "setRoomWallsTexture",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#setRoomWallsTexture",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "textureUrl",
        "types": [
          "*"
        ]
      },
      {
        "name": "textureStretch",
        "types": [
          "*"
        ]
      },
      {
        "name": "textureScale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 787,
    "kind": "method",
    "name": "setTexture",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#setTexture",
    "access": "public",
    "description": "textureStretch always true, just an argument for consistency with walls",
    "lineNumber": 115,
    "params": [
      {
        "name": "textureUrl",
        "types": [
          "*"
        ]
      },
      {
        "name": "textureStretch",
        "types": [
          "*"
        ]
      },
      {
        "name": "textureScale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 788,
    "kind": "method",
    "name": "generateRoofPlane",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#generateRoofPlane",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 790,
    "kind": "method",
    "name": "generatePlane",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#generatePlane",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 795,
    "kind": "method",
    "name": "cycleIndex",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#cycleIndex",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [
      {
        "name": "index",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 796,
    "kind": "method",
    "name": "pointInRoom",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#pointInRoom",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "params": [
      {
        "name": "pt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 797,
    "kind": "method",
    "name": "updateInteriorCorners",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#updateInteriorCorners",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 798,
    "kind": "method",
    "name": "updateArea",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#updateArea",
    "access": "public",
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 804,
    "kind": "method",
    "name": "hasAllCornersById",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#hasAllCornersById",
    "access": "public",
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "params": [
      {
        "name": "ids",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 805,
    "kind": "method",
    "name": "hasACornerById",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#hasACornerById",
    "access": "public",
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 806,
    "kind": "method",
    "name": "updateWalls",
    "memberof": "scripts/model/room.js~Room",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/room.js~Room#updateWalls",
    "access": "public",
    "description": "Populates each wall's half edge relating to this room\nthis creates a fancy doubly connected edge list (DCEL)",
    "lineNumber": 271,
    "params": [],
    "return": null
  },
  {
    "__docId__": 808,
    "kind": "file",
    "name": "scripts/model/scene.js",
    "content": "import {EventDispatcher, JSONLoader, Color} from 'three';\nimport {Geometry} from 'three';\nimport GLTFLoader from 'three-gltf-loader';\nimport OBJLoader from '@calvinscofield/three-objloader';\nimport {Scene as ThreeScene} from 'three';\nimport {Utils} from '../core/utils.js';\nimport {Factory} from '../items/factory.js';\nimport {EVENT_ITEM_LOADING, EVENT_ITEM_LOADED, EVENT_ITEM_REMOVED} from '../core/events.js';\n\n/**\n * The Scene is a manager of Items and also links to a ThreeJS scene.\n */\nexport class Scene extends EventDispatcher\n{\n\t/**\n\t * Constructs a scene.\n\t * @param model The associated model.\n\t * @param textureDir The directory from which to load the textures.\n\t */\n\tconstructor(model, textureDir)\n\t{\n\t\tsuper();\n\t\tthis.model = model;\n\t\tthis.textureDir = textureDir;\n\n//\t\tvar grid = new GridHelper(4000, 200);\n\n\t\tthis.scene = new ThreeScene();\n\t\tthis.scene.background = new Color(0xffffff);\n//\t\tthis.scene.fog = new Fog(0xFAFAFA, 0.001, 6000);\n\t\tthis.items = [];\n\t\tthis.needsUpdate = false;\n\t\t// init item loader\n\t\tthis.loader = new JSONLoader();\n\t\tthis.loader.setCrossOrigin('');\n\n\t\tthis.gltfloader = new GLTFLoader();\n\t\tthis.objloader = new OBJLoader();\n\t\tthis.gltfloader.setCrossOrigin('');\n\n\t\tthis.itemLoadingCallbacks = null;\n\t\tthis.itemLoadedCallbacks = null;\n\t\tthis.itemRemovedCallbacks = null;\n//\t\tthis.add(grid);\n\n\t}\n\n\t/** Adds a non-item, basically a mesh, to the scene.\n\t * @param mesh The mesh to be added.\n\t */\n\tadd(mesh)\n\t{\n\t\tthis.scene.add(mesh);\n\t}\n\n\t/** Removes a non-item, basically a mesh, from the scene.\n\t * @param mesh The mesh to be removed.\n\t */\n\tremove(mesh)\n\t{\n\t\tthis.scene.remove(mesh);\n\t\tUtils.removeValue(this.items, mesh);\n\t}\n\n\t/** Gets the scene.\n\t * @returns The scene.\n\t */\n\tgetScene()\n\t{\n\t\treturn this.scene;\n\t}\n\n\t/** Gets the items.\n\t * @returns The items.\n\t */\n\tgetItems()\n\t{\n\t\treturn this.items;\n\t}\n\n\t/** Gets the count of items.\n\t * @returns The count.\n\t */\n\titemCount()\n\t{\n\t\treturn this.items.length;\n\t}\n\n\t/** Removes all items. */\n\tclearItems()\n\t{\n\t\t// var items_copy = this.items ;\n\t\tvar scope = this;\n\t\tthis.items.forEach((item) => {\n\t\t\tscope.removeItem(item, true);\n\t\t});\n\t\tthis.items = [];\n\t}\n\n\t/**\n\t * Removes an item.\n\t * @param item The item to be removed.\n\t * @param dontRemove If not set, also remove the item from the items list.\n\t */\n\tremoveItem(item, keepInList)\n\t{\n\t\tkeepInList = keepInList || false;\n\t\t// use this for item meshes\n\t\tthis.dispatchEvent({type: EVENT_ITEM_REMOVED, item:item});\n\t\t//this.itemRemovedCallbacks.fire(item);\n\t\titem.removed();\n\t\tthis.scene.remove(item);\n\t\tif (!keepInList)\n\t\t{\n\t\t\tUtils.removeValue(this.items, item);\n\t\t}\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tthis.items.forEach((item)=>{\n\t\t\titem.switchWireframe(flag);\n\t\t});\n\t}\n\n\t/**\n\t * Creates an item and adds it to the scene.\n\t * @param itemType The type of the item given by an enumerator.\n\t * @param fileName The name of the file to load.\n\t * @param metadata TODO\n\t * @param position The initial position.\n\t * @param rotation The initial rotation around the y axis.\n\t * @param scale The initial scaling.\n\t * @param fixed True if fixed.\n\t * @param newItemDefinitions - Object with position and 'edge' attribute if it is a wall item\n\t */\n\taddItem(itemType, fileName, metadata, position, rotation, scale, fixed, newItemDefinitions)\n\t{\n\t\titemType = itemType || 1;\n\t\tvar scope = this;\n\n\t\tfunction addToMaterials(materials, newmaterial)\n\t\t{\n\t\t\tfor(var i=0;i<materials.length;i++)\n\t\t\t{\n\t\t\t\tvar mat = materials[i];\n\t\t\t\tif(mat.name == newmaterial.name)\n\t\t\t\t{\n\t\t\t\t\treturn [materials, i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaterials.push(newmaterial);\n\t\t\treturn [materials, materials.length-1];\n\t\t}\n\n\t\tvar loaderCallback = function (geometry, materials, isgltf=false)\n\t\t{\n//\t\t\tvar item = new (Factory.getClass(itemType))(scope.model, metadata, geometry, new MeshFaceMaterial(materials), position, rotation, scale);\n\t\t\tvar item = new (Factory.getClass(itemType))(scope.model, metadata, geometry, materials, position, rotation, scale, isgltf);\n\t\t\titem.fixed = fixed || false;\n\t\t\tscope.items.push(item);\n\t\t\tscope.add(item);\n\t\t\titem.initObject();\n\t\t\tscope.dispatchEvent({type:EVENT_ITEM_LOADED, item: item});\n\t\t\tif(newItemDefinitions)\n\t\t\t{\n\t\t\t\titem.moveToPosition(newItemDefinitions.position, newItemDefinitions.edge);\n\t\t\t\titem.placeInRoom();\n\t\t\t}\n\t\t};\n\t\tvar gltfCallback = function(gltfModel)\n\t\t{\n\t\t\tvar newmaterials = [];\n\t\t\tvar newGeometry = new Geometry();\n\n\t\t\tgltfModel.scene.traverse(function (child) {\n\t\t\t\tif(child.type == 'Mesh')\n\t\t\t\t{\n\t\t\t\t\tvar materialindices = [];\n\t\t\t\t\tif(child.material.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var k=0;k<child.material.length;k++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar newItems = addToMaterials(newmaterials, child.material[k]);\n\t\t\t\t\t\t\tnewmaterials = newItems[0];\n\t\t\t\t\t\t\tmaterialindices.push(newItems[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnewItems = addToMaterials(newmaterials, child.material);//materials.push(child.material);\n\t\t\t\t\t\tnewmaterials = newItems[0];\n\t\t\t\t\t\tmaterialindices.push(newItems[1]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif(child.geometry.isBufferGeometry)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tGeometry = new Geometry().fromBufferGeometry(child.geometry);\n\t\t\t\t\t\ttGeometry.faces.forEach((face)=>{\n//\t\t\t\t\t\t\tface.materialIndex = face.materialIndex + newmaterials.length;\n\t\t\t\t\t\t\tface.materialIndex = materialindices[face.materialIndex];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tchild.updateMatrix();\n\t\t\t\t\t\tnewGeometry.merge(tGeometry, child.matrix);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tchild.geometry.faces.forEach((face)=>{\n//\t\t\t\t\t\t\tface.materialIndex = face.materialIndex + newmaterials.length;\n\t\t\t\t\t\t\tface.materialIndex = materialindices[face.materialIndex];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tchild.updateMatrix();\n\t\t\t\t\t\tnewGeometry.mergeMesh(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tloaderCallback(newGeometry, newmaterials);\n\t\t\t// loaderCallback(gltfModel.scene, newmaterials, true);\n\t\t};\n\n\n\t\tvar objCallback = function(object)\n\t\t{\n\t\t\tvar materials = [];\n\t\t\tvar newGeometry = new Geometry();\n\t\t\tobject.traverse(function (child)\n\t\t\t{\n\t\t\t\tif(child.type == 'Mesh')\n\t\t\t\t{\n\t\t\t\t\tif(child.material.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tmaterials = materials.concat(child.material);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmaterials.push(child.material);\n\t\t\t\t\t}\n\t\t\t\t\tif(child.geometry.isBufferGeometry)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tGeometry = new Geometry().fromBufferGeometry(child.geometry);\n\t\t\t\t\t\tchild.updateMatrix();\n\t\t\t\t\t\tnewGeometry.merge(tGeometry, child.matrix);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tchild.updateMatrix();\n\t\t\t\t\t\tnewGeometry.mergeMesh(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tloaderCallback(newGeometry, materials);\n\t\t};\n\n\t\tthis.dispatchEvent({type:EVENT_ITEM_LOADING});\n\t\tif(!metadata.format)\n\t\t{\n\t\t\tthis.loader.load(fileName, loaderCallback, undefined); // third parameter is undefined - TODO_Ekki\n\t\t}\n\t\telse if(metadata.format == 'gltf')\n\t\t{\n\t\t\tthis.gltfloader.load(fileName, gltfCallback, null, null);\n\t\t}\n\t\telse if(metadata.format == 'obj')\n\t\t{\n\t\t\tthis.objloader.load(fileName, objCallback, null, null);\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/scene.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 809,
    "kind": "class",
    "name": "Scene",
    "memberof": "scripts/model/scene.js",
    "static": true,
    "longname": "scripts/model/scene.js~Scene",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/scene.js",
    "importStyle": "{Scene}",
    "description": "The Scene is a manager of Items and also links to a ThreeJS scene.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 810,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#constructor",
    "access": "public",
    "description": "Constructs a scene.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "The associated model."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "textureDir",
        "description": "The directory from which to load the textures."
      }
    ]
  },
  {
    "__docId__": 811,
    "kind": "member",
    "name": "model",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#model",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 812,
    "kind": "member",
    "name": "textureDir",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#textureDir",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 813,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#scene",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 814,
    "kind": "member",
    "name": "items",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#items",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 815,
    "kind": "member",
    "name": "needsUpdate",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#needsUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 816,
    "kind": "member",
    "name": "loader",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#loader",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 817,
    "kind": "member",
    "name": "gltfloader",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#gltfloader",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 818,
    "kind": "member",
    "name": "objloader",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#objloader",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 819,
    "kind": "member",
    "name": "itemLoadingCallbacks",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#itemLoadingCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 820,
    "kind": "member",
    "name": "itemLoadedCallbacks",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#itemLoadedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 821,
    "kind": "member",
    "name": "itemRemovedCallbacks",
    "memberof": "scripts/model/scene.js~Scene",
    "static": false,
    "longname": "scripts/model/scene.js~Scene#itemRemovedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 822,
    "kind": "method",
    "name": "add",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#add",
    "access": "public",
    "description": "Adds a non-item, basically a mesh, to the scene.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mesh",
        "description": "The mesh to be added."
      }
    ],
    "return": null
  },
  {
    "__docId__": 823,
    "kind": "method",
    "name": "remove",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#remove",
    "access": "public",
    "description": "Removes a non-item, basically a mesh, from the scene.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mesh",
        "description": "The mesh to be removed."
      }
    ],
    "return": null
  },
  {
    "__docId__": 824,
    "kind": "method",
    "name": "getScene",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#getScene",
    "access": "public",
    "description": "Gets the scene.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The scene."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The scene."
    },
    "params": []
  },
  {
    "__docId__": 825,
    "kind": "method",
    "name": "getItems",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#getItems",
    "access": "public",
    "description": "Gets the items.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The items."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The items."
    },
    "params": []
  },
  {
    "__docId__": 826,
    "kind": "method",
    "name": "itemCount",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#itemCount",
    "access": "public",
    "description": "Gets the count of items.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The count."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The count."
    },
    "params": []
  },
  {
    "__docId__": 827,
    "kind": "method",
    "name": "clearItems",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#clearItems",
    "access": "public",
    "description": "Removes all items.",
    "lineNumber": 90,
    "params": [],
    "return": null
  },
  {
    "__docId__": 829,
    "kind": "method",
    "name": "removeItem",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#removeItem",
    "access": "public",
    "description": "Removes an item.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "The item to be removed."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dontRemove",
        "description": "If not set, also remove the item from the items list."
      }
    ],
    "return": null
  },
  {
    "__docId__": 830,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 831,
    "kind": "method",
    "name": "addItem",
    "memberof": "scripts/model/scene.js~Scene",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/scene.js~Scene#addItem",
    "access": "public",
    "description": "Creates an item and adds it to the scene.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "itemType",
        "description": "The type of the item given by an enumerator."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "fileName",
        "description": "The name of the file to load."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metadata",
        "description": "TODO"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "The initial position."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rotation",
        "description": "The initial rotation around the y axis."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "The initial scaling."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "fixed",
        "description": "True if fixed."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newItemDefinitions",
        "description": "Object with position and 'edge' attribute if it is a wall item"
      }
    ],
    "return": null
  },
  {
    "__docId__": 832,
    "kind": "file",
    "name": "scripts/model/wall.js",
    "content": "import {EventDispatcher, Vector2} from 'three';\nimport {EVENT_ACTION,EVENT_MOVED,EVENT_DELETED} from '../core/events.js';\nimport {Configuration,configWallThickness,configWallHeight} from '../core/configuration.js';\nimport {Utils} from '../core/utils.js';\n\n\n/** The default wall texture. */\nexport const defaultWallTexture = {url: 'rooms/textures/wallmap.png', stretch: true, scale: 0};\n\n/**\n * A Wall is the basic element to create Rooms.\n *\n * Walls consists of two half edges.\n */\nexport class Wall extends EventDispatcher\n{\n\t/**\n\t * Constructs a new wall.\n\t * @param start Start corner.\n\t * @param end End corner.\n\t */\n\tconstructor(start, end)\n\t{\n\t\tsuper();\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.name = 'wall';\n\n\t\tthis.id = this.getUuid();\n\n\t\tthis.start.attachStart(this);\n\t\tthis.end.attachEnd(this);\n\n\t\t/** Front is the plane from start to end. */\n\t\tthis.frontEdge = null;\n\n\t\t/** Back is the plane from end to start. */\n\t\tthis.backEdge = null;\n\n\t\t/** */\n\t\tthis.orphan = false;\n\n\t\t/** Items attached to this wall */\n\t\tthis.items = [];\n\n\t\t/** */\n\t\tthis.onItems = [];\n\n\t\t/** The front-side texture. */\n\t\tthis.frontTexture = defaultWallTexture;\n\n\t\t/** The back-side texture. */\n\t\tthis.backTexture = defaultWallTexture;\n\n\t\t/** Wall thickness. */\n\t\tthis.thickness = Configuration.getNumericValue(configWallThickness);\n\n\t\t/** Wall height. */\n\t\tthis.height = Configuration.getNumericValue(configWallHeight);\n\n\t\t/** Actions to be applied after movement. */\n\t\tthis.moved_callbacks = null;\n\n\t\t/** Actions to be applied on removal. */\n\t\tthis.deleted_callbacks = null;\n\n\t\t/** Actions to be applied explicitly. */\n\t\tthis.action_callbacks = null;\n\t}\n\n\tgetUuid()\n\t{\n\t\treturn [this.start.id, this.end.id].join();\n\t}\n\n\tresetFrontBack()\n\t{\n\t\tthis.frontEdge = null;\n\t\tthis.backEdge = null;\n\t\tthis.orphan = false;\n\t}\n\n\tsnapToAxis(tolerance)\n\t{\n\t\t// order here is important, but unfortunately arbitrary\n\t\tthis.start.snapToAxis(tolerance);\n\t\tthis.end.snapToAxis(tolerance);\n\t}\n\n\tfireOnMove(func)\n\t{\n\t\tthis.moved_callbacks.add(func);\n\t}\n\n\tfireOnDelete(func)\n\t{\n\t\tthis.deleted_callbacks.add(func);\n\t}\n\n\tdontFireOnDelete(func)\n\t{\n\t\tthis.deleted_callbacks.remove(func);\n\t}\n\n\tfireOnAction(func)\n\t{\n\t\tthis.action_callbacks.add(func);\n\t}\n\n\tfireAction(action)\n\t{\n\t\tthis.dispatchEvent({type:EVENT_ACTION, action: action});\n\t\t//this.action_callbacks.fire(action);\n\t}\n\n\trelativeMove(dx, dy)\n\t{\n\t\tthis.start.relativeMove(dx, dy);\n\t\tthis.end.relativeMove(dx, dy);\n\t}\n\n\tfireMoved()\n\t{\n\t\tthis.dispatchEvent({type: EVENT_MOVED, position: null});\n\t}\n\n\tfireRedraw()\n\t{\n\t\tif (this.frontEdge)\n\t\t{\n//\t\t\tthis.frontEdge.dispatchEvent({type: EVENT_REDRAW});\n\t\t\tthis.frontEdge.dispatchRedrawEvent();\n\t\t\t//this.frontEdge.redrawCallbacks.fire();\n\t\t}\n\t\tif (this.backEdge)\n\t\t{\n//\t\t\tthis.backEdge.dispatchEvent({type: EVENT_REDRAW});\n\t\t\tthis.backEdge.dispatchRedrawEvent();\n\t\t\t//this.backEdge.redrawCallbacks.fire();\n\t\t}\n\t}\n\n\tgetStart()\n\t{\n\t\treturn this.start;\n\t}\n\n\tgetEnd()\n\t{\n\t\treturn this.end;\n\t}\n\n\tgetStartX()\n\t{\n\t\treturn this.start.getX();\n\t}\n\n\tgetEndX()\n\t{\n\t\treturn this.end.getX();\n\t}\n\n\tgetStartY()\n\t{\n\t\treturn this.start.getY();\n\t}\n\n\tgetEndY()\n\t{\n\t\treturn this.end.getY();\n\t}\n\n\twallLength()\n\t{\n\t\tvar start = this.getStart();\n\t\tvar end = this.getEnd();\n\t\treturn Utils.distance(start, end);\n\t}\n\n\twallCenter()\n\t{\n\t\treturn new Vector2((this.getStart().x + this.getEnd().x) / 2.0, (this.getStart().y + this.getEnd().y) / 2.0);\n\t}\n\n\tremove()\n\t{\n\t\tthis.start.detachWall(this);\n\t\tthis.end.detachWall(this);\n\t\tthis.dispatchEvent({type:EVENT_DELETED, item: this});\n\t\t//this.deleted_callbacks.fire(this);\n\t}\n\n\tsetStart(corner)\n\t{\n\t\tthis.start.detachWall(this);\n\t\tcorner.attachStart(this);\n\t\tthis.start = corner;\n\t\tthis.fireMoved();\n\t}\n\n\tsetEnd(corner)\n\t{\n\t\tthis.end.detachWall(this);\n\t\tcorner.attachEnd(this);\n\t\tthis.end = corner;\n\t\tthis.fireMoved();\n\t}\n\n\tdistanceFrom(point)\n\t{\n\t\treturn Utils.pointDistanceFromLine(point, new Vector2(this.getStartX(), this.getStartY()), new Vector2(this.getEndX(), this.getEndY()));\n\t}\n\n\t/** Return the corner opposite of the one provided.\n\t * @param corner The given corner.\n\t * @returns The opposite corner.\n\t */\n\toppositeCorner(corner)\n\t{\n\t\tif (this.start === corner)\n\t\t{\n\t\t\treturn this.end;\n\t\t}\n\t\telse if (this.end === corner)\n\t\t{\n\t\t\treturn this.start;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log('Wall does not connect to corner');\n\t\t\treturn null;\n\t\t}\n\t}\n\n  getClosestCorner(point)\n\t{\n\t\t\tvar startVector = new Vector2(this.start.x, this.start.y);\n\t\t\tvar endVector = new Vector2(this.end.x, this.end.y);\n      if(point.distanceTo(startVector) < 10)\n\t\t\t{\n\t\t\t\treturn this.start;\n\t\t\t}\n\t\t\telse if(point.distanceTo(endVector) < 10)\n\t\t\t{\n\t\t\t\treturn this.end;\n\t\t\t}\n\t\t\treturn null;\n\t}\n\n\tupdateAttachedRooms()\n\t{\n\t\tif(this.start != null)\n\t\t{\n\t\t\t\tthis.start.updateAttachedRooms();\n\t\t}\n\t\tif(this.end)\n\t\t{\n\t\t\tthis.end.updateAttachedRooms();\n\t\t}\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/model/wall.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 833,
    "kind": "variable",
    "name": "defaultWallTexture",
    "memberof": "scripts/model/wall.js",
    "static": true,
    "longname": "scripts/model/wall.js~defaultWallTexture",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/wall.js",
    "importStyle": "{defaultWallTexture}",
    "description": "The default wall texture.",
    "lineNumber": 8,
    "type": {
      "types": [
        "{\"url\": string, \"stretch\": boolean, \"scale\": *}"
      ]
    }
  },
  {
    "__docId__": 834,
    "kind": "class",
    "name": "Wall",
    "memberof": "scripts/model/wall.js",
    "static": true,
    "longname": "scripts/model/wall.js~Wall",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/model/wall.js",
    "importStyle": "{Wall}",
    "description": "A Wall is the basic element to create Rooms.\n\nWalls consists of two half edges.",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 835,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#constructor",
    "access": "public",
    "description": "Constructs a new wall.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "Start corner."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "End corner."
      }
    ]
  },
  {
    "__docId__": 836,
    "kind": "member",
    "name": "start",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#start",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 837,
    "kind": "member",
    "name": "end",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#end",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 838,
    "kind": "member",
    "name": "name",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#name",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 839,
    "kind": "member",
    "name": "id",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#id",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 840,
    "kind": "member",
    "name": "frontEdge",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#frontEdge",
    "access": "public",
    "description": "Front is the plane from start to end.",
    "lineNumber": 35,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 841,
    "kind": "member",
    "name": "backEdge",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#backEdge",
    "access": "public",
    "description": "Back is the plane from end to start.",
    "lineNumber": 38,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 842,
    "kind": "member",
    "name": "orphan",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#orphan",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 843,
    "kind": "member",
    "name": "items",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#items",
    "access": "public",
    "description": "Items attached to this wall",
    "lineNumber": 44,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 844,
    "kind": "member",
    "name": "onItems",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#onItems",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 845,
    "kind": "member",
    "name": "frontTexture",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#frontTexture",
    "access": "public",
    "description": "The front-side texture.",
    "lineNumber": 50,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 846,
    "kind": "member",
    "name": "backTexture",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#backTexture",
    "access": "public",
    "description": "The back-side texture.",
    "lineNumber": 53,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 847,
    "kind": "member",
    "name": "thickness",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#thickness",
    "access": "public",
    "description": "Wall thickness.",
    "lineNumber": 56,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 848,
    "kind": "member",
    "name": "height",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#height",
    "access": "public",
    "description": "Wall height.",
    "lineNumber": 59,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 849,
    "kind": "member",
    "name": "moved_callbacks",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#moved_callbacks",
    "access": "public",
    "description": "Actions to be applied after movement.",
    "lineNumber": 62,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 850,
    "kind": "member",
    "name": "deleted_callbacks",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#deleted_callbacks",
    "access": "public",
    "description": "Actions to be applied on removal.",
    "lineNumber": 65,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 851,
    "kind": "member",
    "name": "action_callbacks",
    "memberof": "scripts/model/wall.js~Wall",
    "static": false,
    "longname": "scripts/model/wall.js~Wall#action_callbacks",
    "access": "public",
    "description": "Actions to be applied explicitly.",
    "lineNumber": 68,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 852,
    "kind": "method",
    "name": "getUuid",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getUuid",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 853,
    "kind": "method",
    "name": "resetFrontBack",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#resetFrontBack",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 857,
    "kind": "method",
    "name": "snapToAxis",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#snapToAxis",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "tolerance",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 858,
    "kind": "method",
    "name": "fireOnMove",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#fireOnMove",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 859,
    "kind": "method",
    "name": "fireOnDelete",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#fireOnDelete",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 860,
    "kind": "method",
    "name": "dontFireOnDelete",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#dontFireOnDelete",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 861,
    "kind": "method",
    "name": "fireOnAction",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#fireOnAction",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 862,
    "kind": "method",
    "name": "fireAction",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#fireAction",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 863,
    "kind": "method",
    "name": "relativeMove",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#relativeMove",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "dx",
        "types": [
          "*"
        ]
      },
      {
        "name": "dy",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 864,
    "kind": "method",
    "name": "fireMoved",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#fireMoved",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 865,
    "kind": "method",
    "name": "fireRedraw",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#fireRedraw",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 866,
    "kind": "method",
    "name": "getStart",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getStart",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 867,
    "kind": "method",
    "name": "getEnd",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getEnd",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 868,
    "kind": "method",
    "name": "getStartX",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getStartX",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 869,
    "kind": "method",
    "name": "getEndX",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getEndX",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 870,
    "kind": "method",
    "name": "getStartY",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getStartY",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 871,
    "kind": "method",
    "name": "getEndY",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getEndY",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 872,
    "kind": "method",
    "name": "wallLength",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#wallLength",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 873,
    "kind": "method",
    "name": "wallCenter",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#wallCenter",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 874,
    "kind": "method",
    "name": "remove",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#remove",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 875,
    "kind": "method",
    "name": "setStart",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#setStart",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "params": [
      {
        "name": "corner",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 877,
    "kind": "method",
    "name": "setEnd",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#setEnd",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "corner",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 879,
    "kind": "method",
    "name": "distanceFrom",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#distanceFrom",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "params": [
      {
        "name": "point",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 880,
    "kind": "method",
    "name": "oppositeCorner",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#oppositeCorner",
    "access": "public",
    "description": "Return the corner opposite of the one provided.",
    "lineNumber": 218,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The opposite corner."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "corner",
        "description": "The given corner."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The opposite corner."
    }
  },
  {
    "__docId__": 881,
    "kind": "method",
    "name": "getClosestCorner",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#getClosestCorner",
    "access": "public",
    "description": null,
    "lineNumber": 235,
    "undocument": true,
    "params": [
      {
        "name": "point",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 882,
    "kind": "method",
    "name": "updateAttachedRooms",
    "memberof": "scripts/model/wall.js~Wall",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/model/wall.js~Wall#updateAttachedRooms",
    "access": "public",
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 883,
    "kind": "file",
    "name": "scripts/three/controller.js",
    "content": "//import $ from 'jquery';\nimport {EventDispatcher, Vector2, Vector3, Mesh, PlaneGeometry, MeshBasicMaterial, Raycaster } from 'three';\nimport {EVENT_ITEM_REMOVED, EVENT_ITEM_LOADED} from '../core/events.js';\nimport { Utils } from '../core/utils.js';\n\nexport const states = {UNSELECTED: 0, SELECTED: 1, DRAGGING: 2, ROTATING: 3,  ROTATING_FREE: 4, PANNING: 5};\n\n// Controller is the class that maintains the items, floors, walls selection in\n// the 3d scene\nexport class Controller extends EventDispatcher\n{\n\tconstructor(three, model, camera, element, controls, hud)\n\t{\n\t\tsuper();\n\t\tthis.three = three;\n\t\tthis.model = model;\n\t\tthis.camera = camera;\n\t\tthis.element = element;\n\t\tthis.controls = controls;\n\t\tthis.hud = hud;\n\n\t\tthis.enabled = true;\n\t\tthis.scene = model.scene;\n\n\t\tthis.plane = null;\n\t\tthis.mouse = new Vector2(0, 0);\n\t\tthis.alternateMouse = new Vector2(0, 0);\n\n\t\tthis.intersectedObject = null;\n\t\tthis.mouseoverObject = null;\n\t\tthis.selectedObject = null;\n\n\t\tthis.mouseDown = false;\n\t\tthis.mouseMoved = false; // has mouse moved since down click\n\t\tthis.rotateMouseOver = false;\n\n\t\tthis.state = states.UNSELECTED;\n\t\tthis.needsUpdate = true;\n\n\t\tvar scope = this;\n\t\tthis.itemremovedevent = (o) => {scope.itemRemoved(o.item);};\n\t\tthis.itemloadedevent = (o) => {scope.itemLoaded(o.item);};\n\n\t\tthis.mousedownevent = (event)=> {scope.mouseDownEvent(event);};\n\t\tthis.mouseupevent = (event)=> {scope.mouseUpEvent(event);};\n\t\tthis.mousemoveevent = (event)=> {scope.mouseMoveEvent(event);};\n\t\tthis.init();\n\t}\n\n\n\tinit()\n\t{\n\n//\t\tthis.element.mousedown(this.mousedownevent);\n//\t\tthis.element.mouseup(this.mouseupevent);\n//\t\tthis.element.mousemove(this.mousemoveevent);\n\n\t\tthis.element.bind('touchstart mousedown', this.mousedownevent);\n\t\tthis.element.bind('touchmove mousemove', this.mousemoveevent);\n\t\tthis.element.bind('touchend mouseup', this.mouseupevent);\n\n\t\tthis.scene.addEventListener(EVENT_ITEM_REMOVED, this.itemremovedevent);\n\t\tthis.scene.addEventListener(EVENT_ITEM_LOADED, this.itemloadedevent);\n\t\tthis.setGroundPlane();\n\t}\n\n\titemRemoved(item)\n\t{\n\t\t// invoked as a callback to event in Scene\n\t\tif (item === this.selectedObject)\n\t\t{\n\t\t\tthis.selectedObject.setUnselected();\n\t\t\tthis.selectedObject.mouseOff();\n\t\t\tthis.setSelectedObject(null);\n\t\t}\n\t}\n\n\t// invoked via callback when item is loaded\n\titemLoaded(item)\n\t{\n\t\tvar scope = this;\n\t\tif (!item.position_set)\n\t\t{\n\t\t\tscope.setSelectedObject(item);\n\t\t\tscope.switchState(states.DRAGGING);\n\t\t\tvar pos = item.position.clone();\n\t\t\tpos.y = 0;\n\t\t\tvar vec = scope.three.projectVector(pos);\n\t\t\tscope.clickPressed(vec);\n\t\t}\n\t\titem.position_set = true;\n\t}\n\n\tclickPressed(vec2)\n\t{\n\t\tthis.mouse = vec2 || this.mouse;\n\t\tvar intersection = this.itemIntersection(this.mouse, this.selectedObject);\n\t\tif (intersection)\n\t\t{\n\t\t\tthis.selectedObject.clickPressed(intersection);\n\t\t}\n\t}\n\n\tclickDragged(vec2)\n\t{\n\t\tvar scope = this;\n\t\tthis.mouse = vec2 || this.mouse;\n\t\tvar intersection = scope.itemIntersection(this.mouse, this.selectedObject);\n\t\tif (intersection)\n\t\t{\n\t\t\tif (scope.isRotating())\n\t\t\t{\n\t\t\t\tthis.selectedObject.rotate(intersection);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedObject.clickDragged(intersection);\n\t\t\t}\n\t\t}\n\t}\n\n\tshowGroundPlane(flag)\n\t{\n\t\tthis.plane.visible = flag;\n\t}\n\n\tsetGroundPlane()\n\t{\n\t\t// ground plane used to find intersections\n\t\tvar size = 10000;\n\n\t\t// The below line was originally setting the plane visibility to false\n\t\t// Now its setting visibility to true. This is necessary to be detected\n\t\t// with the raycaster objects to click walls and floors.\n\t\tthis.plane = new Mesh(new PlaneGeometry(size, size), new MeshBasicMaterial({visible:false}));\n\t\tthis.plane.rotation.x = -Math.PI / 2;\n\t\tthis.plane.visible = true;\n\t\tthis.scene.add(this.plane);\n\t}\n\n\tcheckWallsAndFloors()\n\t{\n\t\t// double click on a wall or floor brings up texture change modal\n\t\tif (this.state == states.UNSELECTED && this.mouseoverObject == null)\n\t\t{\n\t\t\t// check walls\n\t\t\tvar wallEdgePlanes = this.model.floorplan.wallEdgePlanes();\n\t\t\tvar wallIntersects = this.getIntersections(this.mouse, wallEdgePlanes, true);\n\t\t\tif (wallIntersects.length > 0)\n\t\t\t{\n\t\t\t\tvar wall = wallIntersects[0].object.edge;\n\t\t\t\t// three.wallClicked.fire(wall);\n\t\t\t\tthis.three.wallIsClicked(wall);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check floors\n\t\t\tvar floorPlanes = this.model.floorplan.floorPlanes();\n\t\t\tvar floorIntersects = this.getIntersections(this.mouse, floorPlanes, false);\n\t\t\tif (floorIntersects.length > 0)\n\t\t\t{\n\t\t\t\tvar room = floorIntersects[0].object.room;\n\t\t\t\t// this.three.floorClicked.fire(room);\n\t\t\t\tthis.three.floorIsClicked(room);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// three.nothingClicked.fire();\n\t\t\tthis.three.nothingIsClicked();\n\t\t}\n\t}\n\n\tisRotating()\n\t{\n\t\treturn (this.state == states.ROTATING || this.state == states.ROTATING_FREE);\n\t}\n\n\n\tmouseDownEvent(event)\n\t{\n\t\tif (this.enabled)\n\t\t{\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.mouseMoved = false;\n\t\t\tthis.mouseDown = true;\n\n\t\t\tif(event.touches)\n\t\t\t{\n\t\t\t\t//In case if this is a touch device do the necessary to click and drag items\n\t\t\t\tthis.mouse.x = event.touches[0].clientX;\n\t\t\t\tthis.mouse.y = event.touches[0].clientY;\n\t\t\t\tthis.alternateMouse.x = event.touches[0].clientX;\n\t\t\t\tthis.alternateMouse.y = event.touches[0].clientY;\n\t\t\t\tthis.updateIntersections();\n\t\t\t\tthis.checkWallsAndFloors();\n\t\t\t}\n\n\t\t\tswitch (this.state)\n\t\t\t{\n\t\t\tcase states.SELECTED:\n\t\t\t\tif (this.rotateMouseOver)\n\t\t\t\t{\n\t\t\t\t\tthis.switchState(states.ROTATING);\n\t\t\t\t}\n\t\t\t\telse if (this.intersectedObject != null)\n\t\t\t\t{\n\t\t\t\t\tthis.setSelectedObject(this.intersectedObject);\n\t\t\t\t\tif (!this.intersectedObject.fixed)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.switchState(states.DRAGGING);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase states.UNSELECTED:\n\t\t\t\tif (this.intersectedObject != null)\n\t\t\t\t{\n\t\t\t\t\tthis.setSelectedObject(this.intersectedObject);\n\t\t\t\t\tif (!this.intersectedObject.fixed)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.switchState(states.DRAGGING);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase states.DRAGGING:\n\t\t\tcase states.ROTATING:\n\t\t\t\tbreak;\n\t\t\tcase states.ROTATING_FREE:\n\t\t\t\tthis.switchState(states.SELECTED);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tmouseMoveEvent(event)\n\t{\n\t\tif (this.enabled)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.mouseMoved = true;\n\n\t\t\tthis.mouse.x = event.clientX;\n\t\t\tthis.mouse.y = event.clientY;\n\t\t\tthis.alternateMouse.x = event.clientX;\n\t\t\tthis.alternateMouse.y = event.clientY;\n\n\t\t\tif(event.touches)\n\t\t\t{\n\t\t\t\tthis.mouse.x = event.touches[0].clientX;\n\t\t\t\tthis.mouse.y = event.touches[0].clientY;\n\t\t\t\tthis.alternateMouse.x = event.touches[0].clientX;\n\t\t\t\tthis.alternateMouse.y = event.touches[0].clientY;\n\t\t\t}\n\n\t\t\tif (!this.mouseDown)\n\t\t\t{\n\t\t\t\tthis.updateIntersections();\n\t\t\t}\n\n\t\t\tswitch (this.state)\n\t\t\t{\n\t\t\tcase states.UNSELECTED:\n\t\t\t\tthis.updateMouseover();\n\t\t\t\tbreak;\n\t\t\tcase states.SELECTED:\n\t\t\t\tthis.updateMouseover();\n\t\t\t\tbreak;\n\t\t\tcase states.DRAGGING:\n\t\t\tcase states.ROTATING:\n\t\t\tcase states.ROTATING_FREE:\n\t\t\t\tthis.clickDragged();\n\t\t\t\tthis.hud.update();\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tmouseUpEvent()\n\t{\n\t\tif (this.enabled)\n\t\t{\n\t\t\tthis.mouseDown = false;\n\n\t\t\tswitch (this.state)\n\t\t\t{\n\t\t\tcase states.DRAGGING:\n\t\t\t\tthis.selectedObject.clickReleased();\n\t\t\t\tthis.switchState(states.SELECTED);\n\t\t\t\tbreak;\n\t\t\tcase states.ROTATING:\n\t\t\t\tif (!this.mouseMoved) {\n\t\t\t\t\tthis.switchState(states.ROTATING_FREE);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.switchState(states.SELECTED);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase states.UNSELECTED:\n\t\t\t\tif (!this.mouseMoved) {\n\t\t\t\t\tthis.checkWallsAndFloors();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase states.SELECTED:\n\t\t\t\tif (this.intersectedObject == null && !this.mouseMoved)\n\t\t\t\t{\n\t\t\t\t\tthis.switchState(states.UNSELECTED);\n\t\t\t\t\tthis.checkWallsAndFloors();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase states.ROTATING_FREE:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tswitchState(newState)\n\t{\n\t\tif (newState != this.state)\n\t\t{\n\t\t\tthis.onExit(this.state);\n\t\t\tthis.onEntry(newState);\n\t\t}\n\t\tthis.state = newState;\n\t\tthis.hud.setRotating(this.isRotating());\n\t}\n\n\tonEntry(state)\n\t{\n\t\tswitch (state)\n\t\t{\n\t\tcase states.UNSELECTED:\n\t\t\tthis.setSelectedObject(null);\n\t\t\tbreak;\n\t\tcase states.SELECTED:\n\t\t\tthis.controls.enabled = true;\n\t\t\tbreak;\n\t\tcase states.ROTATING:\n\t\tcase states.ROTATING_FREE:\n\t\t\tthis.controls.enabled = false;\n\t\t\tbreak;\n\t\tcase states.DRAGGING:\n\t\t\tthis.three.setCursorStyle('move');\n\t\t\tthis.clickPressed();\n\t\t\tthis.controls.enabled = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tonExit(state)\n\t{\n\t\tswitch (state)\n\t\t{\n\t\tcase states.UNSELECTED:\n\t\tcase states.SELECTED:\n\t\t\tbreak;\n\t\tcase states.DRAGGING:\n\t\t\tif (this.mouseoverObject)\n\t\t\t{\n\t\t\t\tthis.three.setCursorStyle('pointer');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.three.setCursorStyle('auto');\n\t\t\t}\n\t\t\tbreak;\n\t\tcase states.ROTATING:\n\t\tcase states.ROTATING_FREE:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tselectedObject()\n\t{\n\t\treturn this.selectedObject;\n\t}\n\n\t// updates the vector of the intersection with the plane of a given\n\t// mouse position, and the intersected object\n\t// both may be set to null if no intersection found\n\tupdateIntersections()\n\t{\n\t\t// check the rotate arrow\n\t\tvar hudObject = this.hud.getObject();\n\t\tif (hudObject != null)\n\t\t{\n\t\t\tvar hudIntersects = this.getIntersections(this.mouse, hudObject, false, false, true);\n\t\t\tif (hudIntersects.length > 0)\n\t\t\t{\n\t\t\t\tthis.rotateMouseOver = true;\n\t\t\t\tthis.hud.setMouseover(true);\n\t\t\t\tthis.intersectedObject = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.rotateMouseOver = false;\n\t\tthis.hud.setMouseover(false);\n\n\t\t// check objects\n\t\tvar items = this.model.scene.getItems();\n\t\tvar intersects = this.getIntersections(this.mouse, items, false, true);\n\t\tif (intersects.length > 0)\n\t\t{\n\t\t\tthis.intersectedObject = intersects[0].object;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.intersectedObject = null;\n\t\t}\n\t}\n\n\t// returns the first intersection object\n\titemIntersection(vec2, item)\n\t{\n\t\tvar customIntersections = item.customIntersectionPlanes();\n\t\tvar intersections = null;\n\t\tif (customIntersections && customIntersections.length > 0)\n\t\t{\n\t\t\tintersections = this.getIntersections(vec2, customIntersections, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tintersections = this.getIntersections(vec2, this.plane);\n\t\t}\n\t\tif (intersections.length > 0)\n\t\t{\n\t\t\treturn intersections[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// sets coords to -1 to 1\n\tnormalizeVector2(vec2)\n\t{\n\t\tvar retVec = new Vector2();\n\t\tretVec.x = ((vec2.x - this.three.widthMargin) / (window.innerWidth - this.three.widthMargin)) * 2 - 1;\n\t\tretVec.y = -((vec2.y - this.three.heightMargin) / (window.innerHeight - this.three.heightMargin)) * 2 + 1;\n\t\treturn retVec;\n\t}\n\n\t//\n\tmouseToVec3(vec2)\n\t{\n\t\tvar normVec2 = this.normalizeVector2(vec2);\n\t\tvar vector = new Vector3(normVec2.x, normVec2.y, 0.5);\n\t\tvector.unproject(this.camera);\n\t\treturn vector;\n\t}\n\n\t// filter by normals will only return objects facing the camera\n\t// objects can be an array of objects or a single object\n\tgetIntersections(vec2, objects, filterByNormals, onlyVisible, recursive, linePrecision)\n\t{\n\t\tvar vector = this.mouseToVec3(vec2);\n\t\tonlyVisible = onlyVisible || false;\n\t\tfilterByNormals = filterByNormals || false;\n\t\trecursive = recursive || false;\n\t\tlinePrecision = linePrecision || 20;\n\n\t\tvar direction = vector.sub(this.camera.position).normalize();\n\t\tvar raycaster = new Raycaster(this.camera.position, direction);\n\t\traycaster.linePrecision = linePrecision;\n\n\t\traycaster = new Raycaster();\n\t\traycaster.setFromCamera( this.normalizeVector2(this.alternateMouse), this.camera );\n\n\t\tvar intersections;\n\n\t\tif (objects instanceof Array)\n\t\t{\n\t\t\tintersections = raycaster.intersectObjects(objects, recursive);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tintersections = raycaster.intersectObject(objects, recursive);\n\t\t}\n\t\t// filter by visible, if true\n\t\tif (onlyVisible)\n\t\t{\n\t\t\tintersections = Utils.removeIf(intersections, function (intersection) {return !intersection.object.visible;});\n\t\t}\n\n\t\t// filter by normals, if true\n\t\tif (filterByNormals)\n\t\t{\n\t\t\tintersections = Utils.removeIf(intersections, function (intersection) {var dot = intersection.face.normal.dot(direction);return (dot > 0);});\n\t\t}\n\t\treturn intersections;\n\t}\n\n\t// manage the selected object\n\tsetSelectedObject(object)\n\t{\n\t\tif (this.state === states.UNSELECTED)\n\t\t{\n\t\t\tthis.switchState(states.SELECTED);\n\t\t}\n\t\tif (this.selectedObject != null)\n\t\t{\n\t\t\tthis.selectedObject.setUnselected();\n\t\t}\n\t\tif (object != null)\n\t\t{\n\t\t\tthis.selectedObject = object;\n\t\t\tthis.selectedObject.setSelected();\n// three.itemSelectedCallbacks.fire(object);\n\t\t\tthis.three.itemIsSelected(object);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedObject = null;\n// three.itemUnselectedCallbacks.fire();\n\t\t\tthis.three.itemIsUnselected();\n\t\t}\n\t\tthis.needsUpdate = true;\n\t}\n\n\t// TODO: there MUST be simpler logic for expressing this\n\tupdateMouseover()\n\t{\n\t\tif (this.intersectedObject != null)\n\t\t{\n\t\t\tif (this.mouseoverObject != null)\n\t\t\t{\n\t\t\t\tif (this.mouseoverObject !== this.intersectedObject)\n\t\t\t\t{\n\t\t\t\t\tthis.mouseoverObject.mouseOff();\n\t\t\t\t\tthis.mouseoverObject = this.intersectedObject;\n\t\t\t\t\tthis.mouseoverObject.mouseOver();\n\t\t\t\t\tthis.needsUpdate = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// do nothing, mouseover already set\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.mouseoverObject = this.intersectedObject;\n\t\t\t\tthis.mouseoverObject.mouseOver();\n\t\t\t\tthis.three.setCursorStyle('pointer');\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t\telse if (this.mouseoverObject != null)\n\t\t{\n\t\t\tthis.mouseoverObject.mouseOff();\n\t\t\tthis.three.setCursorStyle('auto');\n\t\t\tthis.mouseoverObject = null;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\t}\n\n\tchangeCamera(newCamera)\n\t{\n\t\tthis.camera = newCamera;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 884,
    "kind": "variable",
    "name": "states",
    "memberof": "scripts/three/controller.js",
    "static": true,
    "longname": "scripts/three/controller.js~states",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/controller.js",
    "importStyle": "{states}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"UNSELECTED\": *, \"SELECTED\": number, \"DRAGGING\": number, \"ROTATING\": number, \"ROTATING_FREE\": number, \"PANNING\": number}"
      ]
    }
  },
  {
    "__docId__": 885,
    "kind": "class",
    "name": "Controller",
    "memberof": "scripts/three/controller.js",
    "static": true,
    "longname": "scripts/three/controller.js~Controller",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/controller.js",
    "importStyle": "{Controller}",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 886,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 887,
    "kind": "member",
    "name": "three",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#three",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 888,
    "kind": "member",
    "name": "model",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#model",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 889,
    "kind": "member",
    "name": "camera",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#camera",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 890,
    "kind": "member",
    "name": "element",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#element",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 891,
    "kind": "member",
    "name": "controls",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#controls",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 892,
    "kind": "member",
    "name": "hud",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#hud",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 893,
    "kind": "member",
    "name": "enabled",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#enabled",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 894,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#scene",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 895,
    "kind": "member",
    "name": "plane",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#plane",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 896,
    "kind": "member",
    "name": "mouse",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouse",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 897,
    "kind": "member",
    "name": "alternateMouse",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#alternateMouse",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 898,
    "kind": "member",
    "name": "intersectedObject",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#intersectedObject",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 899,
    "kind": "member",
    "name": "mouseoverObject",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseoverObject",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 901,
    "kind": "member",
    "name": "mouseDown",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseDown",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 902,
    "kind": "member",
    "name": "mouseMoved",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseMoved",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 903,
    "kind": "member",
    "name": "rotateMouseOver",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#rotateMouseOver",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 904,
    "kind": "member",
    "name": "state",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#state",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 905,
    "kind": "member",
    "name": "needsUpdate",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#needsUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 906,
    "kind": "member",
    "name": "itemremovedevent",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#itemremovedevent",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 907,
    "kind": "member",
    "name": "itemloadedevent",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#itemloadedevent",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 908,
    "kind": "member",
    "name": "mousedownevent",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mousedownevent",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 909,
    "kind": "member",
    "name": "mouseupevent",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseupevent",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 910,
    "kind": "member",
    "name": "mousemoveevent",
    "memberof": "scripts/three/controller.js~Controller",
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mousemoveevent",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 911,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#init",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 912,
    "kind": "method",
    "name": "itemRemoved",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#itemRemoved",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 913,
    "kind": "method",
    "name": "itemLoaded",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#itemLoaded",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 914,
    "kind": "method",
    "name": "clickPressed",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#clickPressed",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "vec2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 916,
    "kind": "method",
    "name": "clickDragged",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#clickDragged",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [
      {
        "name": "vec2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 918,
    "kind": "method",
    "name": "showGroundPlane",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#showGroundPlane",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 919,
    "kind": "method",
    "name": "setGroundPlane",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#setGroundPlane",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 921,
    "kind": "method",
    "name": "checkWallsAndFloors",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#checkWallsAndFloors",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 922,
    "kind": "method",
    "name": "isRotating",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#isRotating",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 923,
    "kind": "method",
    "name": "mouseDownEvent",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseDownEvent",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 926,
    "kind": "method",
    "name": "mouseMoveEvent",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseMoveEvent",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 929,
    "kind": "method",
    "name": "mouseUpEvent",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseUpEvent",
    "access": "public",
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 931,
    "kind": "method",
    "name": "switchState",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#switchState",
    "access": "public",
    "description": null,
    "lineNumber": 316,
    "undocument": true,
    "params": [
      {
        "name": "newState",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 933,
    "kind": "method",
    "name": "onEntry",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#onEntry",
    "access": "public",
    "description": null,
    "lineNumber": 327,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 934,
    "kind": "method",
    "name": "onExit",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#onExit",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 935,
    "kind": "method",
    "name": "selectedObject",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#selectedObject",
    "access": "public",
    "description": null,
    "lineNumber": 371,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 936,
    "kind": "method",
    "name": "updateIntersections",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#updateIntersections",
    "access": "public",
    "description": null,
    "lineNumber": 379,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 942,
    "kind": "method",
    "name": "itemIntersection",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#itemIntersection",
    "access": "public",
    "description": null,
    "lineNumber": 411,
    "undocument": true,
    "params": [
      {
        "name": "vec2",
        "types": [
          "*"
        ]
      },
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 943,
    "kind": "method",
    "name": "normalizeVector2",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#normalizeVector2",
    "access": "public",
    "description": null,
    "lineNumber": 434,
    "undocument": true,
    "params": [
      {
        "name": "vec2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 944,
    "kind": "method",
    "name": "mouseToVec3",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#mouseToVec3",
    "access": "public",
    "description": null,
    "lineNumber": 443,
    "undocument": true,
    "params": [
      {
        "name": "vec2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 945,
    "kind": "method",
    "name": "getIntersections",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#getIntersections",
    "access": "public",
    "description": null,
    "lineNumber": 453,
    "undocument": true,
    "params": [
      {
        "name": "vec2",
        "types": [
          "*"
        ]
      },
      {
        "name": "objects",
        "types": [
          "*"
        ]
      },
      {
        "name": "filterByNormals",
        "types": [
          "*"
        ]
      },
      {
        "name": "onlyVisible",
        "types": [
          "*"
        ]
      },
      {
        "name": "recursive",
        "types": [
          "*"
        ]
      },
      {
        "name": "linePrecision",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 946,
    "kind": "method",
    "name": "setSelectedObject",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#setSelectedObject",
    "access": "public",
    "description": null,
    "lineNumber": 493,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 950,
    "kind": "method",
    "name": "updateMouseover",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#updateMouseover",
    "access": "public",
    "description": null,
    "lineNumber": 520,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 957,
    "kind": "method",
    "name": "changeCamera",
    "memberof": "scripts/three/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controller.js~Controller#changeCamera",
    "access": "public",
    "description": null,
    "lineNumber": 555,
    "undocument": true,
    "params": [
      {
        "name": "newCamera",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 959,
    "kind": "file",
    "name": "scripts/three/controls.js",
    "content": "import {EventDispatcher, Vector2, Vector3} from 'three';\nimport $ from 'jquery';\nimport {EVENT_CAMERA_MOVED} from '../core/events.js';\n\n/**\nThis file is a modified version of THREE.OrbitControls\nContributors:\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\nexport const STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\nexport class Controls extends EventDispatcher\n{\n\tconstructor(object, domElement)\n\t{\n\t\tsuper();\n\t\tthis.object = object;\n\t\tthis.domElement = (domElement !== undefined) ? domElement : $(document);\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\t\t// \"target\" sets the location of focus, where the control orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new Vector3();\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility\n\t\tthis.noZoom = false;\n\t\tthis.zoomSpeed = 1.0;\n\t\t// Limits to how far you can dolly in and out\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = 2500; //Infinity;\n\t\t// Set to true to disable this control\n\t\tthis.noRotate = false;\n\t\tthis.rotateSpeed = 1.0;\n\t\t// Set to true to disable this control\n\t\tthis.noPan = false;\n\t\tthis.keyPanSpeed = 40.0;\t// pixels moved per arrow key push\n\t\t// Set to true to automatically rotate around the target\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI / 2; // radians\n\t\t// Set to true to disable use of the keys\n\t\tthis.noKeys = false;\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\tthis.cameraMovedCallbacks = $.Callbacks();\n\t\tthis.needsUpdate = true;\n\n\t\t// internals\n//\t\tvar window = $(window);\n\t\t\n\t\tthis.EPS = 0.000001;\n\t\tthis.rotateStart = new Vector2();\n\t\tthis.rotateEnd = new Vector2();\n\t\tthis.rotateDelta = new Vector2();\n\t\tthis.panStart = new Vector2();\n\t\tthis.panEnd = new Vector2();\n\t\tthis.panDelta = new Vector2();\n\t\tthis.dollyStart = new Vector2();\n\t\tthis.dollyEnd = new Vector2();\n\t\tthis.dollyDelta = new Vector2();\n\n\t\tthis.phiDelta = 0;\n\t\tthis.thetaDelta = 0;\n\t\tthis.scale = 1;\n\t\tthis.pan = new Vector3();\n\t\tthis.state = STATE.NONE;\n\t\t\n\t\tthis.mouseupevent = (event) => {this.onMouseUp(event);};\n\t\tthis.mousemoveevent = (event) => {this.onMouseMove(event);};\n\t\tthis.mousedownevent = (event) => {this.onMouseDown(event);};\n\t\tthis.mousewheelevent = (event) => {this.onMouseWheel(event);};\n\t\tthis.touchstartevent = (event) => {this.touchstart(event);};\n\t\tthis.touchendevent = (event) => {this.touchend(event);};\n\t\tthis.touchmoveevent = (event) => {this.touchmove(event);};\n\t\tthis.keydownevent = (event)=> {this.onKeyDown(event);};\n\n\t\tthis.domElement.addEventListener('contextmenu', (event) => { event.preventDefault(); }, false);\n\t\tthis.domElement.addEventListener('mousedown', this.mousedownevent, false);\n\t\tthis.domElement.addEventListener('mousewheel', this.mousewheelevent, false);\n\t\tthis.domElement.addEventListener('DOMMouseScroll', this.mousewheelevent, false); // firefox\n\t\tthis.domElement.addEventListener('touchstart', this.touchstartevent, false);\n\t\tthis.domElement.addEventListener('touchend', this.touchendevent, false);\n\t\tthis.domElement.addEventListener('touchmove', this.touchmoveevent, false);\n\t\twindow.addEventListener('keydown', this.keydownevent, false);\n\t}\n\n\tcontrolsActive() \n\t{\n\t\treturn (this.state === STATE.NONE);\n\t}\n\n\tsetPan(vec3) \n\t{\n\t\tthis.pan = vec3;\n\t}\n\n\tpanTo(vec3)\n\t{\n\t\tvar newTarget = new Vector3(vec3.x, this.target.y, vec3.z);\n\t\tvar delta = this.target.clone().sub(newTarget);\n\t\tthis.pan.sub(delta);\n\t\tthis.update();\n\t}\n\n\trotateLeft(angle) \n\t{\n\t\tif (angle === undefined) \n\t\t{\n\t\t\tangle = this.getAutoRotationAngle();\n\t\t}\n\t\tthis.thetaDelta -= angle;\n\t}\n\n\trotateUp(angle) \n\t{\n\t\tif (angle === undefined) \n\t\t{\n\t\t\tangle = this.getAutoRotationAngle();\n\t\t}\n\t\tthis.phiDelta -= angle;\n\t}\n\n\t// pass in distance in world space to move left\n\tpanLeft(distance) \n\t{\n\n\t\tvar panOffset = new Vector3();\n\t\tvar te = this.object.matrix.elements;\n\t\t// get X column of matrix\n\t\tpanOffset.set(te[0], 0, te[2]);\n\t\tpanOffset.normalize();\n\t\tpanOffset.multiplyScalar(-distance);\n\t\tthis.pan.add(panOffset);\n\n\t}\n\n\t// pass in distance in world space to move up\n\tpanUp(distance) \n\t{\n\t\tvar panOffset = new Vector3();\n\t\tvar te = this.object.matrix.elements;\n\t\t// get Y column of matrix\n\t\tpanOffset.set(te[4], 0, te[6]);\n\t\tpanOffset.normalize();\n\t\tpanOffset.multiplyScalar(distance);\n\t\tthis.pan.add(panOffset);\n\t}\n\n\t// main entry point; pass in Vector2 of change desired in pixel space,\n\t// right and down are positive\n//\tAvoid the method name 'pan' this is conflicting with a variable name\n//\tpan(delta)\n\tupdatePan(delta)\n\t{\n\t\tvar element = (this.domElement === $(document)) ? this.domElement.body : this.domElement;\n\t\tif (this.object.fov !== undefined) \n\t\t{\n\t\t\t// perspective\n\t\t\tvar position = this.object.position;\n\t\t\tvar offset = position.clone().sub(this.target);\n\t\t\tvar targetDistance = offset.length();\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan((this.object.fov / 2) * Math.PI / 180.0);\n\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\tthis.panLeft(2 * delta.x * targetDistance / element.clientHeight);\n\t\t\tthis.panUp(2 * delta.y * targetDistance / element.clientHeight);\n\t\t} \n\t\telse if (this.object.top !== undefined) \n\t\t{\n\t\t\t// orthographic\n\t\t\tthis.panLeft(delta.x * (this.object.right - this.object.left) / element.clientWidth);\n\t\t\tthis.panUp(delta.y * (this.object.top - this.object.bottom) / element.clientHeight);\n\t\t} \n\t\telse \n\t\t{\n\t\t\t// camera neither orthographic or perspective - warn user\n\t\t\tconsole.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n\t\t}\n\n\t\tthis.update();\n\t}\n\n\tpanXY(x, y)\n\t{\n//\t\tthis.pan(new Vector2(x, y));\n\t\tthis.updatePan(new Vector2(x, y));\n\t}\n\n\tdollyIn(dollyScale) \n\t{\n\t\tif (dollyScale === undefined) \n\t\t{\n\t\t\tdollyScale = this.getZoomScale();\n\t\t}\n\t\tthis.scale /= dollyScale;\n\t}\n\n\tdollyOut(dollyScale) \n\t{\n\t\tif (dollyScale === undefined) \n\t\t{\n\t\t\tdollyScale = this.getZoomScale();\n\t\t}\n\t\tthis.scale *= dollyScale;\n\t}\n\n\tupdate() \n\t{\n\t\tvar position = this.object.position;\n\t\tvar offset = position.clone().sub(this.target);\n\n\t\t// angle from z-axis around y-axis\n\t\tvar theta = Math.atan2(offset.x, offset.z);\n\t\t// angle from y-axis\n\t\tvar phi = Math.atan2(Math.sqrt(offset.x * offset.x + offset.z * offset.z), offset.y);\n\n\t\tif (this.autoRotate) \n\t\t{\n\t\t\tthis.rotateLeft(this.getAutoRotationAngle());\n\t\t}\n\n\t\ttheta += this.thetaDelta;\n\t\tphi += this.phiDelta;\n\n\t\t// restrict phi to be between desired limits\n\t\tphi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, phi));\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tphi = Math.max(this.EPS, Math.min(Math.PI - this.EPS, phi));\n\n\t\tvar radius = offset.length() * this.scale;\n\n\t\t// restrict radius to be between desired limits\n\t\tradius = Math.max(this.minDistance, Math.min(this.maxDistance, radius));\n\n\t\t// move target to panned location\n\t\tthis.target.add(this.pan);\n\n\t\toffset.x = radius * Math.sin(phi) * Math.sin(theta);\n\t\toffset.y = radius * Math.cos(phi);\n\t\toffset.z = radius * Math.sin(phi) * Math.cos(theta);\n\n\t\tposition.copy(this.target).add(offset);\n\n\t\tthis.object.lookAt(this.target);\n\n\t\tthis.thetaDelta = 0;\n\t\tthis.phiDelta = 0;\n\t\tthis.scale = 1;\n\t\tthis.pan.set(0, 0, 0);\n\n//\t\tthis.cameraMovedCallbacks.fire();\n\t\tthis.dispatchEvent({type:EVENT_CAMERA_MOVED});\n\t\tthis.needsUpdate = true;\n\t}\n\n\tgetAutoRotationAngle() \n\t{\n\t\treturn 2 * Math.PI / 60 / 60 * this.autoRotateSpeed;\n\t}\n\n\tgetZoomScale() \n\t{\n\t\treturn Math.pow(0.95, this.zoomSpeed);\n\t}\n\n\tonMouseDown(event)\n\t{\n\t\tif (this.enabled === false) { return; }\n\t\tevent.preventDefault();\n\n\t\tif (event.button === 0) \n\t\t{\n\t\t\tif (this.noRotate === true) { return; }\n\t\t\tthis.state = STATE.ROTATE;\n\t\t\tthis.rotateStart.set(event.clientX, event.clientY);\n\t\t} \n\t\telse if (event.button === 1) \n\t\t{\n\t\t\tif (this.noZoom === true) { return; }\n\t\t\tthis.state = STATE.DOLLY;\n\t\t\tthis.dollyStart.set(event.clientX, event.clientY);\n\t\t} \n\t\telse if (event.button === 2) \n\t\t{\n\t\t\tif (this.noPan === true) { return; }\n\t\t\tthis.state = STATE.PAN;\n\t\t\tthis.panStart.set(event.clientX, event.clientY);\n\t\t}\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tthis.domElement.addEventListener('mousemove', this.mousemoveevent, false);\n\t\tthis.domElement.addEventListener('mouseup', this.mouseupevent, false);\n\n\t}\n\n\tonMouseMove(event) \n\t{\n\t\tif (this.enabled === false) \n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tvar element = this.domElement === $(document) ? this.domElement.body : this.domElement;\n\t\tif (this.state === STATE.ROTATE) \n\t\t{\n\t\t\tif (this.noRotate === true) \n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.rotateEnd.set(event.clientX, event.clientY);\n\t\t\tthis.rotateDelta.subVectors(this.rotateEnd, this.rotateStart);\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\tthis.rotateLeft(2 * Math.PI * this.rotateDelta.x / element.clientWidth * this.rotateSpeed);\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\tthis.rotateUp(2 * Math.PI * this.rotateDelta.y / element.clientHeight * this.rotateSpeed);\n\t\t\tthis.rotateStart.copy(this.rotateEnd);\n\t\t} \n\t\telse if (this.state === STATE.DOLLY) \n\t\t{\n\t\t\tif (this.noZoom === true)\n\t\t\t{\n\t\t\t\treturn; \n\t\t\t}\n\t\t\tthis.dollyEnd.set(event.clientX, event.clientY);\n\t\t\tthis.dollyDelta.subVectors(this.dollyEnd, this.dollyStart);\n\t\t\tif (this.dollyDelta.y > 0) \n\t\t\t{\n\t\t\t\tthis.dollyIn();\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tthis.dollyOut();\n\t\t\t}\n\t\t\tthis.dollyStart.copy(this.dollyEnd);\n\n\t\t} \n\t\telse if (this.state === STATE.PAN) \n\t\t{\n\t\t\tif (this.noPan === true) \n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.panEnd.set(event.clientX, event.clientY);\n\t\t\tthis.panDelta.subVectors(this.panEnd, this.panStart);\n//\t\t\tthis.pan(this.panDelta);\n\t\t\tthis.updatePan(this.panDelta);\n\t\t\tthis.panStart.copy(this.panEnd);\n\t\t}\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tthis.update();\n\t}\n\n\tonMouseUp( /* event */) \n\t{\n\t\tif (this.enabled === false)\n\t\t{\n\t\t\treturn; \n\t\t}\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tthis.domElement.removeEventListener('mousemove', this.mousemoveevent, false);\n\t\tthis.domElement.removeEventListener('mouseup', this.mouseupevent, false);\n\t\tthis.state = STATE.NONE;\n\t}\n\n\tonMouseWheel(event) \n\t{\n\t\tif (this.enabled === false || this.noZoom === true)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar delta = 0;\n\t\tif (event.wheelDelta) \n\t\t{ \n\t\t\t// WebKit / Opera / Explorer 9\n\t\t\tdelta = event.wheelDelta;\n\t\t} \n\t\telse if (event.detail) \n\t\t{ \n\t\t\t// Firefox\n\t\t\tdelta = - event.detail;\n\t\t}\n\n\t\tif (delta > 0) \n\t\t{\n\t\t\tthis.dollyOut();\n\t\t} \n\t\telse \n\t\t{\n\t\t\tthis.dollyIn();\n\t\t}\n\t\tthis.update();\n\t}\n\n\tonKeyDown(event) \n\t{\n\n\t\tif (this.enabled === false) \n\t\t{ \n\t\t\treturn; \n\t\t}\n\t\tif (this.noKeys === true) \n\t\t{ \n\t\t\treturn; \n\t\t}\n\t\tif (this.noPan === true) \n\t\t{ \n\t\t\treturn; \n\t\t}\n\n\t\tswitch (event.keyCode) \n\t\t{\n\t\tcase this.keys.UP:\n//\t\t\tthis.pan(new Vector2(0, this.keyPanSpeed));\n\t\t\tthis.updatePan(new Vector2(0, this.keyPanSpeed));\n\t\t\tbreak;\n\t\tcase this.keys.BOTTOM:\n//\t\t\tthis.pan(new Vector2(0, -this.keyPanSpeed));\n\t\t\tthis.updatePan(new Vector2(0, -this.keyPanSpeed));\n\t\t\tbreak;\n\t\tcase this.keys.LEFT:\n//\t\t\tthis.pan(new Vector2(this.keyPanSpeed, 0));\n\t\t\tthis.updatePan(new Vector2(this.keyPanSpeed, 0));\n\t\t\tbreak;\n\t\tcase this.keys.RIGHT:\n//\t\t\tthis.pan(new Vector2(-this.keyPanSpeed, 0));\n\t\t\tthis.updatePan(new Vector2(-this.keyPanSpeed, 0));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\ttouchstart(event) \n\t{\n\t\tif (this.enabled === false) \n\t\t{ \n\t\t\treturn; \n\t\t}\n\t\tswitch (event.touches.length) \n\t\t{\n\n\t\tcase 1:\t// one-fingered touch: rotate\n\t\t\tif (this.noRotate === true) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tthis.state = STATE.TOUCH_ROTATE;\n\t\t\tthis.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tbreak;\n\t\tcase 2:\t// two-fingered touch: dolly\n\t\t\tif (this.noZoom === true) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tthis.state = STATE.TOUCH_DOLLY;\n\t\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\t\t\tvar distance = Math.sqrt(dx * dx + dy * dy);\n\t\t\tthis.dollyStart.set(0, distance);\n\t\t\tbreak;\n\n\t\tcase 3: // three-fingered touch: pan\n\t\t\tif (this.noPan === true) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tthis.state = STATE.TOUCH_PAN;\n\t\t\tthis.panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.state = STATE.NONE;\n\t\t}\n\t}\n\n\ttouchmove(event) \n\t{\n\t\tif (this.enabled === false) \n\t\t{ \n\t\t\treturn; \n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar element = this.domElement === $(document) ? this.domElement.body : this.domElement;\n\n\t\tswitch (event.touches.length) \n\t\t{\n\t\tcase 1: // one-fingered touch: rotate\n\t\t\tif (this.noRotate === true) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tif (this.state !== STATE.TOUCH_ROTATE) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tthis.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tthis.rotateDelta.subVectors(this.rotateEnd, this.rotateStart);\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\tthis.rotateLeft(2 * Math.PI * this.rotateDelta.x / element.clientWidth * this.rotateSpeed);\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\tthis.rotateUp(2 * Math.PI * this.rotateDelta.y / element.clientHeight * this.rotateSpeed);\n\t\t\tthis.rotateStart.copy(this.rotateEnd);\n\t\t\tbreak;\n\n\t\tcase 2: // two-fingered touch: dolly\n\t\t\tif (this.noZoom === true) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tif (this.state !== STATE.TOUCH_DOLLY) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\t\t\tvar distance = Math.sqrt(dx * dx + dy * dy);\n\t\t\tthis.dollyEnd.set(0, distance);\n\t\t\tthis.dollyDelta.subVectors(this.dollyEnd, this.dollyStart);\n\t\t\tif (this.dollyDelta.y > 0) \n\t\t\t{\n\t\t\t\tthis.dollyOut();\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tthis.dollyIn();\n\t\t\t}\n\t\t\tthis.dollyStart.copy(this.dollyEnd);\n\t\t\tbreak;\n\n\t\tcase 3: // three-fingered touch: pan\n\t\t\tif (this.noPan === true) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tif (this.state !== STATE.TOUCH_PAN) \n\t\t\t{ \n\t\t\t\treturn; \n\t\t\t}\n\t\t\tthis.panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\t\t\tthis.panDelta.subVectors(this.panEnd, this.panStart);\n\t\t\tthis.pan(this.panDelta);\n\t\t\tthis.panStart.copy(this.panEnd);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.state = STATE.NONE;\n\t\t}\n\t}\n\n\ttouchend( /* event */) \n\t{\n\t\tif (this.enabled === false)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.state = STATE.NONE;\n\t}\t\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 960,
    "kind": "variable",
    "name": "STATE",
    "memberof": "scripts/three/controls.js",
    "static": true,
    "longname": "scripts/three/controls.js~STATE",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/controls.js",
    "importStyle": "{STATE}",
    "description": "This file is a modified version of THREE.OrbitControls\nContributors:",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "qiao / https://github.com/qiao"
      },
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com"
      },
      {
        "tagName": "@author",
        "tagValue": "alteredq / http://alteredqualia.com/"
      },
      {
        "tagName": "@author",
        "tagValue": "WestLangley / http://github.com/WestLangley"
      },
      {
        "tagName": "@author",
        "tagValue": "erich666 / http://erichaines.com"
      }
    ],
    "type": {
      "types": [
        "{\"NONE\": *, \"ROTATE\": *, \"DOLLY\": number, \"PAN\": number, \"TOUCH_ROTATE\": number, \"TOUCH_DOLLY\": number, \"TOUCH_PAN\": number}"
      ]
    }
  },
  {
    "__docId__": 961,
    "kind": "class",
    "name": "Controls",
    "memberof": "scripts/three/controls.js",
    "static": true,
    "longname": "scripts/three/controls.js~Controls",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/controls.js",
    "importStyle": "{Controls}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 962,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 963,
    "kind": "member",
    "name": "object",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#object",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 964,
    "kind": "member",
    "name": "domElement",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#domElement",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 965,
    "kind": "member",
    "name": "enabled",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#enabled",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 966,
    "kind": "member",
    "name": "target",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#target",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 967,
    "kind": "member",
    "name": "center",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#center",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 968,
    "kind": "member",
    "name": "noZoom",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#noZoom",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 969,
    "kind": "member",
    "name": "zoomSpeed",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#zoomSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 970,
    "kind": "member",
    "name": "minDistance",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#minDistance",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 971,
    "kind": "member",
    "name": "maxDistance",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#maxDistance",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 972,
    "kind": "member",
    "name": "noRotate",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#noRotate",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 973,
    "kind": "member",
    "name": "rotateSpeed",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#rotateSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 974,
    "kind": "member",
    "name": "noPan",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#noPan",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 975,
    "kind": "member",
    "name": "keyPanSpeed",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#keyPanSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 976,
    "kind": "member",
    "name": "autoRotate",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#autoRotate",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 977,
    "kind": "member",
    "name": "autoRotateSpeed",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#autoRotateSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 978,
    "kind": "member",
    "name": "minPolarAngle",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#minPolarAngle",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 979,
    "kind": "member",
    "name": "maxPolarAngle",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#maxPolarAngle",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 980,
    "kind": "member",
    "name": "noKeys",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#noKeys",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 981,
    "kind": "member",
    "name": "keys",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#keys",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "{\"LEFT\": number, \"UP\": number, \"RIGHT\": number, \"BOTTOM\": number}"
      ]
    }
  },
  {
    "__docId__": 982,
    "kind": "member",
    "name": "cameraMovedCallbacks",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#cameraMovedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 983,
    "kind": "member",
    "name": "needsUpdate",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#needsUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 984,
    "kind": "member",
    "name": "EPS",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#EPS",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 985,
    "kind": "member",
    "name": "rotateStart",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#rotateStart",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 986,
    "kind": "member",
    "name": "rotateEnd",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#rotateEnd",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 987,
    "kind": "member",
    "name": "rotateDelta",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#rotateDelta",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 988,
    "kind": "member",
    "name": "panStart",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panStart",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 989,
    "kind": "member",
    "name": "panEnd",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panEnd",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 990,
    "kind": "member",
    "name": "panDelta",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panDelta",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 991,
    "kind": "member",
    "name": "dollyStart",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#dollyStart",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 992,
    "kind": "member",
    "name": "dollyEnd",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#dollyEnd",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 993,
    "kind": "member",
    "name": "dollyDelta",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#dollyDelta",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 994,
    "kind": "member",
    "name": "phiDelta",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#phiDelta",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 995,
    "kind": "member",
    "name": "thetaDelta",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#thetaDelta",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 996,
    "kind": "member",
    "name": "scale",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#scale",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 997,
    "kind": "member",
    "name": "pan",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#pan",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 998,
    "kind": "member",
    "name": "state",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#state",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 999,
    "kind": "member",
    "name": "mouseupevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#mouseupevent",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1000,
    "kind": "member",
    "name": "mousemoveevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#mousemoveevent",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1001,
    "kind": "member",
    "name": "mousedownevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#mousedownevent",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1002,
    "kind": "member",
    "name": "mousewheelevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#mousewheelevent",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1003,
    "kind": "member",
    "name": "touchstartevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#touchstartevent",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1004,
    "kind": "member",
    "name": "touchendevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#touchendevent",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1005,
    "kind": "member",
    "name": "touchmoveevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#touchmoveevent",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1006,
    "kind": "member",
    "name": "keydownevent",
    "memberof": "scripts/three/controls.js~Controls",
    "static": false,
    "longname": "scripts/three/controls.js~Controls#keydownevent",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1007,
    "kind": "method",
    "name": "controlsActive",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#controlsActive",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1008,
    "kind": "method",
    "name": "setPan",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#setPan",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1010,
    "kind": "method",
    "name": "panTo",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panTo",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1011,
    "kind": "method",
    "name": "rotateLeft",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#rotateLeft",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "params": [
      {
        "name": "angle",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1013,
    "kind": "method",
    "name": "rotateUp",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#rotateUp",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [
      {
        "name": "angle",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1015,
    "kind": "method",
    "name": "panLeft",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panLeft",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "distance",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1016,
    "kind": "method",
    "name": "panUp",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panUp",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "params": [
      {
        "name": "distance",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1017,
    "kind": "method",
    "name": "updatePan",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#updatePan",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [
      {
        "name": "delta",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1018,
    "kind": "method",
    "name": "panXY",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#panXY",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1019,
    "kind": "method",
    "name": "dollyIn",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#dollyIn",
    "access": "public",
    "description": null,
    "lineNumber": 198,
    "undocument": true,
    "params": [
      {
        "name": "dollyScale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1021,
    "kind": "method",
    "name": "dollyOut",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#dollyOut",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "dollyScale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1023,
    "kind": "method",
    "name": "update",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#update",
    "access": "public",
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1028,
    "kind": "method",
    "name": "getAutoRotationAngle",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#getAutoRotationAngle",
    "access": "public",
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1029,
    "kind": "method",
    "name": "getZoomScale",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#getZoomScale",
    "access": "public",
    "description": null,
    "lineNumber": 271,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1030,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#onMouseDown",
    "access": "public",
    "description": null,
    "lineNumber": 276,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1034,
    "kind": "method",
    "name": "onMouseMove",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#onMouseMove",
    "access": "public",
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1035,
    "kind": "method",
    "name": "onMouseUp",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#onMouseUp",
    "access": "public",
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1037,
    "kind": "method",
    "name": "onMouseWheel",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#onMouseWheel",
    "access": "public",
    "description": null,
    "lineNumber": 375,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1038,
    "kind": "method",
    "name": "onKeyDown",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#onKeyDown",
    "access": "public",
    "description": null,
    "lineNumber": 405,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1039,
    "kind": "method",
    "name": "touchstart",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#touchstart",
    "access": "public",
    "description": null,
    "lineNumber": 442,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1044,
    "kind": "method",
    "name": "touchmove",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#touchmove",
    "access": "public",
    "description": null,
    "lineNumber": 484,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1046,
    "kind": "method",
    "name": "touchend",
    "memberof": "scripts/three/controls.js~Controls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/controls.js~Controls#touchend",
    "access": "public",
    "description": null,
    "lineNumber": 558,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1048,
    "kind": "file",
    "name": "scripts/three/edge.js",
    "content": "import {EventDispatcher, TextureLoader, RepeatWrapping, Vector2, Vector3, MeshBasicMaterial, FrontSide, DoubleSide, BackSide, Shape, Path, ShapeGeometry, Mesh, Geometry, Face3, } from 'three';\nimport {Utils} from '../core/utils.js';\nimport {EVENT_REDRAW, EVENT_CAMERA_MOVED, EVENT_CAMERA_ACTIVE_STATUS} from '../core/events.js';\n\nexport class Edge extends EventDispatcher\n{\n\tconstructor(scene, edge, controls)\n\t{\n\t\tsuper();\n\t\tthis.name = 'edge';\n\t\tthis.scene = scene;\n\t\tthis.edge = edge;\n\t\tthis.controls = controls;\n\n\t\tthis.wall = edge.wall;\n\t\tthis.front = edge.front;\n\n\t\tthis.planes = [];\n\t\tthis.phantomPlanes = [];\n\t\tthis.basePlanes = []; // always visible\n\t\tthis.texture = new TextureLoader();\n\n\t\tthis.lightMap = new TextureLoader().load('rooms/textures/walllightmap.png');\n\t\tthis.fillerColor = 0xdddddd;\n\t\tthis.sideColor = 0xcccccc;\n\t\tthis.baseColor = 0xdddddd;\n\t\tthis.visible = false;\n\n\t\tvar scope = this;\n\n\t\tthis.redrawevent = ()=>{scope.redraw();};\n\t\tthis.visibilityevent = ()=>{scope.updateVisibility();};\n\t\tthis.showallevent =  ()=>{scope.showAll();};\n\n\t\tthis.visibilityfactor = true;\n\t\tthis.init();\n\t}\n\n\tremove()\n\t{\n\t\tthis.edge.removeEventListener(EVENT_REDRAW, this.redrawevent);\n\t\tthis.controls.removeEventListener(EVENT_CAMERA_MOVED, this.visibilityevent);\n\t\tthis.controls.removeEventListener(EVENT_CAMERA_ACTIVE_STATUS, this.showallevent);\n\t\tthis.removeFromScene();\n\t}\n\n\tinit()\n\t{\n\t\tthis.edge.addEventListener(EVENT_REDRAW, this.redrawevent);\n\t\tthis.controls.addEventListener(EVENT_CAMERA_MOVED, this.visibilityevent);\n\t\tthis.controls.addEventListener(EVENT_CAMERA_ACTIVE_STATUS, this.showallevent);\n\n\t\tthis.updateTexture();\n\t\tthis.updatePlanes();\n\t\tthis.addToScene();\n\t}\n\n\tredraw()\n\t{\n\t\tthis.removeFromScene();\n\t\tthis.updateTexture();\n\t\tthis.updatePlanes();\n\t\tthis.addToScene();\n\t}\n\n\tremoveFromScene()\n\t{\n\t\tvar scope = this;\n\t\tscope.planes.forEach((plane) => {\n\t\t\tscope.scene.remove(plane);\n\t\t});\n\t\tscope.basePlanes.forEach((plane) => {\n\t\t\tscope.scene.remove(plane);\n\t\t});\n\t\tscope.planes = [];\n\t\tscope.basePlanes = [];\n\t}\n\n\taddToScene()\n\t{\n\t\tvar scope = this;\n\t\tthis.planes.forEach((plane) => {\n\t\t\tscope.scene.add(plane);\n\t\t});\n\t\tthis.basePlanes.forEach((plane) => {\n\t\t\tscope.scene.add(plane);\n\t\t});\n\t\tthis.updateVisibility();\n\t}\n\n\tshowAll()\n\t{\n\t\tvar scope = this;\n\t\tscope.visible = true;\n\t\tscope.planes.forEach((plane) =>\n\t\t{\n\t\t\tplane.material.transparent = !scope.visible;\n\t\t\tplane.material.opacity = 1.0;\n\t\t\tplane.visible = scope.visible;\n\t\t});\n\n\t\tthis.wall.items.forEach((item) => {\n\t\t\titem.updateEdgeVisibility(scope.visible, scope.front);\n\t\t});\n\t\tthis.wall.onItems.forEach((item) => {\n\t\t\titem.updateEdgeVisibility(scope.visible, scope.front);\n\t\t});\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tvar scope = this;\n\t\tscope.visible = true;\n\t\tscope.planes.forEach((plane) =>\n\t\t{\n\t\t\tplane.material.wireframe = flag;\n\t\t});\n\t}\n\n\tupdateVisibility()\n\t{\n\t\tvar scope = this;\n\t\t// finds the normal from the specified edge\n\t\tvar start = scope.edge.interiorStart();\n\t\tvar end = scope.edge.interiorEnd();\n\t\tvar x = end.x - start.x;\n\t\tvar y = end.y - start.y;\n\t\t// rotate 90 degrees CCW\n\t\tvar normal = new Vector3(-y, 0, x);\n\t\tnormal.normalize();\n\n\t\t// setup camera: scope.controls.object refers to the camera of the scene\n\t\tvar position = scope.controls.object.position.clone();\n\t\tvar focus = new Vector3((start.x + end.x) / 2.0,0,(start.y + end.y) / 2.0);\n\t\tvar direction = position.sub(focus).normalize();\n\n\t\t// find dot\n\t\tvar dot = normal.dot(direction);\n\t\t// update visible\n\t\tscope.visible = (dot >= 0);\n\t\t// show or hide planes\n\t\tscope.planes.forEach((plane) => {\n\t\t\tplane.material.transparent = !scope.visible;\n\t\t\tplane.material.opacity = (scope.visible)? 1.0 : 0.3;\n//\t\t\tplane.visible = scope.visible;\n\t\t});\n\t\tscope.updateObjectVisibility();\n\t}\n\n\tupdateObjectVisibility()\n\t{\n//\t\tvar scope = this;\n//\t\tthis.wall.items.forEach((item) => {\n//\t\t\titem.updateEdgeVisibility(scope.visible, scope.front);\n//\t\t});\n//\t\tthis.wall.onItems.forEach((item) => {\n//\t\t\titem.updateEdgeVisibility(scope.visible, scope.front);\n//\t\t});\n\t}\n\n\tupdateTexture(callback)\n\t{\n\t\tvar scope = this;\n\t\t// callback is fired when texture loads\n\t\tcallback = callback || function () {scope.scene.needsUpdate = true;};\n\t\tvar textureData = this.edge.getTexture();\n\t\tvar stretch = textureData.stretch;\n\t\tvar url = textureData.url;\n\t\tvar scale = textureData.scale;\n\t\tthis.texture = new TextureLoader().load(url, callback);\n\n\t\tif (!stretch)\n\t\t{\n\t\t\tvar height = this.wall.height;\n\t\t\tvar width = this.edge.interiorDistance();\n\t\t\tthis.texture.wrapT = RepeatWrapping;\n\t\t\tthis.texture.wrapS = RepeatWrapping;\n\t\t\tthis.texture.repeat.set(width / scale, height / scale);\n\t\t\tthis.texture.needsUpdate = true;\n\t\t}\n\t}\n\n\tupdatePlanes()\n\t{\n\t\tvar extStartCorner = this.wall.getClosestCorner(this.edge.exteriorStart());\n\t\tvar extEndCorner = this.wall.getClosestCorner(this.edge.exteriorEnd());\n\n\t\tif(extStartCorner == null || extEndCorner == null)\n\t\t{\n\t\t\t\t//Maybe this is an orphan wall. Let the garbage collector clean this up later\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar color = 0xFFFFFF;\n\t\tvar wallMaterial = new MeshBasicMaterial({\n\t\t\tcolor: color,\n\t\t\tside: FrontSide,\n\t\t\tmap: this.texture,\n\t\t\ttransparent: true,\n\t\t\tlightMap: this.lightMap,\n\t\t\topacity: 1.0,\n\t\t\twireframe: false,\n\t\t});\n\t\tvar fillerMaterial = new MeshBasicMaterial({\n\t\t\tcolor: this.fillerColor,\n\t\t\tside: DoubleSide,\n\t\t\tmap: this.texture,\n\t\t\ttransparent: true,\n\t\t\topacity: 1.0,\n\t\t\twireframe: false,\n\t\t});\n\n\t\t// exterior plane for real exterior walls\n\t\t//If the walls have corners that have more than one room attached\n\t\t//Then there is no need to construct an exterior wall\n\t\tif(this.edge.wall.start.getAttachedRooms().length < 2 || this.edge.wall.end.getAttachedRooms().length < 2)\n\t\t{\n\t\t\tthis.planes.push(this.makeWall(this.edge.exteriorStart(), this.edge.exteriorEnd(), this.edge.exteriorTransform, this.edge.invExteriorTransform, fillerMaterial));\n\t\t}\n\t\t// interior plane\n\t\tthis.planes.push(this.makeWall(this.edge.interiorStart(), this.edge.interiorEnd(), this.edge.interiorTransform, this.edge.invInteriorTransform, wallMaterial));\n\t\t// bottom\n\t\t// put into basePlanes since this is always visible\n\t\tthis.basePlanes.push(this.buildFillerUniformHeight(this.edge, 0, BackSide, this.baseColor));\n\t\tif(this.edge.wall.start.getAttachedRooms().length < 2 || this.edge.wall.end.getAttachedRooms().length < 2)\n\t\t{\n\t\t\tthis.planes.push(this.buildFillerVaryingHeights(this.edge, DoubleSide, this.fillerColor));\n\t\t}\n\n\t\t// sides\n\t\tthis.planes.push(this.buildSideFillter(this.edge.interiorStart(), this.edge.exteriorStart(), extStartCorner.elevation, this.sideColor));\n\t\tthis.planes.push(this.buildSideFillter(this.edge.interiorEnd(), this.edge.exteriorEnd(), extEndCorner.elevation, this.sideColor));\n\t}\n\n\t// start, end have x and y attributes (i.e. corners)\n\tmakeWall(start, end, transform, invTransform, material)\n\t{\n\t\tvar v1 = this.toVec3(start);\n\t\tvar v2 = this.toVec3(end);\n\t\tvar v3 = v2.clone();\n\t\tvar v4 = v1.clone();\n\t\tv3.y = this.wall.getClosestCorner(end).elevation;\n\t\tv4.y = this.wall.getClosestCorner(start).elevation;\n\t\tvar points = [v1.clone(), v2.clone(), v3.clone(), v4.clone()];\n\n\t\tpoints.forEach((p) => {p.applyMatrix4(transform);});\n\n\t\tvar spoints = [new Vector2(points[0].x, points[0].y),new Vector2(points[1].x, points[1].y),new Vector2(points[2].x, points[2].y),new Vector2(points[3].x, points[3].y)];\n\t\tvar shape = new Shape(spoints);\n\n\t\t// add holes for each wall item\n\t\tthis.wall.items.forEach((item) => {\n\t\t\tvar pos = item.position.clone();\n\t\t\tpos.applyMatrix4(transform);\n\t\t\tvar halfSize = item.halfSize;\n\t\t\tvar min = halfSize.clone().multiplyScalar(-1);\n\t\t\tvar max = halfSize.clone();\n\t\t\tmin.add(pos);\n\t\t\tmax.add(pos);\n\n\t\t\tvar holePoints = [new Vector2(min.x, min.y),new Vector2(max.x, min.y),new Vector2(max.x, max.y),new Vector2(min.x, max.y)];\n\t\t\tshape.holes.push(new Path(holePoints));\n\t\t});\n\n\t\tvar geometry = new ShapeGeometry(shape);\n\t\tgeometry.vertices.forEach((v) => {\n\t\t\tv.applyMatrix4(invTransform);\n\t\t});\n\n\t\t// make UVs\n\t\tvar totalDistance = Utils.distance(new Vector2(v1.x, v1.z), new Vector2(v2.x, v2.z));\n\t\tvar height = this.wall.height;\n\t\tgeometry.faceVertexUvs[0] = [];\n\n\t\tgeometry.faces.forEach((face) => {\n\t\t\tvar vertA = geometry.vertices[face.a];\n\t\t\tvar vertB = geometry.vertices[face.b];\n\t\t\tvar vertC = geometry.vertices[face.c];\n\t\t\tgeometry.faceVertexUvs[0].push([vertexToUv(vertA),vertexToUv(vertB),vertexToUv(vertC)]);\n\t\t});\n\n\t\tgeometry.faceVertexUvs[1] = geometry.faceVertexUvs[0];\n\t\tgeometry.computeFaceNormals();\n\t\tgeometry.computeVertexNormals();\n\n\t\tfunction vertexToUv(vertex)\n\t\t{\n\t\t\tvar x = Utils.distance(new Vector2(v1.x, v1.z), new Vector2(vertex.x, vertex.z)) / totalDistance;\n\t\t\tvar y = vertex.y / height;\n\t\t\treturn new Vector2(x, y);\n\t\t}\n\n\t\tvar mesh = new Mesh(geometry, material);\n\t\tmesh.name = 'wall';\n\t\treturn mesh;\n\t}\n\n\tbuildSideFillter(p1, p2, height, color)\n\t{\n\t\tvar points = [this.toVec3(p1), this.toVec3(p2), this.toVec3(p2, height), this.toVec3(p1, height) ];\n\n\t\tvar geometry = new Geometry();\n\t\tpoints.forEach((p) => {\n\t\t\tgeometry.vertices.push(p);\n\t\t});\n\t\tgeometry.faces.push(new Face3(0, 1, 2));\n\t\tgeometry.faces.push(new Face3(0, 2, 3));\n\n\t\tvar fillerMaterial = new MeshBasicMaterial({color: color,side: DoubleSide});\n\t\tvar filler = new Mesh(geometry, fillerMaterial);\n\t\treturn filler;\n\t}\n\n\tbuildFillerVaryingHeights(edge, side, color)\n\t{\n\t\tvar a = this.toVec3(edge.exteriorStart(), this.wall.getClosestCorner(edge.exteriorStart()).elevation);\n\t\tvar b = this.toVec3(edge.exteriorEnd(), this.wall.getClosestCorner(edge.exteriorEnd()).elevation);\n\t\tvar c = this.toVec3(edge.interiorEnd(), this.wall.getClosestCorner(edge.interiorEnd()).elevation);\n\t\tvar d = this.toVec3(edge.interiorStart(), this.wall.getClosestCorner(edge.interiorStart()).elevation);\n\t\tvar fillerMaterial = new MeshBasicMaterial({color: color,side: side});\n\n\t\tvar geometry = new Geometry();\n\t\tgeometry.vertices.push(a,b,c,d);\n\t\tgeometry.faces.push(new Face3(0, 1, 2));\n\t\tgeometry.faces.push(new Face3(0, 2, 3));\n\n\t\tvar filler = new Mesh(geometry, fillerMaterial);\n\t\treturn filler;\n\t}\n\n\tbuildFillerUniformHeight(edge, height, side, color)\n\t{\n\t\tvar points = [this.toVec2(edge.exteriorStart()), this.toVec2(edge.exteriorEnd()), this.toVec2(edge.interiorEnd()),this.toVec2(edge.interiorStart())];\n\n\t\tvar fillerMaterial = new MeshBasicMaterial({color: color,side: side});\n\t\tvar shape = new Shape(points);\n\t\tvar geometry = new ShapeGeometry(shape);\n\t\tvar filler = new Mesh(geometry, fillerMaterial);\n\t\tfiller.rotation.set(Math.PI / 2, 0, 0);\n\t\tfiller.position.y = height;\n\t\treturn filler;\n\t}\n\n\ttoVec2(pos)\n\t{\n\t\treturn new Vector2(pos.x, pos.y);\n\t}\n\n\ttoVec3(pos, height)\n\t{\n\t\theight = height || 0;\n\t\treturn new Vector3(pos.x, height, pos.y);\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/edge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1049,
    "kind": "class",
    "name": "Edge",
    "memberof": "scripts/three/edge.js",
    "static": true,
    "longname": "scripts/three/edge.js~Edge",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/edge.js",
    "importStyle": "{Edge}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1050,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 1051,
    "kind": "member",
    "name": "name",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#name",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1052,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#scene",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1053,
    "kind": "member",
    "name": "edge",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#edge",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1054,
    "kind": "member",
    "name": "controls",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#controls",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1055,
    "kind": "member",
    "name": "wall",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#wall",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1056,
    "kind": "member",
    "name": "front",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#front",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1057,
    "kind": "member",
    "name": "planes",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#planes",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1058,
    "kind": "member",
    "name": "phantomPlanes",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#phantomPlanes",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1059,
    "kind": "member",
    "name": "basePlanes",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#basePlanes",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1060,
    "kind": "member",
    "name": "texture",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#texture",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1061,
    "kind": "member",
    "name": "lightMap",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#lightMap",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1062,
    "kind": "member",
    "name": "fillerColor",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#fillerColor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1063,
    "kind": "member",
    "name": "sideColor",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#sideColor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1064,
    "kind": "member",
    "name": "baseColor",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#baseColor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1065,
    "kind": "member",
    "name": "visible",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#visible",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1066,
    "kind": "member",
    "name": "redrawevent",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#redrawevent",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1067,
    "kind": "member",
    "name": "visibilityevent",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#visibilityevent",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1068,
    "kind": "member",
    "name": "showallevent",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#showallevent",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1069,
    "kind": "member",
    "name": "visibilityfactor",
    "memberof": "scripts/three/edge.js~Edge",
    "static": false,
    "longname": "scripts/three/edge.js~Edge#visibilityfactor",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1070,
    "kind": "method",
    "name": "remove",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#remove",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1071,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#init",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1072,
    "kind": "method",
    "name": "redraw",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#redraw",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1073,
    "kind": "method",
    "name": "removeFromScene",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#removeFromScene",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1074,
    "kind": "method",
    "name": "addToScene",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#addToScene",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1075,
    "kind": "method",
    "name": "showAll",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#showAll",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1076,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1077,
    "kind": "method",
    "name": "updateVisibility",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#updateVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1078,
    "kind": "method",
    "name": "updateObjectVisibility",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#updateObjectVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1079,
    "kind": "method",
    "name": "updateTexture",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#updateTexture",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1081,
    "kind": "method",
    "name": "updatePlanes",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#updatePlanes",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1082,
    "kind": "method",
    "name": "makeWall",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#makeWall",
    "access": "public",
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "params": [
      {
        "name": "start",
        "types": [
          "*"
        ]
      },
      {
        "name": "end",
        "types": [
          "*"
        ]
      },
      {
        "name": "transform",
        "types": [
          "*"
        ]
      },
      {
        "name": "invTransform",
        "types": [
          "*"
        ]
      },
      {
        "name": "material",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1083,
    "kind": "method",
    "name": "buildSideFillter",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#buildSideFillter",
    "access": "public",
    "description": null,
    "lineNumber": 298,
    "undocument": true,
    "params": [
      {
        "name": "p1",
        "types": [
          "*"
        ]
      },
      {
        "name": "p2",
        "types": [
          "*"
        ]
      },
      {
        "name": "height",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1084,
    "kind": "method",
    "name": "buildFillerVaryingHeights",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#buildFillerVaryingHeights",
    "access": "public",
    "description": null,
    "lineNumber": 314,
    "undocument": true,
    "params": [
      {
        "name": "edge",
        "types": [
          "*"
        ]
      },
      {
        "name": "side",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1085,
    "kind": "method",
    "name": "buildFillerUniformHeight",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#buildFillerUniformHeight",
    "access": "public",
    "description": null,
    "lineNumber": 331,
    "undocument": true,
    "params": [
      {
        "name": "edge",
        "types": [
          "*"
        ]
      },
      {
        "name": "height",
        "types": [
          "*"
        ]
      },
      {
        "name": "side",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1086,
    "kind": "method",
    "name": "toVec2",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#toVec2",
    "access": "public",
    "description": null,
    "lineNumber": 344,
    "undocument": true,
    "params": [
      {
        "name": "pos",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1087,
    "kind": "method",
    "name": "toVec3",
    "memberof": "scripts/three/edge.js~Edge",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/edge.js~Edge#toVec3",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "params": [
      {
        "name": "pos",
        "types": [
          "*"
        ]
      },
      {
        "name": "height",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1088,
    "kind": "file",
    "name": "scripts/three/first-person-controls.js",
    "content": "import * as THREE from 'three';\n\n/**\n * FirstPersonControls class\n * \n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author paulirish / http://paulirish.com/\n */\nclass FirstPersonControls {\n\t/**\n\t * Constructor\n\t * \n\t * @param {object}\n\t *            object Object\n\t * @param {object}\n\t *            domElement Dom element\n\t */\n\tconstructor( object, domElement = document ) {\n\t\tthis.object = object;\n\t\tthis.target = new THREE.Vector3( 0, 0, 0 );\n\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.movementSpeed = 1.0;\n\t\tthis.lookSpeed = 0.005;\n\n\t\tthis.lookVertical = true;\n\t\tthis.autoForward = false;\n\n\t\tthis.activeLook = true;\n\n\t\tthis.heightSpeed = false;\n\t\tthis.heightCoef = 1.0;\n\t\tthis.heightMin = 0.0;\n\t\tthis.heightMax = 1.0;\n\n\t\tthis.constrainVertical = false;\n\t\tthis.verticalMin = 0;\n\t\tthis.verticalMax = Math.PI;\n\n\t\tthis.autoSpeedFactor = 0.0;\n\n\t\tthis.mouseX = 0;\n\t\tthis.mouseY = 0;\n\n\t\tthis.lat = 0;\n\t\tthis.lon = 0;\n\t\tthis.phi = 0;\n\t\tthis.theta = 0;\n\n\t\tthis.moveForward = false;\n\t\tthis.moveBackward = false;\n\t\tthis.moveLeft = false;\n\t\tthis.moveRight = false;\n\n\t\tthis.mouseDragOn = false;\n\n\t\tthis.viewHalfX = 0;\n\t\tthis.viewHalfY = 0;\n\n\t\tif ( this.domElement !== document ) {\n\t\t\tthis.domElement.setAttribute( 'tabindex', - 1 );\n\t\t}\n\n\t\tthis._contextMenu = this.contextMenu.bind(this);\n\t\tthis._onMouseMove = this.onMouseMove.bind(this);\n\t\tthis._onMouseDown = this.onMouseDown.bind(this);\n\t\tthis._onMouseUp = this.onMouseUp.bind(this);\n\t\tthis._onKeyDown = this.onKeyDown.bind(this);\n\t\tthis._onKeyUp = this.onKeyUp.bind(this);\n\n\t\tthis.handleResize();\n\t\tthis.bindEvents();\n\t}\n\n\t/**\n\t * HandleResize function\n\t */\n\thandleResize() {\n\t\tif ( this.domElement === document ) {\n\t\t\tthis.viewHalfX = window.innerWidth / 2;\n\t\t\tthis.viewHalfY = window.innerHeight / 2;\n\t\t} else {\n\t\t\tthis.viewHalfX = this.domElement.offsetWidth / 2;\n\t\t\tthis.viewHalfY = this.domElement.offsetHeight / 2;\n\t\t}\n\t}\n\n\t/**\n\t * BindEvents function\n\t */\n\tbindEvents() {\n\t\tthis.domElement.addEventListener( 'contextmenu', this._contextmenu, false );\n\t\tthis.domElement.addEventListener( 'mousemove', this._onMouseMove, false );\n\t\tthis.domElement.addEventListener( 'mousedown', this._onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mouseup', this._onMouseUp, false );\n\n\t\twindow.addEventListener( 'keydown', this._onKeyDown, false );\n\t\twindow.addEventListener( 'keyup', this._onKeyUp, false );\n\t}\n\n\t/**\n\t * OnMouseDown function\n\t * \n\t * @param {object}\n\t *            event Event\n\t */\n\tonMouseDown( event ) {\n\t\tif(!this.enabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif ( this.domElement !== document ) {\n\t\t\tthis.domElement.focus();\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( this.activeLook ) {\n\t\t\tswitch ( event.button ) {\n\t\t\tcase 0:\n\t\t\t\tthis.moveForward = true;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.moveBackward = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.mouseDragOn = true;\n\t}\n\n\t/**\n\t * OnMouseUp function\n\t * \n\t * @param {object}\n\t *            event Event\n\t */\n\tonMouseUp( event ) {\n\t\tif(!this.enabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( this.activeLook ) {\n\t\t\tswitch ( event.button ) {\n\t\t\tcase 0:\n\t\t\t\tthis.moveForward = false;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.moveBackward = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.mouseDragOn = false;\n\t}\n\n\t/**\n\t * OnMouseMove function\n\t * \n\t * @param {object}\n\t *            event Event\n\t */\n\tonMouseMove ( event ) {\n\t\tif(!this.enabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif ( this.domElement === document ) {\n\t\t\tthis.mouseX = event.pageX - this.viewHalfX;\n\t\t\tthis.mouseY = event.pageY - this.viewHalfY;\n\t\t} else {\n\t\t\tthis.mouseX = event.pageX - this.domElement.offsetLeft - this.viewHalfX;\n\t\t\tthis.mouseY = event.pageY - this.domElement.offsetTop - this.viewHalfY;\n\t\t}\n\t}\n\n\t/**\n\t * OnKeyDown function\n\t * \n\t * @param {object}\n\t *            event Event\n\t */\n\tonKeyDown( event ) {\n\t\tif(!this.enabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tswitch ( event.keyCode ) {\n\n\t\tcase 38: /* up */\n\t\tcase 87: /* W */\n\t\t\tthis.moveForward = true;\n\t\t\tbreak;\n\n\t\tcase 37: /* left */\n\t\tcase 65: /* A */\n\t\t\tthis.moveLeft = true;\n\t\t\tbreak;\n\n\t\tcase 40: /* down */\n\t\tcase 83: /* S */\n\t\t\tthis.moveBackward = true;\n\t\t\tbreak;\n\n\t\tcase 39: /* right */\n\t\tcase 68: /* D */\n\t\t\tthis.moveRight = true;\n\t\t\tbreak;\n\n\t\tcase 82: /* R */\n\t\t\tthis.moveUp = true;\n\t\t\tbreak;\n\t\tcase 70: /* F */\n\t\t\tthis.moveDown = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * OnKeyUp function\n\t * \n\t * @param {object}\n\t *            event Event\n\t */\n\tonKeyUp( event ) {\n\t\tif(!this.enabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tswitch ( event.keyCode ) {\n\n\t\tcase 38: /* up */\n\t\tcase 87: /* W */\n\t\t\tthis.moveForward = false;\n\t\t\tbreak;\n\n\t\tcase 37: /* left */\n\t\tcase 65: /* A */\n\t\t\tthis.moveLeft = false;\n\t\t\tbreak;\n\t\tcase 40: /* down */\n\t\tcase 83: /* S */\n\t\t\tthis.moveBackward = false;\n\t\t\tbreak;\n\n\t\tcase 39: /* right */\n\t\tcase 68: /* D */\n\t\t\tthis.moveRight = false;\n\t\t\tbreak;\n\n\t\tcase 82: /* R */\n\t\t\tthis.moveUp = false;\n\t\t\tbreak;\n\n\t\tcase 70: /* F */\n\t\t\tthis.moveDown = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Update function\n\t * \n\t * @param {object}\n\t *            delta Delta\n\t */\n\tupdate( delta ) {\n\t\tif ( this.enabled === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.heightSpeed ) {\n\t\t\tlet y = THREE.Math.clamp( this.object.position.y, this.heightMin, this.heightMax );\n\t\t\tlet heightDelta = y - this.heightMin;\n\n\t\t\tthis.autoSpeedFactor = delta * ( heightDelta * this.heightCoef );\n\n\t\t} else {\n\t\t\tthis.autoSpeedFactor = 0.0;\n\t\t}\n\n\t\tlet actualMoveSpeed = delta * this.movementSpeed;\n\n\t\tif ( this.moveForward || ( this.autoForward && ! this.moveBackward ) ) {\n\t\t\tthis.object.translateZ( - ( actualMoveSpeed + this.autoSpeedFactor ) );\n\t\t}\n\t\tif ( this.moveBackward ) {\n\t\t\tthis.object.translateZ( actualMoveSpeed );\n\t\t}\n\n\t\tif ( this.moveLeft ) {\n\t\t\tthis.object.translateX( - actualMoveSpeed );\n\t\t}\n\t\tif ( this.moveRight ) {\n\t\t\tthis.object.translateX( actualMoveSpeed );\n\t\t}\n\n\t\tif ( this.moveUp ) {\n\t\t\tthis.object.translateY( actualMoveSpeed );\n\t\t}\n\t\tif ( this.moveDown ) {\n\t\t\tthis.object.translateY( - actualMoveSpeed );\n\t\t}\n\n\t\tlet actualLookSpeed = delta * this.lookSpeed;\n\n\t\tif ( ! this.activeLook ) {\n\t\t\tactualLookSpeed = 0;\n\t\t}\n\n\t\tlet verticalLookRatio = 1;\n\n\t\tif ( this.constrainVertical ) {\n\t\t\tverticalLookRatio = Math.PI / ( this.verticalMax - this.verticalMin );\n\t\t}\n\n\t\tthis.lon += this.mouseX * actualLookSpeed;\n\t\tif ( this.lookVertical ) {\n\t\t\tthis.lat -= this.mouseY * actualLookSpeed * verticalLookRatio;\n\t\t}\n\n\t\tthis.lat = Math.max( - 85, Math.min( 85, this.lat ) );\n\t\tthis.phi = THREE.Math.degToRad( 90 - this.lat );\n\n\t\tthis.theta = THREE.Math.degToRad( this.lon );\n\n\t\tif ( this.constrainVertical ) {\n\t\t\tthis.phi = THREE.Math.mapLinear( this.phi, 0, Math.PI, this.verticalMin, this.verticalMax );\n\t\t}\n\n\t\tlet targetPosition = this.target;\n\t\tlet position = this.object.position;\n\n\t\ttargetPosition.x = position.x + 100 * Math.sin( this.phi ) * Math.cos( this.theta );\n\t\ttargetPosition.y = position.y + 100 * Math.cos( this.phi );\n\t\ttargetPosition.z = position.z + 100 * Math.sin( this.phi ) * Math.sin( this.theta );\n\n\t\tthis.object.lookAt( targetPosition );\n\t}\n\n\t/**\n\t * ContextMenu function\n\t * \n\t * @param {object}\n\t *            event Event\n\t */\n\tcontextMenu( event ) {\n\t\tif(!this.enabled)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Dispose function\n\t */\n\tdispose() {\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._contextmenu, false );\n\t\tthis.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n\t\tthis.domElement.removeEventListener( 'mousemove', this._onMouseMove, false );\n\t\tthis.domElement.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', this._onKeyDown, false );\n\t\twindow.removeEventListener( 'keyup', this._onKeyUp, false );\n\t}\n}\n\nexport {FirstPersonControls};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/first-person-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1089,
    "kind": "class",
    "name": "FirstPersonControls",
    "memberof": "scripts/three/first-person-controls.js",
    "static": true,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/first-person-controls.js",
    "importStyle": "{FirstPersonControls}",
    "description": "FirstPersonControls class",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com/"
      },
      {
        "tagName": "@author",
        "tagValue": "alteredq / http://alteredqualia.com/"
      },
      {
        "tagName": "@author",
        "tagValue": "paulirish / http://paulirish.com/"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 1090,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#constructor",
    "access": "public",
    "description": "Constructor",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "Object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "domElement",
        "description": "Dom element"
      }
    ]
  },
  {
    "__docId__": 1091,
    "kind": "member",
    "name": "object",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#object",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1092,
    "kind": "member",
    "name": "target",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#target",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1093,
    "kind": "member",
    "name": "domElement",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#domElement",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1094,
    "kind": "member",
    "name": "enabled",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#enabled",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1095,
    "kind": "member",
    "name": "movementSpeed",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#movementSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1096,
    "kind": "member",
    "name": "lookSpeed",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#lookSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1097,
    "kind": "member",
    "name": "lookVertical",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#lookVertical",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1098,
    "kind": "member",
    "name": "autoForward",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#autoForward",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1099,
    "kind": "member",
    "name": "activeLook",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#activeLook",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1100,
    "kind": "member",
    "name": "heightSpeed",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#heightSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1101,
    "kind": "member",
    "name": "heightCoef",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#heightCoef",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1102,
    "kind": "member",
    "name": "heightMin",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#heightMin",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1103,
    "kind": "member",
    "name": "heightMax",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#heightMax",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1104,
    "kind": "member",
    "name": "constrainVertical",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#constrainVertical",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1105,
    "kind": "member",
    "name": "verticalMin",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#verticalMin",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1106,
    "kind": "member",
    "name": "verticalMax",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#verticalMax",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1107,
    "kind": "member",
    "name": "autoSpeedFactor",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#autoSpeedFactor",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1108,
    "kind": "member",
    "name": "mouseX",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#mouseX",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1109,
    "kind": "member",
    "name": "mouseY",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#mouseY",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1110,
    "kind": "member",
    "name": "lat",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#lat",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1111,
    "kind": "member",
    "name": "lon",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#lon",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1112,
    "kind": "member",
    "name": "phi",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#phi",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1113,
    "kind": "member",
    "name": "theta",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#theta",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1114,
    "kind": "member",
    "name": "moveForward",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#moveForward",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1115,
    "kind": "member",
    "name": "moveBackward",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#moveBackward",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1116,
    "kind": "member",
    "name": "moveLeft",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#moveLeft",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1117,
    "kind": "member",
    "name": "moveRight",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#moveRight",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1118,
    "kind": "member",
    "name": "mouseDragOn",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#mouseDragOn",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1119,
    "kind": "member",
    "name": "viewHalfX",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#viewHalfX",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1120,
    "kind": "member",
    "name": "viewHalfY",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#viewHalfY",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1121,
    "kind": "member",
    "name": "_contextMenu",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#_contextMenu",
    "access": "private",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1122,
    "kind": "member",
    "name": "_onMouseMove",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#_onMouseMove",
    "access": "private",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1123,
    "kind": "member",
    "name": "_onMouseDown",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#_onMouseDown",
    "access": "private",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1124,
    "kind": "member",
    "name": "_onMouseUp",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#_onMouseUp",
    "access": "private",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1125,
    "kind": "member",
    "name": "_onKeyDown",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#_onKeyDown",
    "access": "private",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1126,
    "kind": "member",
    "name": "_onKeyUp",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#_onKeyUp",
    "access": "private",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1127,
    "kind": "method",
    "name": "handleResize",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#handleResize",
    "access": "public",
    "description": "HandleResize function",
    "lineNumber": 82,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1132,
    "kind": "method",
    "name": "bindEvents",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#bindEvents",
    "access": "public",
    "description": "BindEvents function",
    "lineNumber": 95,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1133,
    "kind": "method",
    "name": "onMouseDown",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#onMouseDown",
    "access": "public",
    "description": "OnMouseDown function",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1137,
    "kind": "method",
    "name": "onMouseUp",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#onMouseUp",
    "access": "public",
    "description": "OnMouseUp function",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1141,
    "kind": "method",
    "name": "onMouseMove",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#onMouseMove",
    "access": "public",
    "description": "OnMouseMove function",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1146,
    "kind": "method",
    "name": "onKeyDown",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#onKeyDown",
    "access": "public",
    "description": "OnKeyDown function",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1151,
    "kind": "member",
    "name": "moveUp",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#moveUp",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1152,
    "kind": "member",
    "name": "moveDown",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#moveDown",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1153,
    "kind": "method",
    "name": "onKeyUp",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#onKeyUp",
    "access": "public",
    "description": "OnKeyUp function",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1160,
    "kind": "method",
    "name": "update",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#update",
    "access": "public",
    "description": "Update function",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "Delta"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1169,
    "kind": "method",
    "name": "contextMenu",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#contextMenu",
    "access": "public",
    "description": "ContextMenu function",
    "lineNumber": 355,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event"
      }
    ],
    "return": null
  },
  {
    "__docId__": 1170,
    "kind": "method",
    "name": "dispose",
    "memberof": "scripts/three/first-person-controls.js~FirstPersonControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/first-person-controls.js~FirstPersonControls#dispose",
    "access": "public",
    "description": "Dispose function",
    "lineNumber": 366,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1171,
    "kind": "file",
    "name": "scripts/three/floor.js",
    "content": "import {EventDispatcher, TextureLoader, RepeatWrapping, MeshBasicMaterial, MeshPhongMaterial,  FrontSide, DoubleSide, Vector2, Vector3, Face3, Geometry, Shape, ShapeGeometry, Mesh} from 'three';\nimport {EVENT_CHANGED} from '../core/events.js';\nimport {Configuration, configWallHeight} from '../core/configuration.js';\n\nexport class Floor extends EventDispatcher\n{\n\tconstructor(scene, room)\n\t{\n\t\tsuper();\n\t\tthis.scene = scene;\n\t\tthis.room = room;\n\t\tthis.floorPlane = null;\n\t\tthis.roofPlane = null;\n\t\tthis.changedevent = () => {this.redraw();};\n\t\tthis.init();\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tthis.floorPlane.visible = !flag;\n\t\tthis.roofPlane.visible = !flag;\n\t}\n\n\tinit()\n\t{\n//\t\tthis.room.fireOnFloorChange(redraw);\n\t\tthis.room.addEventListener(EVENT_CHANGED, this.changedevent);\n\n\t\tthis.floorPlane = this.buildFloor();\n\t\t// roofs look weird, so commented out\n\t\t// this.roofPlane = this.buildRoofUniformHeight();\n\t\tthis.roofPlane = this.buildRoofVaryingHeight();\n\t}\n\n\tredraw()\n\t{\n\t\tthis.removeFromScene();\n\t\tthis.floorPlane = this.buildFloor();\n\t\tthis.roofPlane = this.buildRoofVaryingHeight();\n\t\tthis.addToScene();\n\t}\n\n\tbuildFloor()\n\t{\n\t\tvar textureSettings = this.room.getTexture();\n\t\t// setup texture\n//\t\tvar floorTexture = ImageUtils.loadTexture(textureSettings.url);\n\t\tvar floorTexture = new TextureLoader().load(textureSettings.url);\n\t\tfloorTexture.wrapS = RepeatWrapping;\n\t\tfloorTexture.wrapT = RepeatWrapping;\n\t\tfloorTexture.repeat.set(1, 1);\n\t\tvar floorMaterialTop = new MeshPhongMaterial({\n\t\t\tmap: floorTexture,\n\t\t\tside: DoubleSide,\n\t\t\t// ambient: 0xffffff, TODO_Ekki\n\t\t\tcolor: 0xcccccc,\n\t\t\tspecular: 0x0a0a0a\n\t\t});\n\n\t\tvar textureScale = textureSettings.scale;\n\t\t// http://stackoverflow.com/questions/19182298/how-to-texture-a-three-js-mesh-created-with-shapegeometry\n\t\t// scale down coords to fit 0 -> 1, then rescale\n\n\t\tvar points = [];\n\t\tthis.room.interiorCorners.forEach((corner) => {\n\t\t\tpoints.push(new Vector2(corner.x / textureScale,corner.y / textureScale));\n\t\t});\n\t\tvar shape = new Shape(points);\n\t\tvar geometry = new ShapeGeometry(shape);\n\t\tvar floor = new Mesh(geometry, floorMaterialTop);\n\n\t\tfloor.rotation.set(Math.PI / 2, 0, 0);\n\t\tfloor.scale.set(textureScale, textureScale, textureScale);\n\t\tfloor.receiveShadow = true;\n\t\tfloor.castShadow = false;\n\t\treturn floor;\n\t}\n\n\tbuildRoofVaryingHeight()\n\t{\n\t\t// setup texture\n\t\tvar roofMaterial = new MeshBasicMaterial({side: FrontSide,color: 0xe5e5e5});\n\t\tvar geometry = new Geometry();\n\n\t\tthis.room.corners.forEach((corner) => {\n\t\t\tvar vertex = new Vector3(corner.x,corner.elevation, corner.y);\n\t\t\tgeometry.vertices.push(vertex);\n\t\t});\n\t\tfor (var i=2;i<geometry.vertices.length;i++)\n\t\t{\n\t\t\tvar face = new Face3(0, i-1, i);\n\t\t\tgeometry.faces.push(face);\n\t\t}\n\t\tvar roof = new Mesh(geometry, roofMaterial);\n\t\t// roof.rotation.set(Math.PI / 2, 0, 0);\n\t\t// roof.position.y = Configuration.getNumericValue(configWallHeight);\n\t\treturn roof;\n\t}\n\n\n\tbuildRoofUniformHeight()\n\t{\n\t\t// setup texture\n\t\tvar roofMaterial = new MeshBasicMaterial({side: FrontSide,color: 0xe5e5e5});\n\t\tvar points = [];\n\t\tthis.room.interiorCorners.forEach((corner) => {\n\t\t\tpoints.push(new Vector2(corner.x,corner.y));\n\t\t});\n\t\tvar shape = new Shape(points);\n\t\tvar geometry = new ShapeGeometry(shape);\n\t\tvar roof = new Mesh(geometry, roofMaterial);\n\t\troof.rotation.set(Math.PI / 2, 0, 0);\n\t\troof.position.y = Configuration.getNumericValue(configWallHeight);\n\t\treturn roof;\n\t}\n\n\taddToScene()\n\t{\n\t\tthis.scene.add(this.floorPlane);\n\t\tthis.scene.add(this.roofPlane);\n\t\t//scene.add(roofPlane);\n\t\t// hack so we can do intersect testing\n\t\tthis.scene.add(this.room.floorPlane);\n\t\tthis.scene.add(this.room.roofPlane);\n\t}\n\n\tremoveFromScene()\n\t{\n\t\tthis.scene.remove(this.floorPlane);\n\t\tthis.scene.remove(this.roofPlane);\n\t\tthis.scene.remove(this.room.floorPlane);\n\t\tthis.scene.remove(this.room.roofPlane);\n\t}\n\n\tshowRoof(flag)\n\t{\n\t\tconsole.log(flag);\n\t\t// this.roofPlane.visible = flag;\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/floor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1172,
    "kind": "class",
    "name": "Floor",
    "memberof": "scripts/three/floor.js",
    "static": true,
    "longname": "scripts/three/floor.js~Floor",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/floor.js",
    "importStyle": "{Floor}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1173,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 1174,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/floor.js~Floor",
    "static": false,
    "longname": "scripts/three/floor.js~Floor#scene",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1175,
    "kind": "member",
    "name": "room",
    "memberof": "scripts/three/floor.js~Floor",
    "static": false,
    "longname": "scripts/three/floor.js~Floor#room",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1176,
    "kind": "member",
    "name": "floorPlane",
    "memberof": "scripts/three/floor.js~Floor",
    "static": false,
    "longname": "scripts/three/floor.js~Floor#floorPlane",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1177,
    "kind": "member",
    "name": "roofPlane",
    "memberof": "scripts/three/floor.js~Floor",
    "static": false,
    "longname": "scripts/three/floor.js~Floor#roofPlane",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1178,
    "kind": "member",
    "name": "changedevent",
    "memberof": "scripts/three/floor.js~Floor",
    "static": false,
    "longname": "scripts/three/floor.js~Floor#changedevent",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1179,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1180,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#init",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1183,
    "kind": "method",
    "name": "redraw",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#redraw",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1186,
    "kind": "method",
    "name": "buildFloor",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#buildFloor",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1187,
    "kind": "method",
    "name": "buildRoofVaryingHeight",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#buildRoofVaryingHeight",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1188,
    "kind": "method",
    "name": "buildRoofUniformHeight",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#buildRoofUniformHeight",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1189,
    "kind": "method",
    "name": "addToScene",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#addToScene",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1190,
    "kind": "method",
    "name": "removeFromScene",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#removeFromScene",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1191,
    "kind": "method",
    "name": "showRoof",
    "memberof": "scripts/three/floor.js~Floor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floor.js~Floor#showRoof",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1192,
    "kind": "file",
    "name": "scripts/three/floorPlan.js",
    "content": "import {EventDispatcher} from 'three';\nimport {EVENT_UPDATED} from '../core/events.js';\nimport {Floor} from './floor.js';\nimport {Edge} from './edge.js';\n\n\nexport class Floorplan3D extends EventDispatcher\n{\n\tconstructor(scene, floorPlan, controls)\n\t{\n\t\tsuper();\n\t\tthis.scene = scene;\n\t\tthis.floorplan = floorPlan;\n\t\tthis.controls = controls;\n\t\tthis.floors = [];\n\t\tthis.edges = [];\n\t\tvar scope = this;\n\t\t// floorPlan.fireOnUpdatedRooms(redraw);\n\t\tthis.updatedroomsevent = () => {scope.redraw();};\n\t\tthis.floorplan.addEventListener(EVENT_UPDATED, this.updatedroomsevent);\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tthis.floors.forEach((floor)=>{\n\t\t\tfloor.switchWireframe(flag);\n\t\t});\n\t\tthis.edges.forEach((edge)=>{\n\t\t\tedge.switchWireframe(flag);\n\t\t});\n\t}\n\n\tredraw()\n\t{\n\t\tvar scope = this;\n\t\t// clear scene\n\t\tthis.floors.forEach((floor) => {\n\t\t\tfloor.removeFromScene();\n\t\t});\n\n\t\tthis.edges.forEach((edge) => {\n\t\t\tedge.remove();\n\t\t});\n\t\tthis.floors = [];\n\t\tthis.edges = [];\n\n\t\t// draw floors\n\t\tthis.floorplan.getRooms().forEach((room) => {\n\t\t\tvar threeFloor = new Floor(this.scene, room);\n\t\t\tthis.floors.push(threeFloor);\n\t\t\tthreeFloor.addToScene();\n\t\t});\n\n\t\tvar eindex = 0;\n\t\t// draw edges\n\t\tthis.floorplan.wallEdges().forEach((edge) => {\n\t\t\tvar threeEdge = new Edge(scope.scene, edge, scope.controls);\n\t\t\tthreeEdge.name = 'edge_'+eindex;\n\t\t\tthis.edges.push(threeEdge);\n\t\t\teindex+=1;\n\t\t});\n\t}\n\n\tshowRoof(flag)\n\t{\n\t\t// draw floors\n\t\tthis.floors.forEach((threeFloor) => {\n\t\t\tthreeFloor.showRoof(flag);\n\t\t});\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/floorPlan.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1193,
    "kind": "class",
    "name": "Floorplan3D",
    "memberof": "scripts/three/floorPlan.js",
    "static": true,
    "longname": "scripts/three/floorPlan.js~Floorplan3D",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/floorPlan.js",
    "importStyle": "{Floorplan3D}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1194,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 1195,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#scene",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1196,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1197,
    "kind": "member",
    "name": "controls",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#controls",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1198,
    "kind": "member",
    "name": "floors",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#floors",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1199,
    "kind": "member",
    "name": "edges",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#edges",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 1200,
    "kind": "member",
    "name": "updatedroomsevent",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#updatedroomsevent",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1201,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1202,
    "kind": "method",
    "name": "redraw",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#redraw",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1205,
    "kind": "method",
    "name": "showRoof",
    "memberof": "scripts/three/floorPlan.js~Floorplan3D",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/floorPlan.js~Floorplan3D#showRoof",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1206,
    "kind": "file",
    "name": "scripts/three/hud.js",
    "content": "import {EventDispatcher, Scene as ThreeScene, Geometry, Vector3, LineBasicMaterial, CylinderGeometry, MeshBasicMaterial, Mesh, SphereGeometry, Object3D, LineSegments} from 'three';\n\nimport {EVENT_ITEM_SELECTED, EVENT_ITEM_UNSELECTED} from '../core/events.js';\n\n//As far as I understand the HUD is here to show a rotation control on every item\n//If this idea is correct then it seriously sucks. A whole rendering to show just cones and lines as arrows?\nexport class HUD extends EventDispatcher\n{\n\tconstructor(three, scene)\n\t{\n\t\tsuper();\n\t\tthis.three = three;\n\t\tif(!scene)\n\t\t{\n\t\t\tthis.scene = new ThreeScene();\n\t\t}\n\t\t\t\n\t\telse\n\t\t{\n\t\t\tthis.scene = scene;\n\t\t}\n\t\t\n\t\tthis.selectedItem = null;\n\t\t\n\t\tthis.rotating = false;\n\t\tthis.mouseover = false;\n\t\t\n\t\tthis.tolerance = 10;\n\t\tthis.height = 5;\n\t\tthis.distance = 20;\n\t\t\n\t\tthis.color = '#ffffff';\n\t\tthis.hoverColor = '#f1c40f';\n\t\t\n\t\tthis.activeObject = null;\n\t\t\n\t\tvar scope = this;\n\t\tthis.itemselectedevent = (o) => {scope.itemSelected(o.item);};\n\t\tthis.itemunselectedevent = () => {scope.itemUnselected();};\n\t\t\n\t\tthis.init();\n\t}\n\t\n\tinit() \n\t{\n//\t\tthis.three.itemSelectedCallbacks.add(itemSelected);\n//\t\tthis.three.itemUnselectedCallbacks.add(itemUnselected);\n\t\tthis.three.addEventListener(EVENT_ITEM_SELECTED, this.itemselectedevent);\n\t\tthis.three.addEventListener(EVENT_ITEM_UNSELECTED, this.itemunselectedevent);\n\t}\n\t\n\tgetScene() \n\t{\n\t\treturn this.scene;\n\t}\n\n\tgetObject() \n\t{\n\t\treturn this.activeObject;\n\t}\n\t\n\t\n\tresetSelectedItem() \n\t{\n\t\tthis.selectedItem = null;\n\t\tif (this.activeObject) \n\t\t{\n\t\t\tthis.scene.remove(this.activeObject);\n\t\t\tthis.activeObject = null;\n\t\t}\n\t}\n\n\titemSelected(item) \n\t{\n\t\tif (this.selectedItem != item) \n\t\t{\n\t\t\tthis.resetSelectedItem();\n\t\t\tif (item.allowRotate && !item.fixed) \n\t\t\t{\n\t\t\t\tthis.selectedItem = item;\n\t\t\t\tthis.activeObject = this.makeObject(this.selectedItem);\n\t\t\t\tthis.scene.add(this.activeObject);\n\t\t\t}\n\t\t}\n\t}\n\n\titemUnselected() \n\t{\n\t\tthis.resetSelectedItem();\n\t}\n\n\tsetRotating(isRotating) \n\t{\n\t\tthis.rotating = isRotating;\n\t\tthis.setColor();\n\t}\n\n\tsetMouseover(isMousedOver) \n\t{\n\t\tthis.mouseover = isMousedOver;\n\t\tthis.setColor();\n\t}\n\n\tsetColor() \n\t{\n\t\tvar scope = this;\n\t\tif (scope.activeObject) \n\t\t{\n\t\t\tscope.activeObject.children.forEach((obj) => {obj.material.color.set(scope.getColor());});\n\t\t}\n//\t\tthis.three.needsUpdate();\n\t\tscope.three.ensureNeedsUpdate();\n\t}\n\n\tgetColor()\n\t{\n\t\treturn (this.mouseover || this.rotating) ? this.hoverColor : this.color;\n\t}\n\n\tupdate() \n\t{\n\t\tif (this.activeObject) \n\t\t{\n\t\t\tthis.activeObject.rotation.y = this.selectedItem.rotation.y;\n\t\t\tthis.activeObject.position.x = this.selectedItem.position.x;\n\t\t\tthis.activeObject.position.z = this.selectedItem.position.z;\n\t\t}\n\t}\n\n\tmakeLineGeometry(item) \n\t{\n\t\tvar geometry = new Geometry();\n\t\tgeometry.vertices.push(new Vector3(0, 0, 0),this.rotateVector(item));\n\t\treturn geometry;\n\t}\n\n\trotateVector(item) \n\t{\n\t\tvar vec = new Vector3(0, 0,Math.max(item.halfSize.x, item.halfSize.z) + 1.4 + this.distance);\n\t\treturn vec;\n\t}\n\n\tmakeLineMaterial() \n\t{\n\t\tvar mat = new LineBasicMaterial({color: this.getColor(),linewidth: 3});\n\t\treturn mat;\n\t}\n\n\tmakeCone(item) \n\t{\n\t\tvar coneGeo = new CylinderGeometry(5, 0, 10);\n\t\tvar coneMat = new MeshBasicMaterial({color: this.getColor()});\n\t\tvar cone = new Mesh(coneGeo, coneMat);\n\t\tcone.position.copy(this.rotateVector(item));\n\t\tcone.rotation.x = -Math.PI / 2.0;\n\t\treturn cone;\n\t}\n\n\tmakeSphere() \n\t{\n\t\tvar geometry = new SphereGeometry(4, 16, 16);\n\t\tvar material = new MeshBasicMaterial({color: this.getColor()});\n\t\tvar sphere = new Mesh(geometry, material);\n\t\treturn sphere;\n\t}\n\n\tmakeObject(item) \n\t{\n\t\tvar object = new Object3D();\n\t\tvar line = new LineSegments(this.makeLineGeometry(item),this.makeLineMaterial(this.rotating));\n\t\tvar cone = this.makeCone(item);\n\t\tvar sphere = this.makeSphere(item);\n\t\tobject.add(line);\n\t\tobject.add(cone);\n\t\tobject.add(sphere);\n\t\tobject.rotation.y = item.rotation.y;\n\t\tobject.position.x = item.position.x;\n\t\tobject.position.z = item.position.z;\n\t\tobject.position.y = this.height;\n\t\treturn object;\n\t}\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/hud.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1207,
    "kind": "class",
    "name": "HUD",
    "memberof": "scripts/three/hud.js",
    "static": true,
    "longname": "scripts/three/hud.js~HUD",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/hud.js",
    "importStyle": "{HUD}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1208,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 1209,
    "kind": "member",
    "name": "three",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#three",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1210,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#scene",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1212,
    "kind": "member",
    "name": "selectedItem",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#selectedItem",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1213,
    "kind": "member",
    "name": "rotating",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#rotating",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1214,
    "kind": "member",
    "name": "mouseover",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#mouseover",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1215,
    "kind": "member",
    "name": "tolerance",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#tolerance",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1216,
    "kind": "member",
    "name": "height",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#height",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1217,
    "kind": "member",
    "name": "distance",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#distance",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1218,
    "kind": "member",
    "name": "color",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#color",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1219,
    "kind": "member",
    "name": "hoverColor",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#hoverColor",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1220,
    "kind": "member",
    "name": "activeObject",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#activeObject",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1221,
    "kind": "member",
    "name": "itemselectedevent",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#itemselectedevent",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1222,
    "kind": "member",
    "name": "itemunselectedevent",
    "memberof": "scripts/three/hud.js~HUD",
    "static": false,
    "longname": "scripts/three/hud.js~HUD#itemunselectedevent",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1223,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#init",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1224,
    "kind": "method",
    "name": "getScene",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#getScene",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1225,
    "kind": "method",
    "name": "getObject",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1226,
    "kind": "method",
    "name": "resetSelectedItem",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#resetSelectedItem",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1229,
    "kind": "method",
    "name": "itemSelected",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#itemSelected",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1232,
    "kind": "method",
    "name": "itemUnselected",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#itemUnselected",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1233,
    "kind": "method",
    "name": "setRotating",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#setRotating",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "isRotating",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1235,
    "kind": "method",
    "name": "setMouseover",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#setMouseover",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [
      {
        "name": "isMousedOver",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1237,
    "kind": "method",
    "name": "setColor",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#setColor",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1238,
    "kind": "method",
    "name": "getColor",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#getColor",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1239,
    "kind": "method",
    "name": "update",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#update",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1240,
    "kind": "method",
    "name": "makeLineGeometry",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#makeLineGeometry",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1241,
    "kind": "method",
    "name": "rotateVector",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#rotateVector",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1242,
    "kind": "method",
    "name": "makeLineMaterial",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#makeLineMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1243,
    "kind": "method",
    "name": "makeCone",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#makeCone",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1244,
    "kind": "method",
    "name": "makeSphere",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#makeSphere",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1245,
    "kind": "method",
    "name": "makeObject",
    "memberof": "scripts/three/hud.js~HUD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/hud.js~HUD#makeObject",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1246,
    "kind": "file",
    "name": "scripts/three/lights.js",
    "content": "import {EventDispatcher, HemisphereLight, DirectionalLight, Vector3} from 'three';\nimport {EVENT_UPDATED} from '../core/events.js';\n\nexport class Lights extends EventDispatcher\n{\n\tconstructor(scene, floorplan)\n\t{\n\t\tsuper();\t\t\n\t\tthis.scene = scene;\n\t\tthis.floorplan = floorplan;\t\t\n\t\tthis.tol = 1;\n\t\tthis.height = 300; // TODO: share with Blueprint.Wall\n\t\tthis.dirLight = null;\n\t\tthis.updatedroomsevent = () => {this.updateShadowCamera();};\n\t\tthis.init();\n\t}\n\n\tgetDirLight() \n\t{\n\t\treturn this.dirLight;\n\t}\n\n\tinit() \n\t{\n\t\tvar light = new HemisphereLight(0xffffff, 0x888888, 1.1);\n\t\tlight.position.set(0, this.height, 0);\n\t\tthis.scene.add(light);\n\n\t\tthis.dirLight = new DirectionalLight(0xffffff, 0.5);\n\t\tthis.dirLight.color.setHSL(1, 1, 0.1);\n\n\t\tthis.dirLight.castShadow = true;\n\n\t\tthis.dirLight.shadow.mapSize.width = 1024;\n\t\tthis.dirLight.shadow.mapSize.height = 1024;\n\n\t\tthis.dirLight.shadow.camera.far = this.height + this.tol;\n\t\tthis.dirLight.shadow.bias = -0.0001;\n\t\tthis.dirLight.shadowDarkness = 0.2;\n\t\tthis.dirLight.visible = true;\n\t\tthis.dirLight.shadowCameraVisible = false;\n\n\t\tthis.scene.add(this.dirLight);\n\t\tthis.scene.add(this.dirLight.target);\n\n//\t\tthis.floorplan.fireOnUpdatedRooms(updateShadowCamera);\n\t\tthis.floorplan.addEventListener(EVENT_UPDATED, this.updatedroomsevent);\n\n\t}\n\n\tupdateShadowCamera() \n\t{\n\t\tvar size = this.floorplan.getSize();\n\t\tvar d = (Math.max(size.z, size.x) + this.tol) / 2.0;\n\t\tvar center = this.floorplan.getCenter();\n\t\tvar pos = new Vector3(center.x, this.height, center.z);\n\t\tthis.dirLight.position.copy(pos);\n\t\tthis.dirLight.target.position.copy(center);\n\t\t//dirLight.updateMatrix();\n\t\t//dirLight.updateWorldMatrix()\n\t\tthis.dirLight.shadow.camera.left = -d;\n\t\tthis.dirLight.shadow.camera.right = d;\n\t\tthis.dirLight.shadow.camera.top = d;\n\t\tthis.dirLight.shadow.camera.bottom = -d;\n\t\t// this is necessary for updates\n\t\tif (this.dirLight.shadowCamera) \n\t\t{\n\t\t\tthis.dirLight.shadow.camera.left = this.dirLight.shadowCameraLeft;\n\t\t\tthis.dirLight.shadow.camera.right = this.dirLight.shadowCameraRight;\n\t\t\tthis.dirLight.shadow.camera.top = this.dirLight.shadowCameraTop;\n\t\t\tthis.dirLight.shadow.camera.bottom = this.dirLight.shadowCameraBottom;\n\t\t\tthis.dirLight.shadowCamera.updateProjectionMatrix();\n\t\t}\n\t}\n}",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/lights.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1247,
    "kind": "class",
    "name": "Lights",
    "memberof": "scripts/three/lights.js",
    "static": true,
    "longname": "scripts/three/lights.js~Lights",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/lights.js",
    "importStyle": "{Lights}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1248,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/lights.js~Lights",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/lights.js~Lights#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 1249,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/lights.js~Lights",
    "static": false,
    "longname": "scripts/three/lights.js~Lights#scene",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1250,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/three/lights.js~Lights",
    "static": false,
    "longname": "scripts/three/lights.js~Lights#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1251,
    "kind": "member",
    "name": "tol",
    "memberof": "scripts/three/lights.js~Lights",
    "static": false,
    "longname": "scripts/three/lights.js~Lights#tol",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1252,
    "kind": "member",
    "name": "height",
    "memberof": "scripts/three/lights.js~Lights",
    "static": false,
    "longname": "scripts/three/lights.js~Lights#height",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1253,
    "kind": "member",
    "name": "dirLight",
    "memberof": "scripts/three/lights.js~Lights",
    "static": false,
    "longname": "scripts/three/lights.js~Lights#dirLight",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1254,
    "kind": "member",
    "name": "updatedroomsevent",
    "memberof": "scripts/three/lights.js~Lights",
    "static": false,
    "longname": "scripts/three/lights.js~Lights#updatedroomsevent",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1255,
    "kind": "method",
    "name": "getDirLight",
    "memberof": "scripts/three/lights.js~Lights",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/lights.js~Lights#getDirLight",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1256,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/lights.js~Lights",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/lights.js~Lights#init",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1258,
    "kind": "method",
    "name": "updateShadowCamera",
    "memberof": "scripts/three/lights.js~Lights",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/lights.js~Lights#updateShadowCamera",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1259,
    "kind": "file",
    "name": "scripts/three/main.js",
    "content": "import $ from 'jquery';\nimport {EventDispatcher, Vector2, Vector3, WebGLRenderer,ImageUtils, PerspectiveCamera, OrthographicCamera} from 'three';\nimport {Plane} from 'three';\nimport {PCFSoftShadowMap} from 'three';\nimport {Clock} from 'three';\n// import {FirstPersonControls} from './first-person-controls.js';\nimport {PointerLockControls} from './pointerlockcontrols.js';\n\nimport {EVENT_UPDATED, EVENT_WALL_CLICKED, EVENT_NOTHING_CLICKED, EVENT_FLOOR_CLICKED, EVENT_ITEM_SELECTED, EVENT_ITEM_UNSELECTED, EVENT_GLTF_READY} from '../core/events.js';\nimport {EVENT_CAMERA_ACTIVE_STATUS, EVENT_FPS_EXIT, EVENT_CAMERA_VIEW_CHANGE} from '../core/events.js';\nimport {VIEW_TOP, VIEW_FRONT, VIEW_RIGHT, VIEW_LEFT, VIEW_ISOMETRY} from '../core/constants.js';\n\nimport {OrbitControls} from './orbitcontrols.js';\n\n// import {Controls} from './controls.js';\nimport {Controller} from './controller.js';\nimport {HUD} from './hud.js';\nimport {Floorplan3D} from './floorPlan.js';\nimport {Lights} from './lights.js';\nimport {Skybox} from './skybox.js';\n\nexport class Main extends EventDispatcher\n{\n\tconstructor(model, element, canvasElement, opts)\n\t{\n\t\tsuper();\n\t\tvar options = {resize: true,pushHref: false,spin: true,spinSpeed: .00002,clickPan: true,canMoveFixedItems: false};\n\t\tfor (var opt in options)\n\t\t{\n\t\t\tif (options.hasOwnProperty(opt) && opts.hasOwnProperty(opt))\n\t\t\t{\n\t\t\t\toptions[opt] = opts[opt];\n\t\t\t}\n\t\t}\n\n\t\tthis.pauseRender = true;\n\t\tthis.model = model;\n\t\tthis.scene = model.scene;\n\t\tthis.element = $(element);\n\t\tthis.canvasElement = canvasElement;\n\t\tthis.options = options;\n\n\t\tthis.domElement = null;\n\t\tthis.orthocamera = null;\n\t\tthis.perspectivecamera = null;\n\t\tthis.camera = null;\n\t\tthis.savedcameraposition = null;\n\t\tthis.fpscamera = null;\n\n\t\tthis.cameraNear = 10;\n\t\tthis.cameraFar = 10000;\n\n\t\tthis.controls = null;\n\t\tthis.fpscontrols = null;\n\t\tthis.fpsclock = new Clock(true);\n\t\tthis.firstpersonmode = false;\n\n\t\tthis.renderer = null;\n\t\tthis.controller = null;\n\n\t\tthis.needsUpdate = false;\n\t\tthis.lastRender = Date.now();\n\n\t\tthis.mouseOver = false;\n\t\tthis.hasClicked = false;\n\n\t\tthis.hud = null;\n\n\t\tthis.heightMargin = null;\n\t\tthis.widthMargin = null;\n\t\tthis.elementHeight = null;\n\t\tthis.elementWidth = null;\n\n\n\t\tthis.itemSelectedCallbacks = $.Callbacks(); // item\n\t\tthis.itemUnselectedCallbacks = $.Callbacks();\n\n\t\tthis.wallClicked = $.Callbacks(); // wall\n\t\tthis.floorClicked = $.Callbacks(); // floor\n\t\tthis.nothingClicked = $.Callbacks();\n\n\t\tthis.floorplan = null;\n\n\t\tvar scope = this;\n\t\tthis.updatedevent = ()=>{scope.centerCamera();};\n\t\tthis.gltfreadyevent = (o)=>{scope.gltfReady(o);};\n\n\t\tthis.clippingPlaneActive = new Plane(new Vector3(0, 0, 1), 0.0);\n\t\tthis.clippingPlaneActive2 = new Plane(new Vector3(0, 0, -1), 0.0);\n\t\tthis.globalClippingPlane = [this.clippingPlaneActive, this.clippingPlaneActive2];\n\t\tthis.clippingEmpty = Object.freeze([]);\n\t\tthis.clippingEnabled = false;\n\n//\t\tconsole.log('THIS ON MOBILE DEVICE ::: ', isMobile, isTablet);\n\n\t\tthis.init();\n\t}\n\n\tgetARenderer()\n\t{\n// scope.renderer = new WebGLRenderer({antialias: true, preserveDrawingBuffer:\n// true, alpha:true}); // preserveDrawingBuffer:true - required to support\n// .toDataURL()\n\t\tvar renderer = new WebGLRenderer({antialias: true, alpha:true});\n\n// scope.renderer.autoClear = false;\n\t\trenderer.shadowMap.enabled = true;\n\t\trenderer.shadowMapSoft = true;\n\t\trenderer.shadowMap.type = PCFSoftShadowMap;\n\t\trenderer.setClearColor( 0xFFFFFF, 1 );\n\t\trenderer.clippingPlanes = this.clippingEmpty;\n\t\trenderer.localClippingEnabled = false;\n//\t\trenderer.setPixelRatio(window.devicePixelRatio);\n// renderer.sortObjects = false;\n\n\t\treturn renderer;\n\t}\n\n\tinit()\n\t{\n\t\tvar scope = this;\n\t\tImageUtils.crossOrigin = '';\n\n\t\tvar orthoScale = 100;\n\t\tvar orthoWidth = window.innerWidth;\n\t\tvar orthoHeight = window.innerHeight;\n\n\t\tscope.domElement = scope.element.get(0);\n\n\t\tscope.fpscamera = new PerspectiveCamera(60, 1, 1, 10000 );\n\t\tscope.perspectivecamera = new PerspectiveCamera(45, 10, scope.cameraNear, scope.cameraFar);\n\t\tscope.orthocamera = new OrthographicCamera(orthoWidth / -orthoScale, orthoWidth /orthoScale, orthoHeight /orthoScale, orthoHeight / -orthoScale, scope.cameraNear, scope.cameraFar);\n\n\t\tscope.camera = scope.perspectivecamera;\n// scope.camera = scope.orthocamera;\n\n\t\tscope.renderer = scope.getARenderer();\n\t\tscope.domElement.appendChild(scope.renderer.domElement);\n\n\t\tscope.skybox = new Skybox(scope.scene, scope.renderer);\n\n\t\tscope.controls = new OrbitControls(scope.camera, scope.domElement);\n\t\tscope.controls.autoRotate = this.options['spin'];\n\t\tscope.controls.enableDamping = true;\n\t\tscope.controls.dampingFactor = 0.5;\n\t\tscope.controls.maxPolarAngle = Math.PI * 0.5;\n\t\tscope.controls.maxDistance = 3000;\n\t\tscope.controls.minZoom = 0.9;\n\t\tscope.controls.screenSpacePanning = true;\n\n\t\tscope.fpscontrols = new PointerLockControls(scope.fpscamera);\n\t\tscope.fpscontrols.characterHeight = 160;\n\n\t\tthis.scene.add(scope.fpscontrols.getObject());\n\t\tthis.fpscontrols.getObject().position.set(0, 200, 0);\n\n\t\tthis.fpscontrols.addEventListener('unlock', function(){\n\t\t\tscope.switchFPSMode(false);\n\t\t\tscope.dispatchEvent({type:EVENT_FPS_EXIT});\n\t\t});\n\n\n\t\tscope.hud = new HUD(scope, scope.scene);\n\t\tscope.controller = new Controller(scope, scope.model, scope.camera, scope.element, scope.controls, scope.hud);\n\n\t\t// handle window resizing\n\t\tscope.updateWindowSize();\n\n\t\tif (scope.options.resize)\n\t\t{\n\t\t\t$(window).resize(() => {scope.updateWindowSize();});\n\t\t}\n\t\t// setup camera nicely\n\t\tscope.centerCamera();\n\n\t\tscope.model.floorplan.addEventListener(EVENT_UPDATED, this.updatedevent);\n\t\tscope.model.addEventListener(EVENT_GLTF_READY, this.gltfreadyevent);\n\n\t\tscope.lights = new Lights(scope.scene, scope.model.floorplan);\n\t\tscope.floorplan = new Floorplan3D(scope.scene, scope.model.floorplan, scope.controls);\n\n\t\tfunction animate()\n\t\t{\n//\t\t\trequestAnimationFrame(animate);\n\t\t\tscope.renderer.setAnimationLoop(function(){scope.render();});\n\t\t\tscope.render();\n\t\t}\n\t\tscope.switchFPSMode(false);\n\t\tanimate();\n\n\t\tscope.element.mouseenter(function () {scope.mouseOver = true;}).mouseleave(function () {scope.mouseOver = false;}).click(function () {scope.hasClicked = true;});\n\t}\n\texportForBlender()\n\t{\n\t\tthis.skybox.setEnabled(false);\n\t\tthis.controller.showGroundPlane(false);\n\t\tthis.model.exportForBlender();\n\t}\n\n\tgltfReady(o)\n\t{\n\t\tthis.dispatchEvent({type:EVENT_GLTF_READY, item: this, gltf: o.gltf});\n\t\tthis.skybox.setEnabled(true);\n\t\tthis.controller.showGroundPlane(true);\n\t}\n\n\titemIsSelected(item)\n\t{\n\t\tthis.dispatchEvent({type:EVENT_ITEM_SELECTED, item:item});\n\t}\n\n\titemIsUnselected()\n\t{\n\t\tthis.dispatchEvent({type:EVENT_ITEM_UNSELECTED});\n\t}\n\n\twallIsClicked(wall)\n\t{\n\t\tthis.dispatchEvent({type:EVENT_WALL_CLICKED, item:wall, wall:wall});\n\t}\n\n\tfloorIsClicked(item)\n\t{\n\t\tthis.dispatchEvent({type:EVENT_FLOOR_CLICKED, item:item});\n\t}\n\n\tnothingIsClicked()\n\t{\n\t\tthis.dispatchEvent({type:EVENT_NOTHING_CLICKED});\n\t}\n\n\tspin()\n\t{\n\t\tvar scope = this;\n\t\tscope.controls.autoRotate = scope.options.spin && !scope.mouseOver && !scope.hasClicked;\n\t}\n\n\tdataUrl()\n\t{\n\t\tvar dataUrl = this.renderer.domElement.toDataURL('image/png');\n\t\treturn dataUrl;\n\t}\n\n\tstopSpin()\n\t{\n\t\tthis.hasClicked = true;\n\t\tthis.controls.autoRotate = false;\n\t}\n\n\toptions()\n\t{\n\t\treturn this.options;\n\t}\n\n\tgetModel()\n\t{\n\t\treturn this.model;\n\t}\n\n\tgetScene()\n\t{\n\t\treturn this.scene;\n\t}\n\n\tgetController()\n\t{\n\t\treturn this.controller;\n\t}\n\n\tgetCamera()\n\t{\n\t\treturn this.camera;\n\t}\n\n\n\t/*\n\t * This method name conflicts with a variable so changing it to a different\n\t * name needsUpdate() { this.needsUpdate = true; }\n\t */\n\n\tensureNeedsUpdate()\n\t{\n\t\tthis.needsUpdate = true;\n\t}\n\n\trotatePressed()\n\t{\n\t\tthis.controller.rotatePressed();\n\t}\n\n\trotateReleased()\n\t{\n\t\tthis.controller.rotateReleased();\n\t}\n\n\tsetCursorStyle(cursorStyle)\n\t{\n\t\tthis.domElement.style.cursor = cursorStyle;\n\t}\n\n\tupdateWindowSize()\n\t{\n\t\tvar scope = this;\n\n\t\tscope.heightMargin = scope.element.offset().top;\n\t\tscope.widthMargin = scope.element.offset().left;\n\t\tscope.elementWidth = scope.element.innerWidth();\n\n\t\tif (scope.options.resize)\n\t\t{\n\t\t\tscope.elementHeight = window.innerHeight - scope.heightMargin;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscope.elementHeight = scope.element.innerHeight();\n\t\t}\n\n\t\tscope.orthocamera.left = -window.innerWidth / 1.0;\n\t\tscope.orthocamera.right = window.innerWidth / 1.0;\n\t\tscope.orthocamera.top = window.innerHeight / 1.0;\n\t\tscope.orthocamera.bottom = -window.innerHeight / 1.0;\n\t\tscope.orthocamera.updateProjectionMatrix();\n\n\t\tscope.perspectivecamera.aspect = scope.elementWidth / scope.elementHeight;\n\t\tscope.perspectivecamera.updateProjectionMatrix();\n\n\t\tscope.fpscamera.aspect = scope.elementWidth / scope.elementHeight;\n\t\tscope.fpscamera.updateProjectionMatrix();\n\n\t\tscope.renderer.setSize(scope.elementWidth, scope.elementHeight);\n\t\tscope.needsUpdate = true;\n\t}\n\n\tcenterCamera()\n\t{\n\t\tvar scope = this;\n\t\tvar yOffset = 150.0;\n\t\tvar pan = scope.model.floorplan.getCenter();\n\t\tpan.y = yOffset;\n\t\tscope.controls.target = pan;\n\t\tvar distance = scope.model.floorplan.getSize().z * 1.5;\n\t\tvar offset = pan.clone().add(new Vector3(0, distance, distance));\n\t\t// scope.controls.setOffset(offset);\n\t\tscope.camera.position.copy(offset);\n\t\tscope.controls.update();\n\t}\n\n\t// projects the object's center point into x,y screen coords\n\t// x,y are relative to top left corner of viewer\n\tprojectVector(vec3, ignoreMargin)\n\t{\n\t\tvar scope = this;\n\t\tignoreMargin = ignoreMargin || false;\n\t\tvar widthHalf = scope.elementWidth / 2;\n\t\tvar heightHalf = scope.elementHeight / 2;\n\t\tvar vector = new Vector3();\n\t\tvector.copy(vec3);\n\t\tvector.project(scope.camera);\n\n\t\tvar vec2 = new Vector2();\n\t\tvec2.x = (vector.x * widthHalf) + widthHalf;\n\t\tvec2.y = - (vector.y * heightHalf) + heightHalf;\n\t\tif (!ignoreMargin)\n\t\t{\n\t\t\tvec2.x += scope.widthMargin;\n\t\t\tvec2.y += scope.heightMargin;\n\t\t}\n\t\treturn vec2;\n\t}\n\n\tsceneGraph(obj)\n\t{\n\t\tconsole.group( ' <%o> ' + obj.name, obj );\n\t\tobj.children.forEach( this.sceneGraph );\n\t\tconsole.groupEnd();\n\t}\n\n\tswitchWireframe(flag)\n\t{\n\t\tthis.model.switchWireframe(flag);\n\t\tthis.floorplan.switchWireframe(flag);\n\t\tthis.render(true);\n\t}\n\n\tpauseTheRendering(flag)\n\t{\n\t\tthis.pauseRender = flag;\n\t}\n\n\tswitchView(viewpoint)\n\t{\n\t\tvar center = this.model.floorplan.getCenter();\n\t\tvar size = this.model.floorplan.getSize();\n\t\tvar distance = this.controls.object.position.distanceTo(this.controls.target);\n\t\tthis.controls.target.copy(center);\n\n\t\tswitch(viewpoint)\n\t\t{\n\t\tcase VIEW_TOP:\n\t\t\tcenter.y = 1000;\n\t\t\tthis.dispatchEvent({type:EVENT_CAMERA_VIEW_CHANGE, view: VIEW_TOP});\n\t\t\tbreak;\n\t\tcase VIEW_FRONT:\n\t\t\tcenter.z = center.z - (size.z*0.5) - distance;\n\t\t\tthis.dispatchEvent({type:EVENT_CAMERA_VIEW_CHANGE, view: VIEW_FRONT});\n\t\t\tbreak;\n\t\tcase VIEW_RIGHT:\n\t\t\tcenter.x = center.x + (size.x*0.5) + distance;\n\t\t\tthis.dispatchEvent({type:EVENT_CAMERA_VIEW_CHANGE, view: VIEW_RIGHT});\n\t\t\tbreak;\n\t\tcase VIEW_LEFT:\n\t\t\tcenter.x = center.x - (size.x*0.5) - distance;\n\t\t\tthis.dispatchEvent({type:EVENT_CAMERA_VIEW_CHANGE, view: VIEW_LEFT});\n\t\t\tbreak;\n\t\tcase VIEW_ISOMETRY:\n\t\tdefault:\n\t\t\tcenter.x += distance;\n\t\t\tcenter.y += distance;\n\t\t\tcenter.z += distance;\n\t\t\tthis.dispatchEvent({type:EVENT_CAMERA_VIEW_CHANGE, view: VIEW_ISOMETRY});\n\t\t}\n\t\tthis.camera.position.copy(center);\n\t\tthis.controls.dispatchEvent({type:EVENT_CAMERA_ACTIVE_STATUS});\n\t\tthis.controls.needsUpdate = true;\n\t\tthis.controls.update();\n\t\tthis.render(true);\n\t}\n\n\tlockView(locked)\n\t{\n\t\tthis.controls.enableRotate = locked;\n\t\tthis.render(true);\n\t}\n\n\t// Send in a value between -1 to 1\n\tchangeClippingPlanes(clipRatio, clipRatio2)\n\t{\n\t\tvar size = this.model.floorplan.getSize();\n\t\tsize.z = size.z + (size.z * 0.25);\n\t\tsize.z = size.z * 0.5;\n\t\tthis.clippingPlaneActive.constant = (this.model.floorplan.getSize().z * clipRatio);\n\t\tthis.clippingPlaneActive2.constant = (this.model.floorplan.getSize().z * clipRatio2);\n\n\t\tif(!this.clippingEnabled)\n\t\t{\n\t\t\tthis.clippingEnabled = true;\n\t\t\tthis.renderer.clippingPlanes = this.globalClippingPlane;\n\t\t}\n\t\tthis.controls.dispatchEvent({type:EVENT_CAMERA_ACTIVE_STATUS});\n\t\tthis.controls.needsUpdate = true;\n\t\tthis.controls.update();\n\t\tthis.render(true);\n\t}\n\n\tresetClipping()\n\t{\n\t\tthis.clippingEnabled = false;\n\t\tthis.renderer.clippingPlanes = this.clippingEmpty;\n\t\tthis.controls.needsUpdate = true;\n\t\tthis.controls.update();\n\t\tthis.render(true);\n\t}\n\n\tswitchOrthographicMode(flag)\n\t{\n\t\tif(flag)\n\t\t{\n\t\t\tthis.camera = this.orthocamera;\n\t\t\tthis.camera.position.copy(this.perspectivecamera.position.clone());\n\t\t\tthis.controls.object = this.camera;\n\t\t\tthis.controller.changeCamera(this.camera);\n\t\t\tthis.controls.needsUpdate = true;\n\t\t\tthis.controls.update();\n\t\t\tthis.render(true);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.camera = this.perspectivecamera;\n\t\tthis.camera.position.copy(this.orthocamera.position.clone());\n\t\tthis.controls.object = this.camera;\n\t\tthis.controller.changeCamera(this.camera);\n\t\tthis.controls.needsUpdate = true;\n\t\tthis.controls.update();\n\t\tthis.render(true);\n\t}\n\n\tswitchFPSMode(flag)\n\t{\n\t\tthis.firstpersonmode = flag;\n\t\tthis.fpscontrols.enabled = flag;\n\t\tthis.controls.enabled = !flag;\n\t\tthis.controller.enabled = !flag;\n\t\tthis.controls.dispatchEvent({type:EVENT_CAMERA_ACTIVE_STATUS});\n\n\t\tif(flag)\n\t\t{\n\t\t\tthis.skybox.toggleEnvironment(true);\n\t\t\tthis.fpscontrols.lock();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.skybox.toggleEnvironment(false);\n\t\t\tthis.fpscontrols.unlock();\n\t\t}\n\n\t\tthis.model.switchWireframe(false);\n\t\tthis.floorplan.switchWireframe(false);\n\t\tthis.render(true);\n\t}\n\n\tshouldRender()\n\t{\n\t\tvar scope = this;\n\t\t// Do we need to draw a new frame\n\t\tif (scope.controls.needsUpdate || scope.controller.needsUpdate || scope.needsUpdate || scope.model.scene.needsUpdate)\n\t\t{\n\t\t\tscope.controls.needsUpdate = false;\n\t\t\tscope.controller.needsUpdate = false;\n\t\t\tscope.needsUpdate = false;\n\t\t\tscope.model.scene.needsUpdate = false;\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\trendervr()\n\t{\n\n\t}\n\n\trender(forced)\n\t{\n\t\tvar scope = this;\n\t\tforced = (forced)? forced : false;\n\t\tif(this.pauseRender && !forced)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tscope.spin();\n\t\tif(scope.firstpersonmode)\n\t\t{\n\t\t\tscope.fpscontrols.update(scope.fpsclock.getDelta());\n\t\t\tscope.renderer.render(scope.scene.getScene(), scope.fpscamera);\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(this.shouldRender() || forced)\n\t\t\t{\n\t\t\t\tscope.renderer.render(scope.scene.getScene(), scope.camera);\n\t\t\t}\n\t\t}\n\t\tscope.lastRender = Date.now();\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1260,
    "kind": "class",
    "name": "Main",
    "memberof": "scripts/three/main.js",
    "static": true,
    "longname": "scripts/three/main.js~Main",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/main.js",
    "importStyle": "{Main}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1261,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1262,
    "kind": "member",
    "name": "pauseRender",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#pauseRender",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1263,
    "kind": "member",
    "name": "model",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#model",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1264,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#scene",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1265,
    "kind": "member",
    "name": "element",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#element",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1266,
    "kind": "member",
    "name": "canvasElement",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#canvasElement",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1268,
    "kind": "member",
    "name": "domElement",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#domElement",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1269,
    "kind": "member",
    "name": "orthocamera",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#orthocamera",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1270,
    "kind": "member",
    "name": "perspectivecamera",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#perspectivecamera",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1271,
    "kind": "member",
    "name": "camera",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#camera",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1272,
    "kind": "member",
    "name": "savedcameraposition",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#savedcameraposition",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1273,
    "kind": "member",
    "name": "fpscamera",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#fpscamera",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1274,
    "kind": "member",
    "name": "cameraNear",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#cameraNear",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1275,
    "kind": "member",
    "name": "cameraFar",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#cameraFar",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1276,
    "kind": "member",
    "name": "controls",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#controls",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1277,
    "kind": "member",
    "name": "fpscontrols",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#fpscontrols",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1278,
    "kind": "member",
    "name": "fpsclock",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#fpsclock",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1279,
    "kind": "member",
    "name": "firstpersonmode",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#firstpersonmode",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1280,
    "kind": "member",
    "name": "renderer",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#renderer",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1281,
    "kind": "member",
    "name": "controller",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#controller",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1282,
    "kind": "member",
    "name": "needsUpdate",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#needsUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1283,
    "kind": "member",
    "name": "lastRender",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#lastRender",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1284,
    "kind": "member",
    "name": "mouseOver",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#mouseOver",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1285,
    "kind": "member",
    "name": "hasClicked",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#hasClicked",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1286,
    "kind": "member",
    "name": "hud",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#hud",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1287,
    "kind": "member",
    "name": "heightMargin",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#heightMargin",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1288,
    "kind": "member",
    "name": "widthMargin",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#widthMargin",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1289,
    "kind": "member",
    "name": "elementHeight",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#elementHeight",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1290,
    "kind": "member",
    "name": "elementWidth",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#elementWidth",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1291,
    "kind": "member",
    "name": "itemSelectedCallbacks",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#itemSelectedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1292,
    "kind": "member",
    "name": "itemUnselectedCallbacks",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#itemUnselectedCallbacks",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1293,
    "kind": "member",
    "name": "wallClicked",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#wallClicked",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1294,
    "kind": "member",
    "name": "floorClicked",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#floorClicked",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1295,
    "kind": "member",
    "name": "nothingClicked",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#nothingClicked",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1296,
    "kind": "member",
    "name": "floorplan",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#floorplan",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1297,
    "kind": "member",
    "name": "updatedevent",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#updatedevent",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1298,
    "kind": "member",
    "name": "gltfreadyevent",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#gltfreadyevent",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1299,
    "kind": "member",
    "name": "clippingPlaneActive",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#clippingPlaneActive",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1300,
    "kind": "member",
    "name": "clippingPlaneActive2",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#clippingPlaneActive2",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1301,
    "kind": "member",
    "name": "globalClippingPlane",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#globalClippingPlane",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 1302,
    "kind": "member",
    "name": "clippingEmpty",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#clippingEmpty",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1303,
    "kind": "member",
    "name": "clippingEnabled",
    "memberof": "scripts/three/main.js~Main",
    "static": false,
    "longname": "scripts/three/main.js~Main#clippingEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1304,
    "kind": "method",
    "name": "getARenderer",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#getARenderer",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1305,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#init",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1306,
    "kind": "method",
    "name": "exportForBlender",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#exportForBlender",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1307,
    "kind": "method",
    "name": "gltfReady",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#gltfReady",
    "access": "public",
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1308,
    "kind": "method",
    "name": "itemIsSelected",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#itemIsSelected",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1309,
    "kind": "method",
    "name": "itemIsUnselected",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#itemIsUnselected",
    "access": "public",
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1310,
    "kind": "method",
    "name": "wallIsClicked",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#wallIsClicked",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [
      {
        "name": "wall",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1311,
    "kind": "method",
    "name": "floorIsClicked",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#floorIsClicked",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "params": [
      {
        "name": "item",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1312,
    "kind": "method",
    "name": "nothingIsClicked",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#nothingIsClicked",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1313,
    "kind": "method",
    "name": "spin",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#spin",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1314,
    "kind": "method",
    "name": "dataUrl",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#dataUrl",
    "access": "public",
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1315,
    "kind": "method",
    "name": "stopSpin",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#stopSpin",
    "access": "public",
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1317,
    "kind": "method",
    "name": "options",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#options",
    "access": "public",
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1318,
    "kind": "method",
    "name": "getModel",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#getModel",
    "access": "public",
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1319,
    "kind": "method",
    "name": "getScene",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#getScene",
    "access": "public",
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1320,
    "kind": "method",
    "name": "getController",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#getController",
    "access": "public",
    "description": null,
    "lineNumber": 265,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1321,
    "kind": "method",
    "name": "getCamera",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#getCamera",
    "access": "public",
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1322,
    "kind": "method",
    "name": "ensureNeedsUpdate",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#ensureNeedsUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 281,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1324,
    "kind": "method",
    "name": "rotatePressed",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#rotatePressed",
    "access": "public",
    "description": null,
    "lineNumber": 286,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1325,
    "kind": "method",
    "name": "rotateReleased",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#rotateReleased",
    "access": "public",
    "description": null,
    "lineNumber": 291,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1326,
    "kind": "method",
    "name": "setCursorStyle",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#setCursorStyle",
    "access": "public",
    "description": null,
    "lineNumber": 296,
    "undocument": true,
    "params": [
      {
        "name": "cursorStyle",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1327,
    "kind": "method",
    "name": "updateWindowSize",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#updateWindowSize",
    "access": "public",
    "description": null,
    "lineNumber": 301,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1328,
    "kind": "method",
    "name": "centerCamera",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#centerCamera",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1329,
    "kind": "method",
    "name": "projectVector",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#projectVector",
    "access": "public",
    "description": null,
    "lineNumber": 350,
    "undocument": true,
    "params": [
      {
        "name": "vec3",
        "types": [
          "*"
        ]
      },
      {
        "name": "ignoreMargin",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1330,
    "kind": "method",
    "name": "sceneGraph",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#sceneGraph",
    "access": "public",
    "description": null,
    "lineNumber": 371,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1331,
    "kind": "method",
    "name": "switchWireframe",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#switchWireframe",
    "access": "public",
    "description": null,
    "lineNumber": 378,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1332,
    "kind": "method",
    "name": "pauseTheRendering",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#pauseTheRendering",
    "access": "public",
    "description": null,
    "lineNumber": 385,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1334,
    "kind": "method",
    "name": "switchView",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#switchView",
    "access": "public",
    "description": null,
    "lineNumber": 390,
    "undocument": true,
    "params": [
      {
        "name": "viewpoint",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1335,
    "kind": "method",
    "name": "lockView",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#lockView",
    "access": "public",
    "description": null,
    "lineNumber": 429,
    "undocument": true,
    "params": [
      {
        "name": "locked",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1336,
    "kind": "method",
    "name": "changeClippingPlanes",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#changeClippingPlanes",
    "access": "public",
    "description": null,
    "lineNumber": 436,
    "undocument": true,
    "params": [
      {
        "name": "clipRatio",
        "types": [
          "*"
        ]
      },
      {
        "name": "clipRatio2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1338,
    "kind": "method",
    "name": "resetClipping",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#resetClipping",
    "access": "public",
    "description": null,
    "lineNumber": 455,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1340,
    "kind": "method",
    "name": "switchOrthographicMode",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#switchOrthographicMode",
    "access": "public",
    "description": null,
    "lineNumber": 464,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1343,
    "kind": "method",
    "name": "switchFPSMode",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#switchFPSMode",
    "access": "public",
    "description": null,
    "lineNumber": 487,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1345,
    "kind": "method",
    "name": "shouldRender",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#shouldRender",
    "access": "public",
    "description": null,
    "lineNumber": 511,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1346,
    "kind": "method",
    "name": "rendervr",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#rendervr",
    "access": "public",
    "description": null,
    "lineNumber": 529,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 1347,
    "kind": "method",
    "name": "render",
    "memberof": "scripts/three/main.js~Main",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/main.js~Main#render",
    "access": "public",
    "description": null,
    "lineNumber": 534,
    "undocument": true,
    "params": [
      {
        "name": "forced",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1348,
    "kind": "file",
    "name": "scripts/three/orbitcontrols.js",
    "content": "import {EventDispatcher, Vector2, Vector3, Spherical, MOUSE, Quaternion, } from 'three';\nimport {EVENT_CAMERA_MOVED} from '../core/events.js';\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by\n// default).\n\n// Orbit - left mouse / touch: one-finger move\n// Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n// Pan - right mouse, or left mouse + ctrl/metaKey, or arrow keys / touch:\n// two-finger move\n\nfunction OrbitControls( object, domElement ) \n{\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\tthis.needsUpdate = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation\n\t// loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t// backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your\n\t// animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.LEFT, MIDDLE: MOUSE.MIDDLE, RIGHT: MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\t\tscope.dispatchEvent({type:EVENT_CAMERA_MOVED});\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it\n\t// private...\n\tthis.update = function () {\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged || lastPosition.distanceToSquared( scope.object.position ) > EPS || 8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) \n\t\t\t{\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\t\t\t\tscope.dispatchEvent({type:EVENT_CAMERA_MOVED});\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.needsUpdate = false;\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t// scope.dispatchEvent( { type: 'dispose' } ); // should this be added\n\t\t// here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of\n\t\t\t// objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not\n\t\t\t\t// distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t// console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t// console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t// console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t// console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes,\n\t\t// height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t// console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t// console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /* event */ ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tswitch ( event.keyCode ) {\n\n\t\tcase scope.keys.UP:\n\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase scope.keys.BOTTOM:\n\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase scope.keys.LEFT:\n\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\tcase scope.keys.RIGHT:\n\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\tscope.update();\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t// console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t// console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t// console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes,\n\t\t// height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t// console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( /* event */ ) {\n\n\t\t// console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.button ) {\n\n\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\tif ( event.ctrlKey || event.metaKey ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseDownDolly( event );\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseDownPan( event );\n\n\t\t\tstate = STATE.PAN;\n\n\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\t\tif ( scope.enabled === false ) return;\n\t\t\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\tcase STATE.ROTATE:\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase STATE.DOLLY:\n\n\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\thandleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase STATE.PAN:\n\n\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\thandleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\thandleTouchStartRotate( event );\n\n\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\tbreak;\n\n\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\thandleTouchMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this\n\t\t\t// needed?\n\n\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n}\n\nOrbitControls.prototype = Object.assign(Object.create( EventDispatcher.prototype ), {\n\tconstructor: OrbitControls,\n\tcenter: \n\t{\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\t\t}\n\t},\n\n\t// backward compatibility\n\tnoZoom: \n\t{\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\t\t},\n\t\tset: function ( value ) \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\t\t}\n\n\t},\n\n\tnoRotate: \n\t{\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\t\t},\n\n\t\tset: function ( value ) \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\t\t}\n\t},\n\n\tnoPan: \n\t{\n\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\t\t},\n\n\t\tset: function ( value ) \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\t\t}\n\t},\n\n\tnoKeys: \n\t{\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\t\t},\n\t\tset: function ( value ) \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\t\t}\n\t},\n\n\tstaticMoving: \n\t{\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\t\t},\n\n\t\tset: function ( value ) \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\t\t}\n\t},\n\n\tdynamicDampingFactor: \n\t{\n\t\tget: function () \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\t\t},\n\n\t\tset: function ( value ) \n\t\t{\n\t\t\tconsole.warn( 'OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\t\t}\n\t}\n});\n\nexport {OrbitControls};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/orbitcontrols.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1349,
    "kind": "function",
    "name": "OrbitControls",
    "memberof": "scripts/three/orbitcontrols.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/three/orbitcontrols.js~OrbitControls",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/orbitcontrols.js",
    "importStyle": "{OrbitControls}",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "qiao / https://github.com/qiao"
      },
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com"
      },
      {
        "tagName": "@author",
        "tagValue": "alteredq / http://alteredqualia.com/"
      },
      {
        "tagName": "@author",
        "tagValue": "WestLangley / http://github.com/WestLangley"
      },
      {
        "tagName": "@author",
        "tagValue": "erich666 / http://erichaines.com"
      }
    ],
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "domElement",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1350,
    "kind": "file",
    "name": "scripts/three/pointerlockcontrols.js",
    "content": "import * as THREE from 'three';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction PointerLockControls( camera, domElement ) {\n\n\tvar scope = this;\n\n\tthis.domElement = domElement || document.body;\n\tthis.enabled = false;\n\tthis.isLocked = true;\n\tthis.walkspeed = 3000;\n\tthis.lookspeed = 0.002;\n\tthis.characterHeight = 125;\n\n\tcamera.rotation.set( 0, 0, 0 );\n\n\tvar pitchObject = new THREE.Object3D();\n\tpitchObject.add( camera );\n\n\tvar yawObject = new THREE.Object3D();\n\tyawObject.position.y = this.characterHeight;\n\tyawObject.add( pitchObject );\n\n\tvar PI_2 = Math.PI / 2;\n\t\n\tvar moveForward = false;\n\tvar moveBackward = false;\n\tvar moveLeft = false;\n\tvar moveRight = false;\n\tvar canJump = false;\n\t\n\tvar velocity = new THREE.Vector3();\n\tvar direction = new THREE.Vector3();\n\t\n\tfunction onMouseDown( ) \n\t{\n\t\tif(scope.enabled && !scope.isLocked)\n\t\t{\n//\t\t\tscope.lock();\n\t\t}\n\t}\n\t\n\tfunction onMouseMove( event ) \n\t{\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n\t\tvar movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n\n\t\tyawObject.rotation.y -= movementX * scope.lookspeed;\n\t\tpitchObject.rotation.x -= movementY * scope.lookspeed;\n\n\t\tpitchObject.rotation.x = Math.max( - PI_2, Math.min( PI_2, pitchObject.rotation.x ) );\n\n\t}\t\n\t\n\tfunction onKeyDown( event ) {\n\t\tif ( scope.enabled === false ) return;\n\t\tswitch ( event.keyCode ) {\n\n\t\tcase 38: // up\n\t\tcase 87: // w\n\t\t\tmoveForward = true;\n\t\t\tbreak;\n\n\t\tcase 37: // left\n\t\tcase 65: // a\n\t\t\tmoveLeft = true; break;\n\n\t\tcase 40: // down\n\t\tcase 83: // s\n\t\t\tmoveBackward = true;\n\t\t\tbreak;\n\n\t\tcase 39: // right\n\t\tcase 68: // d\n\t\t\tmoveRight = true;\n\t\t\tbreak;\n\n\t\tcase 32: // space\n\t\t\tif ( canJump === true )\n\t\t\t{\n\t\t\t\tvelocity.y += 350;\n\t\t\t}\n\t\t\tcanJump = false;\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onKeyUp( event ) {\n\t\tif ( scope.enabled === false ) return;\n\t\tswitch( event.keyCode ) {\n\n\t\tcase 38: // up\n\t\tcase 87: // w\n\t\t\tmoveForward = false;\n\t\t\tbreak;\n\n\t\tcase 37: // left\n\t\tcase 65: // a\n\t\t\tmoveLeft = false;\n\t\t\tbreak;\n\n\t\tcase 40: // down\n\t\tcase 83: // s\n\t\t\tmoveBackward = false;\n\t\t\tbreak;\n\n\t\tcase 39: // right\n\t\tcase 68: // d\n\t\t\tmoveRight = false;\n\t\t\tbreak;\n\n\t\t}\n\t}\n\t\n\tthis.update = function(delta2)\n\t{\n\t\tvar delta = delta2;\n\t\t\n\t\tvelocity.x -= velocity.x * 10.0 * delta;\n\t\tvelocity.z -= velocity.z * 10.0 * delta;\n\n\t\tvelocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\n\n\t\tdirection.z = Number( moveForward ) - Number( moveBackward );\n\t\tdirection.x = Number( moveLeft ) - Number( moveRight );\n\t\tdirection.normalize(); // this ensures consistent movements in all directions\n\n\t\tif ( moveForward || moveBackward ) velocity.z -= direction.z * this.walkspeed * delta;\n\t\tif ( moveLeft || moveRight ) velocity.x -= direction.x * this.walkspeed * delta;\n\n\t\tscope.getObject().translateX( velocity.x * delta );\n\t\tscope.getObject().translateY( (velocity.y * delta));\n\t\tscope.getObject().translateZ( velocity.z * delta );\n\n\t\tif ( scope.getObject().position.y <  scope.characterHeight ) \n\t\t{\n\t\t\tvelocity.y = 0;\n\t\t\tscope.getObject().position.y = scope.characterHeight; \n\t\t\tcanJump = true;\n\t\t}\n\t};\n\t\n\tfunction onPointerlockChange() {\n\n\t\tif ( document.pointerLockElement === scope.domElement ) {\n\n\t\t\tscope.dispatchEvent( { type: 'lock' } );\n\t\t\tscope.isLocked = true;\n\n\t\t} else {\n\n\t\t\tscope.dispatchEvent( { type: 'unlock' } );\n\n\t\t\tscope.isLocked = false;\n\n\t\t}\n\n\t}\n\n\tfunction onPointerlockError() {\n\n\t\tconsole.error( 'THREE.PointerLockControls: Unable to use Pointer Lock API' );\n\n\t}\n\n\tthis.connect = function () {\n\t\t\n\t\tdocument.addEventListener( 'keydown', onKeyDown, false );\n\t\tdocument.addEventListener( 'keyup', onKeyUp, false );\n\t\tdocument.addEventListener( 'mousedown', onMouseDown, false );\n\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.addEventListener( 'pointerlockchange', onPointerlockChange, false );\n\t\tdocument.addEventListener( 'pointerlockerror', onPointerlockError, false );\n\n\t};\n\n\tthis.disconnect = function () {\n\t\tdocument.addEventListener( 'keydown', onKeyDown, false );\n\t\tdocument.addEventListener( 'keyup', onKeyUp, false );\n\t\tdocument.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'pointerlockchange', onPointerlockChange, false );\n\t\tdocument.removeEventListener( 'pointerlockerror', onPointerlockError, false );\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tthis.disconnect();\n\n\t};\n\n\tthis.getObject = function () {\n\n\t\treturn yawObject;\n\n\t};\n\n\tthis.getDirection = function () {\n\n\t\t// assumes the camera itself is not rotated\n\n\t\tvar direction = new THREE.Vector3( 0, 0, - 1 );\n\t\tvar rotation = new THREE.Euler( 0, 0, 0, 'YXZ' );\n\n\t\treturn function ( v ) {\n\n\t\t\trotation.set( pitchObject.rotation.x, yawObject.rotation.y, 0 );\n\n\t\t\tv.copy( direction ).applyEuler( rotation );\n\n\t\t\treturn v;\n\n\t\t};\n\n\t}();\n\tthis.lock = function () {\n\t\tthis.domElement.requestPointerLock();\n\t\tvar i = this.domElement;\n\t\tif (i.requestFullscreen) {\n\t\t\ti.requestFullscreen();\n\t\t} else if (i.webkitRequestFullscreen) {\n\t\t\ti.webkitRequestFullscreen();\n\t\t} else if (i.mozRequestFullScreen) {\n\t\t\ti.mozRequestFullScreen();\n\t\t} else if (i.msRequestFullscreen) {\n\t\t\ti.msRequestFullscreen();\n\t\t}\n\n\t};\n\n\tthis.unlock = function () {\n\t\tif(document.exitPointerLock)\n\t\t{\n\t\t\tdocument.exitPointerLock();\n\t\t}\n\t\t\n\n\t};\n\t\n\tthis.connect();\n\n}\nPointerLockControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nPointerLockControls.prototype.constructor = PointerLockControls;\n\nexport {PointerLockControls};\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/pointerlockcontrols.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1351,
    "kind": "function",
    "name": "PointerLockControls",
    "memberof": "scripts/three/pointerlockcontrols.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "scripts/three/pointerlockcontrols.js~PointerLockControls",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/pointerlockcontrols.js",
    "importStyle": "{PointerLockControls}",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com/"
      },
      {
        "tagName": "@author",
        "tagValue": "Mugen87 / https://github.com/Mugen87"
      }
    ],
    "params": [
      {
        "name": "camera",
        "types": [
          "*"
        ]
      },
      {
        "name": "domElement",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1352,
    "kind": "file",
    "name": "scripts/three/skybox.js",
    "content": "import {EventDispatcher, PlaneGeometry, SphereGeometry, MeshBasicMaterial, ShaderMaterial, Mesh, TextureLoader, Color, DoubleSide} from 'three';\nimport {RepeatWrapping} from 'three';\nimport {GroundSceneReflector} from 'three-reflector2';\n\nimport {AxesHelper} from 'three';\n\nexport class Skybox extends EventDispatcher\n{\n\tconstructor(scene, renderer)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis.defaultEnvironment = 'rooms/textures/envs/Garden.png';\n\t\tthis.useEnvironment = false;\n\t\tthis.topColor = 0x92b2ce;//0xe9e9e9; //0xf9f9f9;//0x565e63\n\t\tthis.bottomColor = 0xffffff;//0xD8ECF9\n\t\tthis.verticalOffset = 400;\n\t\tthis.exponent = 0.5;\n\t\t\n\t\tvar uniforms = {topColor: {type: 'c',value: new Color(this.topColor)},bottomColor: {type: 'c',value: new Color(this.bottomColor)},offset: {type: 'f',value: this.verticalOffset}, exponent: {type:'f', value: this.exponent}};\n\t\t\n\t\tthis.scene = scene;\n\t\tthis.renderer = renderer;\n\t\t\n\t\tthis.sphereRadius = 4000;\n\t\tthis.widthSegments = 32;\n\t\tthis.heightSegments = 15;\n\t\tthis.sky = null;\n\n\t\tthis.plainVertexShader = ['varying vec3 vWorldPosition;','void main() {','vec4 worldPosition = modelMatrix * vec4( position, 1.0 );','vWorldPosition = worldPosition.xyz;','gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0 );','}'].join('\\n');\n\t\tthis.plainFragmentShader = ['uniform vec3 bottomColor;','uniform vec3 topColor;','uniform float offset;','uniform float exponent;','varying vec3 vWorldPosition;','void main() {',' float h = normalize( vWorldPosition + offset ).y;',' gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max(h, 0.0 ), exponent ), 0.0 ) ), 1.0 );','}'].join('\\n');\n\t\t\n\t\tthis.vertexShader = ['varying vec2 vUV;','void main() {','  vUV=uv;','  vec4 pos = vec4(position, 1.0);', '   gl_Position = projectionMatrix * modelViewMatrix * pos;','}'].join('\\n');\n\t\tthis.fragmentShader = ['uniform sampler2D texture;', 'varying vec2 vUV;', 'void main() {  ', 'vec4 sample = texture2D(texture, vUV);', 'gl_FragColor = vec4(sample.xyz, sample.w);' ,'}'].join('\\n');\n\t\t\n\t\tthis.texture = new TextureLoader();\n\t\tthis.plainSkyMat = new ShaderMaterial({vertexShader: this.plainVertexShader,fragmentShader: this.plainFragmentShader,uniforms: uniforms, side: DoubleSide});\n\t\tthis.skyMat = undefined;\n\t\t\n\t\tthis.skyGeo = new SphereGeometry(this.sphereRadius, this.widthSegments, this.heightSegments);\n\t\tthis.sky = new Mesh(this.skyGeo, this.skyMat);\n//\t\tthis.sky.position.x += this.sphereRadius*0.5;\n\t\t\n\t\t\n\t\tvar groundT = new TextureLoader().load('rooms/textures/Ground_4K.jpg', function(){});\t\t\n\t\tgroundT.wrapS = groundT.wrapT = RepeatWrapping;\n\t\tgroundT.repeat.set(10,10);\n\t\t\n//\t\tvar uniforms2 = {topColor: {type: 'c',value: new Color(0xFFFFFF)},bottomColor: {type: 'c',value: new Color(0x999999)},offset: {type: 'f',value: this.verticalOffset}, exponent: {type:'f', value: this.exponent}};\n\t\tthis.groundGeo = new PlaneGeometry(10000, 10000, 10);\n\t\tthis.groundMat = new MeshBasicMaterial({color: 0xEAEAEA, side: DoubleSide, map:groundT });\n\t\tthis.ground = new Mesh(this.groundGeo, this.groundMat);\n\t\tthis.ground.rotateX(-Math.PI * 0.5);\n\t\tthis.ground.position.y = -1;\n\t\t\n\t\tthis.groundSceneReflector = new GroundSceneReflector(this.ground, this.renderer, this.scene,{textureOne:'rooms/textures/Ground_4K.jpg', textureTwo:'rooms/textures/GroundRough.jpg', wrapOne:{x:40, y:40}, wrapTwo:{x:50, y:50}, textureWidth: 512, textureHeight: 512, intensity: 0.1, blendIntensity: 0.05});\n\t\t\n\t\tthis.scene.add(this.sky);\n\t\tthis.scene.add(this.ground);\n\t\t\n\t\tvar axesHelper = new AxesHelper( 100 );\n\t\tthis.scene.add( axesHelper );\n\t\t\n\t\tthis.init();\n\t}\n\t\n\tsetEnabled(flag)\n\t{\n\t\tif(!flag)\n\t\t{\n\t\t\tthis.scene.remove(this.sky);\n\t\t\tthis.scene.remove(this.ground);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.scene.add(this.sky);\n\t\t\tthis.scene.add(this.ground);\n\t\t}\n//\t\tthis.sky.visible = this.ground.visible = flag;\n\t}\n\t\n\ttoggleEnvironment(flag)\n\t{\n\t\tthis.useEnvironment = flag;\n\t\tif(!flag)\n\t\t{\n\t\t\tthis.ground.visible = true;\n\t\t\tthis.sky.material = this.plainSkyMat;\n\t\t\tthis.sky.material.needsUpdate = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.ground.visible = false;\n\t\t\tif(!this.skyMat)\n\t\t\t{\n\t\t\t\tthis.setEnvironmentMap(this.defaultEnvironment);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.sky.material = this.skyMat;\n\t\t\t}\n\t\t\tthis.sky.visible = true;\n\t\t}\n\t\tconsole.log('NOW UPDATE THE SCENE');\n\t\tthis.scene.needsUpdate = true;\n\t}\n\t\n\tsetEnvironmentMap(url)\n\t{\n\t\tvar scope = this;\n\t\tscope.texture.load(url, function (t)\n\t\t{\n\t\t\tvar textureUniform = {type: 't', value: t};\n\t\t\tvar uniforms = {texture: textureUniform};\n\t\t\tscope.skyMat = new ShaderMaterial({vertexShader: scope.vertexShader, fragmentShader: scope.fragmentShader, uniforms: uniforms, side: DoubleSide});\n\t\t\tscope.toggleEnvironment(scope.useEnvironment);\t\t\t\n\t\t}, undefined, function()\n\t\t{\n\t\t\tconsole.log('ERROR LOADEING FILE');\n\t\t});\n\t}\n\t\n\tinit() \n\t{\t\t\n\t\tthis.toggleEnvironment(false);\n\t}\n}\n",
    "static": true,
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/src/scripts/three/skybox.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1353,
    "kind": "class",
    "name": "Skybox",
    "memberof": "scripts/three/skybox.js",
    "static": true,
    "longname": "scripts/three/skybox.js~Skybox",
    "access": "public",
    "export": true,
    "importPath": "blueprint3d-js/scripts/three/skybox.js",
    "importStyle": "{Skybox}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "three~EventDispatcher"
    ]
  },
  {
    "__docId__": 1354,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "scripts/three/skybox.js~Skybox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 1355,
    "kind": "member",
    "name": "defaultEnvironment",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#defaultEnvironment",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 1356,
    "kind": "member",
    "name": "useEnvironment",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#useEnvironment",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 1357,
    "kind": "member",
    "name": "topColor",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#topColor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1358,
    "kind": "member",
    "name": "bottomColor",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#bottomColor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1359,
    "kind": "member",
    "name": "verticalOffset",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#verticalOffset",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1360,
    "kind": "member",
    "name": "exponent",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#exponent",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1361,
    "kind": "member",
    "name": "scene",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#scene",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1362,
    "kind": "member",
    "name": "renderer",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#renderer",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1363,
    "kind": "member",
    "name": "sphereRadius",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#sphereRadius",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1364,
    "kind": "member",
    "name": "widthSegments",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#widthSegments",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1365,
    "kind": "member",
    "name": "heightSegments",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#heightSegments",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 1366,
    "kind": "member",
    "name": "sky",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#sky",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1367,
    "kind": "member",
    "name": "plainVertexShader",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#plainVertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1368,
    "kind": "member",
    "name": "plainFragmentShader",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#plainFragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1369,
    "kind": "member",
    "name": "vertexShader",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1370,
    "kind": "member",
    "name": "fragmentShader",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1371,
    "kind": "member",
    "name": "texture",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#texture",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1372,
    "kind": "member",
    "name": "plainSkyMat",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#plainSkyMat",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1373,
    "kind": "member",
    "name": "skyMat",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#skyMat",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1374,
    "kind": "member",
    "name": "skyGeo",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#skyGeo",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1376,
    "kind": "member",
    "name": "groundGeo",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#groundGeo",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1377,
    "kind": "member",
    "name": "groundMat",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#groundMat",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1378,
    "kind": "member",
    "name": "ground",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#ground",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1379,
    "kind": "member",
    "name": "groundSceneReflector",
    "memberof": "scripts/three/skybox.js~Skybox",
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#groundSceneReflector",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 1380,
    "kind": "method",
    "name": "setEnabled",
    "memberof": "scripts/three/skybox.js~Skybox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#setEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1381,
    "kind": "method",
    "name": "toggleEnvironment",
    "memberof": "scripts/three/skybox.js~Skybox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#toggleEnvironment",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "flag",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1383,
    "kind": "method",
    "name": "setEnvironmentMap",
    "memberof": "scripts/three/skybox.js~Skybox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#setEnvironmentMap",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 1384,
    "kind": "method",
    "name": "init",
    "memberof": "scripts/three/skybox.js~Skybox",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "scripts/three/skybox.js~Skybox#init",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "kind": "index",
    "content": "# README #\nThis is a javascript floorplanner tool based on the existing typescript based project [blueprint3d](https://github.com/furnishup/blueprint3d)\n\n## DEMO ##\n\n[Cick for example](https://aalavandhaann.github.io/blueprint-js/build)\n\n## DOCS ##\nYes, the initiative has begun for the documentation. Of late I have been getting inquiries on using this framework. It is time to have the documentation rolling\n[docs](https://aalavandhaann.github.io/blueprint-js/docs)\n\n## DEMO VR ##\nThe ability to export the floorplan as GLTF gives the scope of having easy VR with A-Frame. Export the layout to use it directly with A-Frame or process it further using Blender and then use it with A-Frame.\n\n[Cick for example of VR - 1](https://aalavandhaann.github.io/blueprint-js/build/vrtest)\n[VR - 2](https://aalavandhaann.github.io/blueprint-js/build/vrtest/minimal.html)\n\nYou will notice a lot of flickering in the VR mode. This is because of the overlapping materials in the floorplan.\n\n## What is this?\n\nThis is a customizable application built on three.js that allows users to design an interior space such as a home or apartment. Below are screenshots from our Example App (link above).\n\n1) Create 2D floorplan:\n\n![floorplan](./images/floorplan2d.png)\n\n2) Add items:\n\n![add_items](./images/items.png)\n\n3) Design in 3D:\n\n![3d_design](./images/floorplan3d.png)\n\n## Developing and Running Locally\n\nTo get started, clone the repository and ensure you npm >= 3 and rollup installed, then run:\n\n    npm install\n    rollup -c\n\nThe latter command generates `build/js/bp3djs.min.js` from `src`.\n\nThe easiest way to run locally is to run a local server from the `build` directory. There are plenty of options. One uses Python's built in webserver:\n\n    cd build\n\n    # Python 3.x\n    python -m http.server\n\nThen, visit `http://localhost:8000` in your browser.\n\n## Contribute!\n\nThis project and the [original project](https://github.com/furnishup/blueprint3d) requires a lot more work. If you are someone like yodha of typescript then kindly visit the original project, the author is a wonderful human being who facilitated this idea, efforts, and materials in the first place. Else you are someone like me who likes to play around with es6 then you can use this one.\n\nPlease contact us if you are interested in contributing.\n\n### Todos and hurrays on completed ones\n\n- More complete documentation of classes (This is necessary and must do for others to contribute)\n- Make it easier to build a complete application using blueprint3d (cleaner API, more inclusive base, easier integration with a backend)\n- Better serialization format for saving/loading \"designs\"\n- JQuery is not used at all, instead I used the eventdispatcher from threejs (hurray)\n- Better use of npm conventions and packaging\n- Various bug fixes  (hurray for items that are stuck and don't move)\n- refactor three/*\n- update to current threejs  (hurray)\n- introduce a more formal persistency format\n- put all relevant settings into Core.Configuration to make them read-/writeable, User settings?\n- complete type docs for all entities\n- there're a few TODO_Ekki's left, kill them all (let me know Yodha)\n\n## Directory Structure\n\n### `src/` Directory\n\nThe `src` directory contains the core of the project. Here is a description of the various sub-directories:\n\n`core` - Basic utilities such as logging and generic functions\n\n`floorplanner` - 2D view/controller for editing the floorplan\n\n`items` - Various types of items that can go in rooms\n\n`model` - Data model representing both the 2D floorplan and all of the items in it\n\n`three` - 3D view/controller for viewing and modifying item placement\n\n## Notes about changes from the original\n- Adding routines to modify the skybox images as environment (a crude implementation)\n- Otherwise the api is ditto and the same\n- Adding a BoxHelper to show selected states of items\n",
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"blueprint3d-js\",\n  \"version\": \"0.1.0\",\n  \"description\": \"This is the core framework of Blueprint-js for creating floorplans in 2d and 3d\",\n  \"main\": \"build/js/bp3djs.min.js\",\n  \"scripts\": {\n    \"build\": \"rollup -c\",\n    \"dev\": \"rollup -c -w\",\n    \"reload\": \"livereload 'build/'\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"watch\": \"npm-run-all --parallel reload dev\",\n    \"docs\": \"esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/aalavandhaann/blueprint-js.git\"\n  },\n  \"author\": \"#0K Srinivasan <ashok.srinivasan2002@gmail.com> (@aalavandhaann)\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/aalavandhaann/blueprint-js/issues\"\n  },\n  \"devDependencies\": {\n    \"babel-plugin-external-helpers\": \"^6.22.0\",\n    \"babel-preset-latest\": \"^6.24.1\",\n    \"cssnano\": \"^3.10.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^3.19.0\",\n    \"eslint-plugin-import\": \"^2.17.3\",\n    \"event-stream\": \">4.0.0\",\n    \"livereload\": \"^0.7.0\",\n    \"npm-run-all\": \"^4.0.2\",\n    \"rollup\": \"^1.6.0\",\n    \"rollup-plugin-babel\": \"^2.7.1\",\n    \"rollup-plugin-commonjs\": \"^9.3.4\",\n    \"rollup-plugin-eslint\": \"^3.0.0\",\n    \"rollup-plugin-node-resolve\": \"^3.0.0\",\n    \"rollup-plugin-postcss\": \"^0.5.3\",\n    \"rollup-plugin-replace\": \"^1.1.1\",\n    \"rollup-plugin-serve\": \"^0.3.0\",\n    \"rollup-plugin-uglify\": \"^2.0.1\",\n    \"rollup-plugin-uglify-es\": \"0.0.1\",\n    \"rollup-watch\": \"^4.0.0\"\n  },\n  \"dependencies\": {\n    \"@calvinscofield/three-objloader\": \"^1.0.4\",\n    \"braces\": \"^2.3.2\",\n    \"es6-enum\": \"^1.1.0\",\n    \"jquery\": \"^3.4.1\",\n    \"line-intersect\": \"^2.2.1\",\n    \"nodeclipse\": \"^0.17.2\",\n    \"three\": \"^0.98.0\",\n    \"three-gltf-exporter\": \"0.0.1\",\n    \"three-gltf-loader\": \"^1.105.0\",\n    \"three-reflector\": \"^1.0.2\",\n    \"three-reflector2\": \"0.0.5\"\n  }\n}\n",
    "longname": "/home/ashok/eclipse-workspace/blueprint-js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]